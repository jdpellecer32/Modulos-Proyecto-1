

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 14 10:05:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  000B                     _INTCON	set	11
   286  0006                     _PORTBbits	set	6
   287  000B                     _INTCONbits	set	11
   288  0006                     _PORTB	set	6
   289  008F                     _OSCCONbits	set	143
   290  0096                     _IOCBbits	set	150
   291  0086                     _TRISB	set	134
   292  0189                     _ANSELH	set	393
   293  0188                     _ANSEL	set	392
   294                           
   295                           ; #config settings
   296  0000                     
   297                           	psect	cinit
   298  000F                     start_initialization:	
   299  000F                     __initialization:	
   300                           
   301                           ; Clear objects allocated to COMMON
   302  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   303  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   304  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   305  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   306  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   307                           
   308                           ; Clear objects allocated to BANK0
   309  0014  1283               	bcf	3,5	;RP0=0, select bank0
   310  0015  1303               	bcf	3,6	;RP1=0, select bank0
   311  0016  01A8               	clrf	__pbssBANK0& (0+127)
   312  0017  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   313  0018                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  0018                     __end_of__initialization:	
   317  0018  0183               	clrf	3
   318  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMMON
   321  0070                     __pbssCOMMON:	
   322  0070                     _send:	
   323  0070                     	ds	1
   324  0071                     _sel:	
   325  0071                     	ds	1
   326  0072                     _dummyvar:	
   327  0072                     	ds	1
   328  0073                     _signal:	
   329  0073                     	ds	1
   330  0074                     _z:	
   331  0074                     	ds	1
   332                           
   333                           	psect	bssBANK0
   334  0028                     __pbssBANK0:	
   335  0028                     _bajar:	
   336  0028                     	ds	1
   337  0029                     _subir:	
   338  0029                     	ds	1
   339                           
   340                           	psect	cstackCOMMON
   341  0075                     __pcstackCOMMON:	
   342  0075                     ?_setup:	
   343  0075                     ?_wave_drive:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0075                     ?_ISR:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0075                     ??_ISR:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0075                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0075                     	ds	2
   358  0077                     ?_ms_delay:	
   359  0077                     ??_setup:	
   360                           ; 1 bytes @ 0x2
   361                           
   362  0077                     ms_delay@val:	
   363                           ; 1 bytes @ 0x2
   364                           
   365                           
   366                           ; 2 bytes @ 0x2
   367  0077                     	ds	2
   368  0079                     ??_ms_delay:	
   369  0079                     ??_wave_drive:	
   370                           ; 1 bytes @ 0x4
   371                           
   372  0079                     wave_drive@direction:	
   373                           ; 1 bytes @ 0x4
   374                           
   375                           
   376                           ; 1 bytes @ 0x4
   377  0079                     	ds	1
   378  007A                     ??_main:	
   379                           
   380                           	psect	cstackBANK0
   381  0020                     __pcstackBANK0:	
   382                           ; 1 bytes @ 0x5
   383                           
   384  0020                     ms_delay@i:	
   385                           
   386                           ; 2 bytes @ 0x0
   387  0020                     	ds	2
   388  0022                     ms_delay@j:	
   389                           
   390                           ; 2 bytes @ 0x2
   391  0022                     	ds	2
   392  0024                     main@i:	
   393                           
   394                           ; 2 bytes @ 0x4
   395  0024                     	ds	2
   396  0026                     main@i_187:	
   397                           
   398                           ; 2 bytes @ 0x6
   399  0026                     	ds	2
   400                           
   401                           	psect	maintext
   402  001C                     __pmaintext:	
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 53 in file "StepperP1.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  i               2    6[BANK0 ] int 
   413 ;;  i               2    4[BANK0 ] int 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : B00/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       4       0       0       0
   425 ;;      Temps:          0       0       0       0       0
   426 ;;      Totals:         0       4       0       0       0
   427 ;;Total ram usage:        4 bytes
   428 ;; Hardware stack levels required when called:    3
   429 ;; This function calls:
   430 ;;		_setup
   431 ;;		_wave_drive
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           
   438                           ;psect for function _main
   439  001C                     _main:	
   440  001C                     l1208:	
   441                           ;incstack = 0
   442                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   443                           
   444                           
   445                           ;StepperP1.c: 54:     setup();
   446  001C  120A  118A  214B  120A  118A  	fcall	_setup
   447  0021                     l1210:	
   448                           
   449                           ;StepperP1.c: 56:         if ((subir == 0)&&(bajar == 0));
   450  0021  1283               	bcf	3,5	;RP0=0, select bank0
   451  0022  1303               	bcf	3,6	;RP1=0, select bank0
   452  0023  0829               	movf	_subir,w
   453  0024  1D03               	btfss	3,2
   454  0025  2827               	goto	u511
   455  0026  2828               	goto	u510
   456  0027                     u511:	
   457  0027  282E               	goto	l1216
   458  0028                     u510:	
   459  0028                     l1212:	
   460  0028  0828               	movf	_bajar,w
   461  0029  1D03               	btfss	3,2
   462  002A  282C               	goto	u521
   463  002B  282D               	goto	u520
   464  002C                     u521:	
   465  002C  282E               	goto	l1216
   466  002D                     u520:	
   467  002D  2821               	goto	l1210
   468  002E                     l1216:	
   469  002E  0329               	decf	_subir,w
   470  002F  1D03               	btfss	3,2
   471  0030  2832               	goto	u531
   472  0031  2833               	goto	u530
   473  0032                     u531:	
   474  0032  2839               	goto	l1222
   475  0033                     u530:	
   476  0033                     l1218:	
   477  0033  0328               	decf	_bajar,w
   478  0034  1D03               	btfss	3,2
   479  0035  2837               	goto	u541
   480  0036  2838               	goto	u540
   481  0037                     u541:	
   482  0037  2839               	goto	l1222
   483  0038                     u540:	
   484  0038  2821               	goto	l1210
   485  0039                     l1222:	
   486  0039  0329               	decf	_subir,w
   487  003A  1D03               	btfss	3,2
   488  003B  283D               	goto	u551
   489  003C  283E               	goto	u550
   490  003D                     u551:	
   491  003D  2868               	goto	l1244
   492  003E                     u550:	
   493  003E                     l1224:	
   494                           
   495                           ;StepperP1.c: 62:             for(int i=0;i<(512*2);i++){
   496  003E  01A4               	clrf	main@i
   497  003F  01A5               	clrf	main@i+1
   498  0040                     l1230:	
   499                           
   500                           ;StepperP1.c: 63:                 wave_drive(0);
   501  0040  3000               	movlw	0
   502  0041  120A  118A  209A  120A  118A  	fcall	_wave_drive
   503  0046                     l1232:	
   504                           
   505                           ;StepperP1.c: 64:                 if (bajar == 0);
   506  0046  1283               	bcf	3,5	;RP0=0, select bank0
   507  0047  1303               	bcf	3,6	;RP1=0, select bank0
   508  0048  0828               	movf	_bajar,w
   509  0049  1D03               	btfss	3,2
   510  004A  284C               	goto	u561
   511  004B  284D               	goto	u560
   512  004C                     u561:	
   513  004C  284E               	goto	l1236
   514  004D                     u560:	
   515  004D  2854               	goto	l1240
   516  004E                     l1236:	
   517  004E  0328               	decf	_bajar,w
   518  004F  1D03               	btfss	3,2
   519  0050  2852               	goto	u571
   520  0051  2853               	goto	u570
   521  0052                     u571:	
   522  0052  2854               	goto	l1240
   523  0053                     u570:	
   524  0053  2821               	goto	l1210
   525  0054                     l1240:	
   526                           
   527                           ;StepperP1.c: 69:             }
   528  0054  3001               	movlw	1
   529  0055  07A4               	addwf	main@i,f
   530  0056  1803               	skipnc
   531  0057  0AA5               	incf	main@i+1,f
   532  0058  3000               	movlw	0
   533  0059  07A5               	addwf	main@i+1,f
   534  005A                     l1242:	
   535  005A  0825               	movf	main@i+1,w
   536  005B  3A80               	xorlw	128
   537  005C  00FF               	movwf	btemp+1
   538  005D  3084               	movlw	132
   539  005E  027F               	subwf	btemp+1,w
   540  005F  1D03               	skipz
   541  0060  2863               	goto	u585
   542  0061  3000               	movlw	0
   543  0062  0224               	subwf	main@i,w
   544  0063                     u585:	
   545  0063  1C03               	skipc
   546  0064  2866               	goto	u581
   547  0065  2867               	goto	u580
   548  0066                     u581:	
   549  0066  2840               	goto	l1230
   550  0067                     u580:	
   551  0067  2821               	goto	l1210
   552  0068                     l1244:	
   553  0068  0328               	decf	_bajar,w
   554  0069  1D03               	btfss	3,2
   555  006A  286C               	goto	u591
   556  006B  286D               	goto	u590
   557  006C                     u591:	
   558  006C  2821               	goto	l1210
   559  006D                     u590:	
   560  006D                     l1246:	
   561                           
   562                           ;StepperP1.c: 73:             for(int i=0;i<(512*2);i++){
   563  006D  01A6               	clrf	main@i_187
   564  006E  01A7               	clrf	main@i_187+1
   565  006F                     l1252:	
   566                           
   567                           ;StepperP1.c: 74:                 wave_drive(1);
   568  006F  3001               	movlw	1
   569  0070  120A  118A  209A  120A  118A  	fcall	_wave_drive
   570  0075                     l1254:	
   571                           
   572                           ;StepperP1.c: 75:                 if (subir == 0);
   573  0075  1283               	bcf	3,5	;RP0=0, select bank0
   574  0076  1303               	bcf	3,6	;RP1=0, select bank0
   575  0077  0829               	movf	_subir,w
   576  0078  1D03               	btfss	3,2
   577  0079  287B               	goto	u601
   578  007A  287C               	goto	u600
   579  007B                     u601:	
   580  007B  287D               	goto	l1258
   581  007C                     u600:	
   582  007C  2883               	goto	l1262
   583  007D                     l1258:	
   584  007D  0329               	decf	_subir,w
   585  007E  1D03               	btfss	3,2
   586  007F  2881               	goto	u611
   587  0080  2882               	goto	u610
   588  0081                     u611:	
   589  0081  2883               	goto	l1262
   590  0082                     u610:	
   591  0082  2821               	goto	l1210
   592  0083                     l1262:	
   593                           
   594                           ;StepperP1.c: 79:             }
   595  0083  3001               	movlw	1
   596  0084  07A6               	addwf	main@i_187,f
   597  0085  1803               	skipnc
   598  0086  0AA7               	incf	main@i_187+1,f
   599  0087  3000               	movlw	0
   600  0088  07A7               	addwf	main@i_187+1,f
   601  0089                     l1264:	
   602  0089  0827               	movf	main@i_187+1,w
   603  008A  3A80               	xorlw	128
   604  008B  00FF               	movwf	btemp+1
   605  008C  3084               	movlw	132
   606  008D  027F               	subwf	btemp+1,w
   607  008E  1D03               	skipz
   608  008F  2892               	goto	u625
   609  0090  3000               	movlw	0
   610  0091  0226               	subwf	main@i_187,w
   611  0092                     u625:	
   612  0092  1C03               	skipc
   613  0093  2895               	goto	u621
   614  0094  2896               	goto	u620
   615  0095                     u621:	
   616  0095  286F               	goto	l1252
   617  0096                     u620:	
   618  0096  2821               	goto	l1210
   619  0097  120A  118A  280C   	ljmp	start
   620  009A                     __end_of_main:	
   621                           
   622                           	psect	text1
   623  009A                     __ptext1:	
   624 ;; *************** function _wave_drive *****************
   625 ;; Defined at:
   626 ;;		line 86 in file "stepperlib.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  direction       1    wreg     unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  direction       1    4[COMMON] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         1       0       0       0       0
   644 ;;Total ram usage:        1 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    2
   647 ;; This function calls:
   648 ;;		_ms_delay
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _wave_drive
   656  009A                     _wave_drive:	
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _wave_drive: [wreg+status,2+status,0+pclath+cstack]
   660                           ;wave_drive@direction stored from wreg
   661  009A  00F9               	movwf	wave_drive@direction
   662  009B                     l1100:	
   663                           
   664                           ;stepperlib.c: 87:     if (direction == 1){
   665  009B  0379               	decf	wave_drive@direction,w
   666  009C  1D03               	btfss	3,2
   667  009D  289F               	goto	u451
   668  009E  28A0               	goto	u450
   669  009F                     u451:	
   670  009F  28D4               	goto	l1114
   671  00A0                     u450:	
   672  00A0                     l1102:	
   673                           
   674                           ;stepperlib.c: 88:         PORTB = 0b00000001;
   675  00A0  3001               	movlw	1
   676  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   677  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   678  00A3  0086               	movwf	6	;volatile
   679  00A4                     l1104:	
   680                           
   681                           ;stepperlib.c: 89:         ms_delay(1);
   682  00A4  3001               	movlw	1
   683  00A5  00F7               	movwf	ms_delay@val
   684  00A6  3000               	movlw	0
   685  00A7  00F8               	movwf	ms_delay@val+1
   686  00A8  120A  118A  210E  120A  118A  	fcall	_ms_delay
   687  00AD                     l1106:	
   688                           
   689                           ;stepperlib.c: 90:         PORTB = 0b00000010;
   690  00AD  3002               	movlw	2
   691  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   692  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   693  00B0  0086               	movwf	6	;volatile
   694                           
   695                           ;stepperlib.c: 91:         ms_delay(1);
   696  00B1  3001               	movlw	1
   697  00B2  00F7               	movwf	ms_delay@val
   698  00B3  3000               	movlw	0
   699  00B4  00F8               	movwf	ms_delay@val+1
   700  00B5  120A  118A  210E  120A  118A  	fcall	_ms_delay
   701  00BA                     l1108:	
   702                           
   703                           ;stepperlib.c: 92:         PORTB = 0b00000100;
   704  00BA  3004               	movlw	4
   705  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   706  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   707  00BD  0086               	movwf	6	;volatile
   708  00BE                     l1110:	
   709                           
   710                           ;stepperlib.c: 93:         ms_delay(1);
   711  00BE  3001               	movlw	1
   712  00BF  00F7               	movwf	ms_delay@val
   713  00C0  3000               	movlw	0
   714  00C1  00F8               	movwf	ms_delay@val+1
   715  00C2  120A  118A  210E  120A  118A  	fcall	_ms_delay
   716                           
   717                           ;stepperlib.c: 94:         PORTB = 0b00001000;
   718  00C7  3008               	movlw	8
   719  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   720  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   721  00CA  0086               	movwf	6	;volatile
   722  00CB                     l1112:	
   723                           
   724                           ;stepperlib.c: 95:         ms_delay(1);
   725  00CB  3001               	movlw	1
   726  00CC  00F7               	movwf	ms_delay@val
   727  00CD  3000               	movlw	0
   728  00CE  00F8               	movwf	ms_delay@val+1
   729  00CF  120A  118A  210E  120A  118A  	fcall	_ms_delay
   730  00D4                     l1114:	
   731                           
   732                           ;stepperlib.c: 97:      if (direction == 0){
   733  00D4  0879               	movf	wave_drive@direction,w
   734  00D5  1D03               	btfss	3,2
   735  00D6  28D8               	goto	u461
   736  00D7  28D9               	goto	u460
   737  00D8                     u461:	
   738  00D8  290D               	goto	l19
   739  00D9                     u460:	
   740  00D9                     l1116:	
   741                           
   742                           ;stepperlib.c: 98:         PORTB = 0b00001000;
   743  00D9  3008               	movlw	8
   744  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   745  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   746  00DC  0086               	movwf	6	;volatile
   747  00DD                     l1118:	
   748                           
   749                           ;stepperlib.c: 99:         ms_delay(1);
   750  00DD  3001               	movlw	1
   751  00DE  00F7               	movwf	ms_delay@val
   752  00DF  3000               	movlw	0
   753  00E0  00F8               	movwf	ms_delay@val+1
   754  00E1  120A  118A  210E  120A  118A  	fcall	_ms_delay
   755  00E6                     l1120:	
   756                           
   757                           ;stepperlib.c: 100:         PORTB = 0b00000100;
   758  00E6  3004               	movlw	4
   759  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   760  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   761  00E9  0086               	movwf	6	;volatile
   762                           
   763                           ;stepperlib.c: 101:         ms_delay(1);
   764  00EA  3001               	movlw	1
   765  00EB  00F7               	movwf	ms_delay@val
   766  00EC  3000               	movlw	0
   767  00ED  00F8               	movwf	ms_delay@val+1
   768  00EE  120A  118A  210E  120A  118A  	fcall	_ms_delay
   769  00F3                     l1122:	
   770                           
   771                           ;stepperlib.c: 102:         PORTB = 0b00000010;
   772  00F3  3002               	movlw	2
   773  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   774  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   775  00F6  0086               	movwf	6	;volatile
   776  00F7                     l1124:	
   777                           
   778                           ;stepperlib.c: 103:         ms_delay(1);
   779  00F7  3001               	movlw	1
   780  00F8  00F7               	movwf	ms_delay@val
   781  00F9  3000               	movlw	0
   782  00FA  00F8               	movwf	ms_delay@val+1
   783  00FB  120A  118A  210E  120A  118A  	fcall	_ms_delay
   784                           
   785                           ;stepperlib.c: 104:         PORTB = 0b00000001;
   786  0100  3001               	movlw	1
   787  0101  1283               	bcf	3,5	;RP0=0, select bank0
   788  0102  1303               	bcf	3,6	;RP1=0, select bank0
   789  0103  0086               	movwf	6	;volatile
   790  0104                     l1126:	
   791                           
   792                           ;stepperlib.c: 105:         ms_delay(1);
   793  0104  3001               	movlw	1
   794  0105  00F7               	movwf	ms_delay@val
   795  0106  3000               	movlw	0
   796  0107  00F8               	movwf	ms_delay@val+1
   797  0108  120A  118A  210E  120A  118A  	fcall	_ms_delay
   798  010D                     l19:	
   799  010D  0008               	return
   800  010E                     __end_of_wave_drive:	
   801                           
   802                           	psect	text2
   803  010E                     __ptext2:	
   804 ;; *************** function _ms_delay *****************
   805 ;; Defined at:
   806 ;;		line 110 in file "stepperlib.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  val             2    2[COMMON] unsigned int 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  j               2    2[BANK0 ] unsigned int 
   811 ;;  i               2    0[BANK0 ] unsigned int 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         2       0       0       0       0
   822 ;;      Locals:         0       4       0       0       0
   823 ;;      Temps:          0       0       0       0       0
   824 ;;      Totals:         2       4       0       0       0
   825 ;;Total ram usage:        6 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_wave_drive
   832 ;;		_full_drive
   833 ;;		_half_drive
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _ms_delay
   839  010E                     _ms_delay:	
   840  010E                     l1088:	
   841                           ;incstack = 0
   842                           ; Regs used in _ms_delay: [wreg+status,2]
   843                           
   844                           
   845                           ;stepperlib.c: 110: void ms_delay(unsigned int val);stepperlib.c: 111: {;stepperlib.c: 1
      +                          12:      unsigned int i,j;;stepperlib.c: 113:         for(i=0;i<val;i++)
   846  010E  1283               	bcf	3,5	;RP0=0, select bank0
   847  010F  1303               	bcf	3,6	;RP1=0, select bank0
   848  0110  01A0               	clrf	ms_delay@i
   849  0111  01A1               	clrf	ms_delay@i+1
   850  0112  292A               	goto	l22
   851  0113                     l1090:	
   852                           
   853                           ;stepperlib.c: 114:             for(j=0;j<250;j++);
   854  0113  01A2               	clrf	ms_delay@j
   855  0114  01A3               	clrf	ms_delay@j+1
   856  0115                     l1096:	
   857  0115  3001               	movlw	1
   858  0116  07A2               	addwf	ms_delay@j,f
   859  0117  1803               	skipnc
   860  0118  0AA3               	incf	ms_delay@j+1,f
   861  0119  3000               	movlw	0
   862  011A  07A3               	addwf	ms_delay@j+1,f
   863  011B  3000               	movlw	0
   864  011C  0223               	subwf	ms_delay@j+1,w
   865  011D  30FA               	movlw	250
   866  011E  1903               	skipnz
   867  011F  0222               	subwf	ms_delay@j,w
   868  0120  1C03               	skipc
   869  0121  2923               	goto	u431
   870  0122  2924               	goto	u430
   871  0123                     u431:	
   872  0123  2915               	goto	l1096
   873  0124                     u430:	
   874  0124                     l1098:	
   875  0124  3001               	movlw	1
   876  0125  07A0               	addwf	ms_delay@i,f
   877  0126  1803               	skipnc
   878  0127  0AA1               	incf	ms_delay@i+1,f
   879  0128  3000               	movlw	0
   880  0129  07A1               	addwf	ms_delay@i+1,f
   881  012A                     l22:	
   882  012A  0878               	movf	ms_delay@val+1,w
   883  012B  0221               	subwf	ms_delay@i+1,w
   884  012C  1D03               	skipz
   885  012D  2930               	goto	u445
   886  012E  0877               	movf	ms_delay@val,w
   887  012F  0220               	subwf	ms_delay@i,w
   888  0130                     u445:	
   889  0130  1C03               	skipc
   890  0131  2933               	goto	u441
   891  0132  2934               	goto	u440
   892  0133                     u441:	
   893  0133  2913               	goto	l1090
   894  0134                     u440:	
   895  0134                     l27:	
   896  0134  0008               	return
   897  0135                     __end_of_ms_delay:	
   898                           
   899                           	psect	text3
   900  014B                     __ptext3:	
   901 ;; *************** function _setup *****************
   902 ;; Defined at:
   903 ;;		line 85 in file "StepperP1.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0
   920 ;;      Totals:         0       0       0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _setup
   933  014B                     _setup:	
   934  014B                     l928:	
   935                           ;incstack = 0
   936                           ; Regs used in _setup: [wreg+status,2+status,0]
   937                           
   938                           
   939                           ;StepperP1.c: 86:     ANSEL = 0;
   940  014B  1683               	bsf	3,5	;RP0=1, select bank3
   941  014C  1703               	bsf	3,6	;RP1=1, select bank3
   942  014D  0188               	clrf	8	;volatile
   943                           
   944                           ;StepperP1.c: 87:     ANSELH = 0;
   945  014E  0189               	clrf	9	;volatile
   946  014F                     l930:	
   947                           
   948                           ;StepperP1.c: 88:     TRISB = 0b11000000;
   949  014F  30C0               	movlw	192
   950  0150  1683               	bsf	3,5	;RP0=1, select bank1
   951  0151  1303               	bcf	3,6	;RP1=0, select bank1
   952  0152  0086               	movwf	6	;volatile
   953  0153                     l932:	
   954                           
   955                           ;StepperP1.c: 89:     PORTBbits.RB0 = 1;
   956  0153  1283               	bcf	3,5	;RP0=0, select bank0
   957  0154  1303               	bcf	3,6	;RP1=0, select bank0
   958  0155  1406               	bsf	6,0	;volatile
   959  0156                     l934:	
   960                           
   961                           ;StepperP1.c: 90:     PORTBbits.RB1 = 1;
   962  0156  1486               	bsf	6,1	;volatile
   963  0157                     l936:	
   964                           
   965                           ;StepperP1.c: 91:     IOCBbits.IOCB7 = 1;
   966  0157  1683               	bsf	3,5	;RP0=1, select bank1
   967  0158  1303               	bcf	3,6	;RP1=0, select bank1
   968  0159  1796               	bsf	22,7	;volatile
   969  015A                     l938:	
   970                           
   971                           ;StepperP1.c: 92:     IOCBbits.IOCB6 = 1;
   972  015A  1716               	bsf	22,6	;volatile
   973  015B                     l940:	
   974                           
   975                           ;StepperP1.c: 93:     INTCON = 0b11001000;
   976  015B  30C8               	movlw	200
   977  015C  008B               	movwf	11	;volatile
   978  015D                     l942:	
   979                           
   980                           ;StepperP1.c: 94:     OSCCONbits.IRCF = 7;
   981  015D  3070               	movlw	112
   982  015E  048F               	iorwf	15,f	;volatile
   983  015F                     l96:	
   984  015F  0008               	return
   985  0160                     __end_of_setup:	
   986                           
   987                           	psect	text4
   988  0135                     __ptext4:	
   989 ;; *************** function _ISR *****************
   990 ;; Defined at:
   991 ;;		line 43 in file "StepperP1.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0
  1007 ;;      Temps:          2       0       0       0       0
  1008 ;;      Totals:         2       0       0       0       0
  1009 ;;Total ram usage:        2 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		Interrupt level 1
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _ISR
  1020  0135                     _ISR:	
  1021  0135                     i1l1024:	
  1022                           
  1023                           ;StepperP1.c: 45:     if (INTCONbits.RBIF == 1){
  1024  0135  1C0B               	btfss	11,0	;volatile
  1025  0136  2938               	goto	u30_21
  1026  0137  2939               	goto	u30_20
  1027  0138                     u30_21:	
  1028  0138  2944               	goto	i1l68
  1029  0139                     u30_20:	
  1030  0139                     i1l1026:	
  1031                           
  1032                           ;StepperP1.c: 46:         INTCONbits.RBIF = 0;
  1033  0139  100B               	bcf	11,0	;volatile
  1034  013A                     i1l1028:	
  1035                           
  1036                           ;StepperP1.c: 47:         subir = PORTBbits.RB7;
  1037  013A  3000               	movlw	0
  1038  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1039  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1040  013D  1B86               	btfsc	6,7	;volatile
  1041  013E  3001               	movlw	1
  1042  013F  00A9               	movwf	_subir
  1043                           
  1044                           ;StepperP1.c: 48:         bajar = PORTBbits.RB6;
  1045  0140  3000               	movlw	0
  1046  0141  1B06               	btfsc	6,6	;volatile
  1047  0142  3001               	movlw	1
  1048  0143  00A8               	movwf	_bajar
  1049  0144                     i1l68:	
  1050                           ;StepperP1.c: 49:     }
  1051                           
  1052  0144  0876               	movf	??_ISR+1,w
  1053  0145  008A               	movwf	10
  1054  0146  0E75               	swapf	??_ISR^(0+4294967168),w
  1055  0147  0083               	movwf	3
  1056  0148  0EFE               	swapf	btemp,f
  1057  0149  0E7E               	swapf	btemp,w
  1058  014A  0009               	retfie
  1059  014B                     __end_of_ISR:	
  1060  007E                     btemp	set	126	;btemp
  1061  007E                     wtemp0	set	126
  1062                           
  1063                           	psect	intentry
  1064  0004                     __pintentry:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _ISR: [wreg+status,2]
  1067                           
  1068  0004                     interrupt_function:	
  1069  007E                     saved_w	set	btemp
  1070  0004  00FE               	movwf	btemp
  1071  0005  0E03               	swapf	3,w
  1072  0006  00F5               	movwf	??_ISR
  1073  0007  080A               	movf	10,w
  1074  0008  00F6               	movwf	??_ISR+1
  1075  0009  120A  118A  2935   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      8      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_wave_drive
    _wave_drive->_ms_delay

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _wave_drive->_ms_delay

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3394
                                              4 BANK0      4     4      0
                              _setup
                         _wave_drive
 ---------------------------------------------------------------------------------
 (1) _wave_drive                                           1     1      0    3258
                                              4 COMMON     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (2) _ms_delay                                             6     4      2    3196
                                              2 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _wave_drive
     _ms_delay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 14 10:05:38 2020

                       _z 0074               __CFG_CP$OFF 0000                        l22 012A  
                      l27 0134                        l19 010D                        l96 015F  
     wave_drive@direction 0079                       l930 014F                       l940 015B  
                     l932 0153                       l942 015D                       l934 0156  
                     l936 0157                       l928 014B                       l938 015A  
                     u430 0124                       u510 0028                       u431 0123  
                     u511 0027                       u440 0134                       u600 007C  
                     u520 002D                       u441 0133                       u601 007B  
                     u521 002C                       u450 00A0                       u610 0082  
                     u530 0033              __CFG_CPD$OFF 0000                       u451 009F  
                     u611 0081                       u531 0032                       u460 00D9  
                     u620 0096                       u540 0038                       _ISR 0135  
                     u445 0130                       u461 00D8                       u621 0095  
                     u541 0037                       u550 003E                       u551 003D  
                     u560 004D                       u625 0092                       u561 004C  
                     u570 0053                       u571 0052                       u580 0067  
                     u581 0066                       u590 006D                       u591 006C  
                     u585 0063                       _sel 0071              __CFG_LVP$OFF 0000  
                    ?_ISR 0075                      l1100 009B                      l1110 00BE  
                    l1102 00A0                      l1120 00E6                      l1112 00CB  
                    l1104 00A4                      l1122 00F3                      l1106 00AD  
                    l1114 00D4                      l1210 0021                      l1124 00F7  
                    l1116 00D9                      l1108 00BA                      l1212 0028  
                    l1126 0104                      l1118 00DD                      l1230 0040  
                    l1222 0039                      l1240 0054                      l1232 0046  
                    l1224 003E                      l1216 002E                      l1208 001C  
                    l1090 0113                      l1242 005A                      l1218 0033  
                    l1252 006F                      l1236 004E                      l1244 0068  
                    l1262 0083                      l1254 0075                      l1246 006D  
                    l1096 0115                      l1088 010E                      l1264 0089  
                    l1098 0124                      l1258 007D                      i1l68 0144  
            __CFG_WRT$OFF 0000                      _main 001C                      _send 0070  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0075                     ?_main 0075             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     u30_20 0139                     u30_21 0138  
                   _PORTB 0006                     _TRISB 0086            __CFG_FCMEN$OFF 0000  
                   _bajar 0028                     _setup 014B                     _subir 0029  
                   main@i 0024            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 009A                    ??_main 007A  
                  ?_setup 0075                    _ANSELH 0189                    i1l1024 0135  
                  i1l1026 0139                    i1l1028 013A                    _INTCON 000B  
          __CFG_PWRTE$OFF 0000                    _signal 0073          __end_of_ms_delay 0135  
                  saved_w 007E   __end_of__initialization 0018            __pcstackCOMMON 0075  
           __end_of_setup 0160               ms_delay@val 0077                   ??_setup 0077  
              __pbssBANK0 0028                __pmaintext 001C                __pintentry 0004  
               ?_ms_delay 0077                   __ptext1 009A                   __ptext2 010E  
                 __ptext3 014B                   __ptext4 0135              __size_of_ISR 0016  
    end_of_initialization 0018                ??_ms_delay 0079                 _PORTBbits 0006  
              _wave_drive 009A       start_initialization 000F               __end_of_ISR 014B  
__CFG_FOSC$INTRC_NOCLKOUT 0000               ?_wave_drive 0075               __pbssCOMMON 0070  
               ___latbits 0002             __pcstackBANK0 0020         __size_of_ms_delay 0027  
          __size_of_setup 0015         interrupt_function 0004                  _IOCBbits 0096  
     __size_of_wave_drive 0074                 main@i_187 0026                 ms_delay@i 0020  
               ms_delay@j 0022         __CFG_BOR4V$BOR40V 0000             __size_of_main 007E  
                _dummyvar 0072                  _ms_delay 010E              ??_wave_drive 0079  
              _INTCONbits 000B                  intlevel1 0000        __end_of_wave_drive 010E  
              _OSCCONbits 008F  
