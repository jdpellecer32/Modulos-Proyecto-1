

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Feb 24 20:35:57 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_I2C_Master_Init
   868                           	FNCALL	_main,_Set_Time_Date
   869                           	FNCALL	_main,_Update_Current_Date_Time
   870                           	FNCALL	_main,_configPorts
   871                           	FNCALL	_main,_initOsci4MHZ
   872                           	FNCALL	_main,_lcd_init
   873                           	FNCALL	_main,_lcd_set_cursor
   874                           	FNCALL	_main,_lcd_write_string
   875                           	FNCALL	_main,_mostrar_lcd
   876                           	FNCALL	_main,_separa_digitos_rtc
   877                           	FNCALL	_separa_digitos_rtc,___awdiv
   878                           	FNCALL	_separa_digitos_rtc,___awmod
   879                           	FNCALL	_mostrar_lcd,_lcd_set_cursor
   880                           	FNCALL	_mostrar_lcd,_lcd_write_char
   881                           	FNCALL	_mostrar_lcd,_lcd_write_string
   882                           	FNCALL	_lcd_write_string,_lcd_write_char
   883                           	FNCALL	_lcd_write_char,_lcd_port
   884                           	FNCALL	_lcd_set_cursor,_lcd_cmd
   885                           	FNCALL	_lcd_init,_lcd_cmd
   886                           	FNCALL	_lcd_init,_lcd_port
   887                           	FNCALL	_lcd_cmd,_lcd_port
   888                           	FNCALL	_Update_Current_Date_Time,_BCD_2_DEC
   889                           	FNCALL	_Update_Current_Date_Time,_I2C_Master_Read
   890                           	FNCALL	_Update_Current_Date_Time,_I2C_Master_Start
   891                           	FNCALL	_Update_Current_Date_Time,_I2C_Master_Stop
   892                           	FNCALL	_Update_Current_Date_Time,_I2C_Master_Write
   893                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   894                           	FNCALL	_BCD_2_DEC,___wmul
   895                           	FNCALL	_Set_Time_Date,_DEC_2_BCD
   896                           	FNCALL	_Set_Time_Date,_I2C_Master_Start
   897                           	FNCALL	_Set_Time_Date,_I2C_Master_Stop
   898                           	FNCALL	_Set_Time_Date,_I2C_Master_Write
   899                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   900                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   901                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   902                           	FNCALL	_DEC_2_BCD,___awdiv
   903                           	FNCALL	_DEC_2_BCD,___awmod
   904                           	FNCALL	_I2C_Master_Init,___lldiv
   905                           	FNROOT	_main
   906                           	global	_year
   907                           	global	_month
   908                           	global	_date
   909                           	global	_hour
   910                           	global	_min
   911                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   912                           global __pidataBANK0
   913                           __pidataBANK0:
   914  0091                     	file	"Proyecto1_master.c"
   915                           	line	72
   916                           
   917                           ;initializer for _year
   918                           	retlw	014h
   919  0091  3414               	retlw	0
   920  0092  3400               
   921                           	line	71
   922                           
   923                           ;initializer for _month
   924                           	retlw	02h
   925  0093  3402               	retlw	0
   926  0094  3400               
   927                           	line	70
   928                           
   929                           ;initializer for _day
   930                           	retlw	01h
   931  0095  3401               	retlw	0
   932  0096  3400               
   933                           	line	69
   934                           
   935                           ;initializer for _date
   936                           	retlw	018h
   937  0097  3418               	retlw	0
   938  0098  3400               
   939                           	line	68
   940                           
   941                           ;initializer for _hour
   942                           	retlw	0Ah
   943  0099  340A               	retlw	0
   944  009A  3400               
   945                           	line	67
   946                           
   947                           ;initializer for _min
   948                           	retlw	037h
   949  009B  3437               	retlw	0
   950  009C  3400               
   951                           	global	_sec
   952                           	global	_year_1
   953                           	global	_year_0
   954                           	global	_month_1
   955                           	global	_month_0
   956                           	global	_date_1
   957                           	global	_date_0
   958                           	global	_hour_1
   959                           	global	_hour_0
   960                           	global	_min_1
   961                           	global	_min_0
   962                           	global	_sec_1
   963                           	global	_sec_0
   964                           	global	_SSPBUF
   965                           _SSPBUF	set	0x13
   966  0013                     	global	_SSPCON
   967                           _SSPCON	set	0x14
   968  0014                     	global	_PORTB
   969                           _PORTB	set	0x6
   970  0006                     	global	_PORTE
   971                           _PORTE	set	0x9
   972  0009                     	global	_PORTD
   973                           _PORTD	set	0x8
   974  0008                     	global	_PORTA
   975                           _PORTA	set	0x5
   976  0005                     	global	_RD7
   977                           _RD7	set	0x47
   978  0047                     	global	_RB7
   979                           _RB7	set	0x37
   980  0037                     	global	_RA7
   981                           _RA7	set	0x2F
   982  002F                     	global	_RA6
   983                           _RA6	set	0x2E
   984  002E                     	global	_RA5
   985                           _RA5	set	0x2D
   986  002D                     	global	_RA4
   987                           _RA4	set	0x2C
   988  002C                     	global	_RA3
   989                           _RA3	set	0x2B
   990  002B                     	global	_RA2
   991                           _RA2	set	0x2A
   992  002A                     	global	_RA1
   993                           _RA1	set	0x29
   994  0029                     	global	_RA0
   995                           _RA0	set	0x28
   996  0028                     	global	_SSPIF
   997                           _SSPIF	set	0x63
   998  0063                     	global	_PEIE
   999                           _PEIE	set	0x5E
  1000  005E                     	global	_GIE
  1001                           _GIE	set	0x5F
  1002  005F                     	global	_SSPCON2bits
  1003                           _SSPCON2bits	set	0x91
  1004  0091                     	global	_TRISCbits
  1005                           _TRISCbits	set	0x87
  1006  0087                     	global	_SSPSTAT
  1007                           _SSPSTAT	set	0x94
  1008  0094                     	global	_SSPADD
  1009                           _SSPADD	set	0x93
  1010  0093                     	global	_SSPCON2
  1011                           _SSPCON2	set	0x91
  1012  0091                     	global	_OSCCONbits
  1013                           _OSCCONbits	set	0x8F
  1014  008F                     	global	_TRISB
  1015                           _TRISB	set	0x86
  1016  0086                     	global	_TRISE
  1017                           _TRISE	set	0x89
  1018  0089                     	global	_TRISD
  1019                           _TRISD	set	0x88
  1020  0088                     	global	_TRISA
  1021                           _TRISA	set	0x85
  1022  0085                     	global	_SSPIE
  1023                           _SSPIE	set	0x463
  1024  0463                     	global	_TRISC4
  1025                           _TRISC4	set	0x43C
  1026  043C                     	global	_TRISC3
  1027                           _TRISC3	set	0x43B
  1028  043B                     	global	_ANSELH
  1029                           _ANSELH	set	0x189
  1030  0189                     	global	_ANSEL
  1031                           _ANSEL	set	0x188
  1032  0188                     psect	strings,class=STRING,delta=2,noexec
  1033                           global __pstrings
  1034                           __pstrings:
  1035  0003                     stringtab:
  1036  0003                     	global    __stringtab
  1037                           __stringtab:
  1038  0003                     ;	String table - string pointers are 1 byte each
  1039                           stringcode:stringdir:
  1040  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
  1041  0003  3000               movwf pclath
  1042  0004  008A               movf fsr,w
  1043  0005  0804               incf fsr
  1044  0006  0A84               	addwf pc
  1045  0007  0782               	global __stringbase
  1046                           __stringbase:
  1047  0008                     	retlw	0
  1048  0008  3400               psect	strings
  1049                           	global    __end_of__stringtab
  1050                           __end_of__stringtab:
  1051  0009                     	
  1052                           STR_1:	
  1053  0009                     	retlw	70	;'F'
  1054  0009  3446               	retlw	101	;'e'
  1055  000A  3465               	retlw	99	;'c'
  1056  000B  3463               	retlw	104	;'h'
  1057  000C  3468               	retlw	97	;'a'
  1058  000D  3461               	retlw	58	;':'
  1059  000E  343A               	retlw	0
  1060  000F  3400               psect	strings
  1061                           	
  1062                           STR_2:	
  1063  0010                     	retlw	72	;'H'
  1064  0010  3448               	retlw	111	;'o'
  1065  0011  346F               	retlw	114	;'r'
  1066  0012  3472               	retlw	97	;'a'
  1067  0013  3461               	retlw	58	;':'
  1068  0014  343A               	retlw	0
  1069  0015  3400               psect	strings
  1070                           	
  1071                           STR_3:	
  1072  0016                     	retlw	47	;'/'
  1073  0016  342F               	retlw	0
  1074  0017  3400               psect	strings
  1075                           STR_5	equ	STR_1+5
  1076  000E                     STR_6	equ	STR_1+5
  1077  000E                     STR_4	equ	STR_3+0
  1078  0016                     ; #config settings
  1079                           global __CFG_FOSC$INTRC_NOCLKOUT
  1080                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1081  0000                     global __CFG_WDTE$OFF
  1082                           __CFG_WDTE$OFF equ 0x0
  1083  0000                     global __CFG_PWRTE$OFF
  1084                           __CFG_PWRTE$OFF equ 0x0
  1085  0000                     global __CFG_MCLRE$OFF
  1086                           __CFG_MCLRE$OFF equ 0x0
  1087  0000                     global __CFG_CP$OFF
  1088                           __CFG_CP$OFF equ 0x0
  1089  0000                     global __CFG_CPD$OFF
  1090                           __CFG_CPD$OFF equ 0x0
  1091  0000                     global __CFG_BOREN$OFF
  1092                           __CFG_BOREN$OFF equ 0x0
  1093  0000                     global __CFG_IESO$OFF
  1094                           __CFG_IESO$OFF equ 0x0
  1095  0000                     global __CFG_FCMEN$OFF
  1096                           __CFG_FCMEN$OFF equ 0x0
  1097  0000                     global __CFG_LVP$OFF
  1098                           __CFG_LVP$OFF equ 0x0
  1099  0000                     global __CFG_BOR4V$BOR40V
  1100                           __CFG_BOR4V$BOR40V equ 0x0
  1101  0000                     global __CFG_WRT$OFF
  1102                           __CFG_WRT$OFF equ 0x0
  1103  0000                     	file	"C:\Users\JOSPEL~1\AppData\Local\Temp\sgdk."
  1104                           	line	#
  1105                           psect cinit,class=CODE,delta=2
  1106                           global start_initialization
  1107                           start_initialization:
  1108  07E6                     
  1109                           global __initialization
  1110                           __initialization:
  1111  07E6                     psect	bssBANK0,class=BANK0,space=1,noexec
  1112                           global __pbssBANK0
  1113                           __pbssBANK0:
  1114  0020                     _pot:
  1115  0020                            ds      4
  1116  0020                     
  1117                           _sec:
  1118  0024                            ds      2
  1119  0024                     
  1120                           _year_1:
  1121  0026                            ds      1
  1122  0026                     
  1123                           _year_0:
  1124  0027                            ds      1
  1125  0027                     
  1126                           _month_1:
  1127  0028                            ds      1
  1128  0028                     
  1129                           _month_0:
  1130  0029                            ds      1
  1131  0029                     
  1132                           _date_1:
  1133  002A                            ds      1
  1134  002A                     
  1135                           _date_0:
  1136  002B                            ds      1
  1137  002B                     
  1138                           _hour_1:
  1139  002C                            ds      1
  1140  002C                     
  1141                           _hour_0:
  1142  002D                            ds      1
  1143  002D                     
  1144                           _min_1:
  1145  002E                            ds      1
  1146  002E                     
  1147                           _min_0:
  1148  002F                            ds      1
  1149  002F                     
  1150                           _sec_1:
  1151  0030                            ds      1
  1152  0030                     
  1153                           _sec_0:
  1154  0031                            ds      1
  1155  0031                     
  1156                           psect	dataBANK0,class=BANK0,space=1,noexec
  1157                           global __pdataBANK0
  1158                           __pdataBANK0:
  1159  0032                     	file	"Proyecto1_master.c"
  1160                           	line	72
  1161                           _year:
  1162  0032                            ds      2
  1163  0032                     
  1164                           psect	dataBANK0
  1165                           	file	"Proyecto1_master.c"
  1166                           	line	71
  1167                           _month:
  1168  0034                            ds      2
  1169  0034                     
  1170                           psect	dataBANK0
  1171                           	file	"Proyecto1_master.c"
  1172                           	line	70
  1173                           _day:
  1174  0036                            ds      2
  1175  0036                     
  1176                           psect	dataBANK0
  1177                           	file	"Proyecto1_master.c"
  1178                           	line	69
  1179                           _date:
  1180  0038                            ds      2
  1181  0038                     
  1182                           psect	dataBANK0
  1183                           	file	"Proyecto1_master.c"
  1184                           	line	68
  1185                           _hour:
  1186  003A                            ds      2
  1187  003A                     
  1188                           psect	dataBANK0
  1189                           	file	"Proyecto1_master.c"
  1190                           	line	67
  1191                           _min:
  1192  003C                            ds      2
  1193  003C                     
  1194                           	file	"C:\Users\JOSPEL~1\AppData\Local\Temp\sgdk."
  1195                           	line	#
  1196                           global btemp
  1197                           psect inittext,class=CODE,delta=2
  1198                           global init_fetch0,btemp
  1199                           ;	Called with low address in FSR and high address in W
  1200                           init_fetch0:
  1201  00BD                     	movf btemp,w
  1202  00BD  087E               	movwf pclath
  1203  00BE  008A               	movf btemp+1,w
  1204  00BF  087F               	movwf pc
  1205  00C0  0082               global init_ram0
  1206                           ;Called with:
  1207                           ;	high address of idata address in btemp 
  1208                           ;	low address of idata address in btemp+1 
  1209                           ;	low address of data in FSR
  1210                           ;	high address + 1 of data in btemp-1
  1211                           init_ram0:
  1212  00C1                     	fcall init_fetch0
  1213  00C1  120A  118A  20BD  120A  118A  	movwf indf,f
  1214  00C6  0080               	incf fsr,f
  1215  00C7  0A84               	movf fsr,w
  1216  00C8  0804               	xorwf btemp-1,w
  1217  00C9  067D               	btfsc status,2
  1218  00CA  1903               	retlw 0
  1219  00CB  3400               	incf btemp+1,f
  1220  00CC  0AFF               	btfsc status,2
  1221  00CD  1903               	incf btemp,f
  1222  00CE  0AFE               	goto init_ram0
  1223  00CF  28C1               ; Initialize objects allocated to BANK0
  1224                           psect cinit,class=CODE,delta=2,merge=1
  1225                           global init_ram0, __pidataBANK0
  1226                           	bcf	status, 7	;select IRP bank0
  1227  07E6  1383               	movlw low(__pdataBANK0+12)
  1228  07E7  303E               	movwf btemp-1,f
  1229  07E8  00FD               	movlw high(__pidataBANK0)
  1230  07E9  3000               	movwf btemp,f
  1231  07EA  00FE               	movlw low(__pidataBANK0)
  1232  07EB  3091               	movwf btemp+1,f
  1233  07EC  00FF               	movlw low(__pdataBANK0)
  1234  07ED  3032               	movwf fsr,f
  1235  07EE  0084               	fcall init_ram0
  1236  07EF  120A  118A  20C1  120A  118A  	line	#
  1237                           psect clrtext,class=CODE,delta=2
  1238                           global clear_ram0
  1239                           ;	Called with FSR containing the base address, and
  1240                           ;	W with the last address+1
  1241                           clear_ram0:
  1242  006D                     	clrwdt			;clear the watchdog before getting into this loop
  1243  006D  0064               clrloop0:
  1244  006E                     	clrf	indf		;clear RAM location pointed to by FSR
  1245  006E  0180               	incf	fsr,f		;increment pointer
  1246  006F  0A84               	xorwf	fsr,w		;XOR with final address
  1247  0070  0604               	btfsc	status,2	;have we reached the end yet?
  1248  0071  1903               	retlw	0		;all done for this memory range, return
  1249  0072  3400               	xorwf	fsr,w		;XOR again to restore value
  1250  0073  0604               	goto	clrloop0		;do the next byte
  1251  0074  286E               
  1252                           ; Clear objects allocated to BANK0
  1253                           psect cinit,class=CODE,delta=2,merge=1
  1254                           	movlw	low(__pbssBANK0)
  1255  07F4  3020               	movwf	fsr
  1256  07F5  0084               	movlw	low((__pbssBANK0)+012h)
  1257  07F6  3032               	fcall	clear_ram0
  1258  07F7  120A  118A  206D  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1259                           global end_of_initialization,__end_of__initialization
  1260                           
  1261                           ;End of C runtime variable initialization code
  1262                           
  1263                           end_of_initialization:
  1264  07FC                     __end_of__initialization:
  1265  07FC                     clrf status
  1266  07FC  0183               ljmp _main	;jump to C main() function
  1267  07FD  120A  118A  2A6E   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1268                           global __pcstackCOMMON
  1269                           __pcstackCOMMON:
  1270  0070                     ?_initOsci4MHZ:	; 1 bytes @ 0x0
  1271  0070                     ??_initOsci4MHZ:	; 1 bytes @ 0x0
  1272  0070                     ?_configPorts:	; 1 bytes @ 0x0
  1273  0070                     ??_configPorts:	; 1 bytes @ 0x0
  1274  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1275  0070                     ?_lcd_write_string:	; 1 bytes @ 0x0
  1276  0070                     ?_Set_Time_Date:	; 1 bytes @ 0x0
  1277  0070                     ?_Update_Current_Date_Time:	; 1 bytes @ 0x0
  1278  0070                     ?_separa_digitos_rtc:	; 1 bytes @ 0x0
  1279  0070                     ?_mostrar_lcd:	; 1 bytes @ 0x0
  1280  0070                     ?_lcd_write_char:	; 1 bytes @ 0x0
  1281  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1282  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1283  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1284  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1285  0070                     ?_main:	; 1 bytes @ 0x0
  1286  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1287  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1288  0070                     ?_lcd_port:	; 1 bytes @ 0x0
  1289  0070                     ??_lcd_port:	; 1 bytes @ 0x0
  1290  0070                     ?_lcd_cmd:	; 1 bytes @ 0x0
  1291  0070                     	global	?_I2C_Master_Read
  1292                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1293  0070                     	global	?___wmul
  1294                           ?___wmul:	; 2 bytes @ 0x0
  1295  0070                     	global	?___awdiv
  1296                           ?___awdiv:	; 2 bytes @ 0x0
  1297  0070                     	global	?___awmod
  1298                           ?___awmod:	; 2 bytes @ 0x0
  1299  0070                     	global	?___lldiv
  1300                           ?___lldiv:	; 4 bytes @ 0x0
  1301  0070                     	global	lcd_port@a
  1302                           lcd_port@a:	; 1 bytes @ 0x0
  1303  0070                     	global	I2C_Master_Read@a
  1304                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1305  0070                     	global	___wmul@multiplier
  1306                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1307  0070                     	global	___awdiv@divisor
  1308                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1309  0070                     	global	___awmod@divisor
  1310                           ___awmod@divisor:	; 2 bytes @ 0x0
  1311  0070                     	global	___lldiv@divisor
  1312                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1313  0070                     	ds	1
  1314  0070                     ??_lcd_write_char:	; 1 bytes @ 0x1
  1315  0071                     ??_lcd_cmd:	; 1 bytes @ 0x1
  1316  0071                     	ds	1
  1317  0071                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1318  0072                     	global	___wmul@multiplicand
  1319                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1320  0072                     	global	___awdiv@dividend
  1321                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1322  0072                     	global	___awmod@dividend
  1323                           ___awmod@dividend:	; 2 bytes @ 0x2
  1324  0072                     	ds	1
  1325  0072                     	global	lcd_cmd@a
  1326                           lcd_cmd@a:	; 1 bytes @ 0x3
  1327  0073                     	global	lcd_write_char@a
  1328                           lcd_write_char@a:	; 1 bytes @ 0x3
  1329  0073                     	ds	1
  1330  0073                     ??_lcd_init:	; 1 bytes @ 0x4
  1331  0074                     ??_lcd_write_string:	; 1 bytes @ 0x4
  1332  0074                     ?_lcd_set_cursor:	; 1 bytes @ 0x4
  1333  0074                     ??___wmul:	; 1 bytes @ 0x4
  1334  0074                     ??___awdiv:	; 1 bytes @ 0x4
  1335  0074                     ??___awmod:	; 1 bytes @ 0x4
  1336  0074                     	global	lcd_set_cursor@b
  1337                           lcd_set_cursor@b:	; 1 bytes @ 0x4
  1338  0074                     	global	I2C_Master_Read@temp
  1339                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1340  0074                     	global	lcd_write_string@i
  1341                           lcd_write_string@i:	; 2 bytes @ 0x4
  1342  0074                     	global	___wmul@product
  1343                           ___wmul@product:	; 2 bytes @ 0x4
  1344  0074                     	global	___lldiv@dividend
  1345                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1346  0074                     	ds	1
  1347  0074                     ??_lcd_set_cursor:	; 1 bytes @ 0x5
  1348  0075                     	global	lcd_set_cursor@a
  1349                           lcd_set_cursor@a:	; 1 bytes @ 0x5
  1350  0075                     	global	___awdiv@counter
  1351                           ___awdiv@counter:	; 1 bytes @ 0x5
  1352  0075                     	global	___awmod@counter
  1353                           ___awmod@counter:	; 1 bytes @ 0x5
  1354  0075                     	ds	1
  1355  0075                     	global	?_BCD_2_DEC
  1356                           ?_BCD_2_DEC:	; 2 bytes @ 0x6
  1357  0076                     	global	lcd_write_string@a
  1358                           lcd_write_string@a:	; 1 bytes @ 0x6
  1359  0076                     	global	___awdiv@sign
  1360                           ___awdiv@sign:	; 1 bytes @ 0x6
  1361  0076                     	global	___awmod@sign
  1362                           ___awmod@sign:	; 1 bytes @ 0x6
  1363  0076                     	global	BCD_2_DEC@to_convert
  1364                           BCD_2_DEC@to_convert:	; 2 bytes @ 0x6
  1365  0076                     	ds	1
  1366  0076                     ??_mostrar_lcd:	; 1 bytes @ 0x7
  1367  0077                     	global	___awdiv@quotient
  1368                           ___awdiv@quotient:	; 2 bytes @ 0x7
  1369  0077                     	ds	1
  1370  0077                     ??_BCD_2_DEC:	; 1 bytes @ 0x8
  1371  0078                     ??___lldiv:	; 1 bytes @ 0x8
  1372  0078                     	ds	1
  1373  0078                     ??_separa_digitos_rtc:	; 1 bytes @ 0x9
  1374  0079                     	global	?_DEC_2_BCD
  1375                           ?_DEC_2_BCD:	; 2 bytes @ 0x9
  1376  0079                     	global	DEC_2_BCD@to_convert
  1377                           DEC_2_BCD@to_convert:	; 2 bytes @ 0x9
  1378  0079                     	global	___lldiv@quotient
  1379                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1380  0079                     	ds	2
  1381  0079                     ??_DEC_2_BCD:	; 1 bytes @ 0xB
  1382  007B                     	ds	2
  1383  007B                     ??_Set_Time_Date:	; 1 bytes @ 0xD
  1384  007D                     ??_Update_Current_Date_Time:	; 1 bytes @ 0xD
  1385  007D                     ??_I2C_Master_Write:	; 1 bytes @ 0xD
  1386  007D                     	global	___lldiv@counter
  1387                           ___lldiv@counter:	; 1 bytes @ 0xD
  1388  007D                     	ds	1
  1389  007D                     ??_main:	; 1 bytes @ 0xE
  1390  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1391                           global __pcstackBANK0
  1392                           __pcstackBANK0:
  1393  003E                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1394  003E                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1395  003E                     	global	I2C_Master_Write@d
  1396                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1397  003E                     	global	I2C_Master_Init@c
  1398                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1399  003E                     	ds	4
  1400  003E                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1401  0042                     	ds	4
  1402  0042                     ;!
  1403                           ;!Data Sizes:
  1404                           ;!    Strings     15
  1405                           ;!    Constant    0
  1406                           ;!    Data        12
  1407                           ;!    BSS         18
  1408                           ;!    Persistent  0
  1409                           ;!    Stack       0
  1410                           ;!
  1411                           ;!Auto Spaces:
  1412                           ;!    Space          Size  Autos    Used
  1413                           ;!    COMMON           14     14      14
  1414                           ;!    BANK0            80      8      38
  1415                           ;!    BANK1            80      0       0
  1416                           ;!    BANK3            96      0       0
  1417                           ;!    BANK2            96      0       0
  1418                           
  1419                           ;!
  1420                           ;!Pointer List with Targets:
  1421                           ;!
  1422                           ;!    lcd_write_string@a	PTR unsigned char  size(1) Largest target is 7
  1423                           ;!		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
  1424                           ;!		 -> STR_2(CODE[6]), STR_1(CODE[7]), 
  1425                           ;!
  1426                           
  1427                           
  1428                           ;!
  1429                           ;!Critical Paths under _main in COMMON
  1430                           ;!
  1431                           ;!    _separa_digitos_rtc->___awdiv
  1432                           ;!    _mostrar_lcd->_lcd_write_string
  1433                           ;!    _lcd_write_string->_lcd_write_char
  1434                           ;!    _lcd_write_char->_lcd_port
  1435                           ;!    _lcd_set_cursor->_lcd_cmd
  1436                           ;!    _lcd_init->_lcd_cmd
  1437                           ;!    _lcd_cmd->_lcd_port
  1438                           ;!    _BCD_2_DEC->_I2C_Master_Read
  1439                           ;!    _BCD_2_DEC->___wmul
  1440                           ;!    _Set_Time_Date->_DEC_2_BCD
  1441                           ;!    _I2C_Master_Write->_DEC_2_BCD
  1442                           ;!    _DEC_2_BCD->___awdiv
  1443                           ;!    _I2C_Master_Init->___lldiv
  1444                           ;!
  1445                           ;!Critical Paths under _main in BANK0
  1446                           ;!
  1447                           ;!    _main->_I2C_Master_Init
  1448                           ;!    _Update_Current_Date_Time->_I2C_Master_Write
  1449                           ;!    _Set_Time_Date->_I2C_Master_Write
  1450                           ;!
  1451                           ;!Critical Paths under _main in BANK1
  1452                           ;!
  1453                           ;!    None.
  1454                           ;!
  1455                           ;!Critical Paths under _main in BANK3
  1456                           ;!
  1457                           ;!    None.
  1458                           ;!
  1459                           ;!Critical Paths under _main in BANK2
  1460                           ;!
  1461                           ;!    None.
  1462                           
  1463 ;;
  1464 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1465 ;;
  1466                           
  1467                           ;!
  1468                           ;!Call Graph Tables:
  1469                           ;!
  1470                           ;! ---------------------------------------------------------------------------------
  1471                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1472                           ;! ---------------------------------------------------------------------------------
  1473                           ;! (0) _main                                                 0     0      0   13261
  1474                           ;!                    _I2C_Master_Init
  1475                           ;!                      _Set_Time_Date
  1476                           ;!           _Update_Current_Date_Time
  1477                           ;!                        _configPorts
  1478                           ;!                       _initOsci4MHZ
  1479                           ;!                           _lcd_init
  1480                           ;!                     _lcd_set_cursor
  1481                           ;!                   _lcd_write_string
  1482                           ;!                        _mostrar_lcd
  1483                           ;!                 _separa_digitos_rtc
  1484                           ;! ---------------------------------------------------------------------------------
  1485                           ;! (1) _separa_digitos_rtc                                   1     1      0    2724
  1486                           ;!                                              9 COMMON     1     1      0
  1487                           ;!                            ___awdiv
  1488                           ;!                            ___awmod
  1489                           ;! ---------------------------------------------------------------------------------
  1490                           ;! (1) _mostrar_lcd                                          1     1      0    1198
  1491                           ;!                                              7 COMMON     1     1      0
  1492                           ;!                     _lcd_set_cursor
  1493                           ;!                     _lcd_write_char
  1494                           ;!                   _lcd_write_string
  1495                           ;! ---------------------------------------------------------------------------------
  1496                           ;! (2) _lcd_write_string                                     3     3      0     486
  1497                           ;!                                              4 COMMON     3     3      0
  1498                           ;!                     _lcd_write_char
  1499                           ;! ---------------------------------------------------------------------------------
  1500                           ;! (3) _lcd_write_char                                       3     3      0     198
  1501                           ;!                                              1 COMMON     3     3      0
  1502                           ;!                           _lcd_port
  1503                           ;! ---------------------------------------------------------------------------------
  1504                           ;! (2) _lcd_set_cursor                                       2     1      1     514
  1505                           ;!                                              4 COMMON     2     1      1
  1506                           ;!                            _lcd_cmd
  1507                           ;! ---------------------------------------------------------------------------------
  1508                           ;! (1) _lcd_init                                             2     2      0     374
  1509                           ;!                                              4 COMMON     2     2      0
  1510                           ;!                            _lcd_cmd
  1511                           ;!                           _lcd_port
  1512                           ;! ---------------------------------------------------------------------------------
  1513                           ;! (3) _lcd_cmd                                              3     3      0     198
  1514                           ;!                                              1 COMMON     3     3      0
  1515                           ;!                           _lcd_port
  1516                           ;! ---------------------------------------------------------------------------------
  1517                           ;! (4) _lcd_port                                             1     1      0     176
  1518                           ;!                                              0 COMMON     1     1      0
  1519                           ;! ---------------------------------------------------------------------------------
  1520                           ;! (1) _initOsci4MHZ                                         0     0      0       0
  1521                           ;! ---------------------------------------------------------------------------------
  1522                           ;! (1) _configPorts                                          0     0      0       0
  1523                           ;! ---------------------------------------------------------------------------------
  1524                           ;! (1) _Update_Current_Date_Time                             0     0      0    2863
  1525                           ;!                          _BCD_2_DEC
  1526                           ;!                    _I2C_Master_Read
  1527                           ;!                   _I2C_Master_Start
  1528                           ;!                    _I2C_Master_Stop
  1529                           ;!                   _I2C_Master_Write
  1530                           ;! ---------------------------------------------------------------------------------
  1531                           ;! (2) _I2C_Master_Read                                      6     4      2     653
  1532                           ;!                                              0 COMMON     6     4      2
  1533                           ;!                    _I2C_Master_Wait
  1534                           ;! ---------------------------------------------------------------------------------
  1535                           ;! (2) _BCD_2_DEC                                            4     2      2     744
  1536                           ;!                                              6 COMMON     4     2      2
  1537                           ;!                    _I2C_Master_Read (ARG)
  1538                           ;!                             ___wmul
  1539                           ;! ---------------------------------------------------------------------------------
  1540                           ;! (3) ___wmul                                               6     2      4     244
  1541                           ;!                                              0 COMMON     6     2      4
  1542                           ;! ---------------------------------------------------------------------------------
  1543                           ;! (1) _Set_Time_Date                                        0     0      0    4690
  1544                           ;!                          _DEC_2_BCD
  1545                           ;!                   _I2C_Master_Start
  1546                           ;!                    _I2C_Master_Stop
  1547                           ;!                   _I2C_Master_Write
  1548                           ;! ---------------------------------------------------------------------------------
  1549                           ;! (2) _I2C_Master_Write                                     2     0      2    1466
  1550                           ;!                                              0 BANK0      2     0      2
  1551                           ;!                          _DEC_2_BCD (ARG)
  1552                           ;!                    _I2C_Master_Wait
  1553                           ;! ---------------------------------------------------------------------------------
  1554                           ;! (2) _I2C_Master_Stop                                      0     0      0       0
  1555                           ;!                    _I2C_Master_Wait
  1556                           ;! ---------------------------------------------------------------------------------
  1557                           ;! (2) _I2C_Master_Start                                     0     0      0       0
  1558                           ;!                    _I2C_Master_Wait
  1559                           ;! ---------------------------------------------------------------------------------
  1560                           ;! (3) _I2C_Master_Wait                                      0     0      0       0
  1561                           ;! ---------------------------------------------------------------------------------
  1562                           ;! (2) _DEC_2_BCD                                            4     2      2    3224
  1563                           ;!                                              9 COMMON     4     2      2
  1564                           ;!                            ___awdiv
  1565                           ;!                            ___awmod
  1566                           ;! ---------------------------------------------------------------------------------
  1567                           ;! (2) ___awmod                                              7     3      4    1360
  1568                           ;!                                              0 COMMON     7     3      4
  1569                           ;! ---------------------------------------------------------------------------------
  1570                           ;! (2) ___awdiv                                              9     5      4    1364
  1571                           ;!                                              0 COMMON     9     5      4
  1572                           ;! ---------------------------------------------------------------------------------
  1573                           ;! (1) _I2C_Master_Init                                      8     4      4     412
  1574                           ;!                                              0 BANK0      8     4      4
  1575                           ;!                            ___lldiv
  1576                           ;! ---------------------------------------------------------------------------------
  1577                           ;! (2) ___lldiv                                             14     6      8     314
  1578                           ;!                                              0 COMMON    14     6      8
  1579                           ;! ---------------------------------------------------------------------------------
  1580                           ;! Estimated maximum stack depth 4
  1581                           ;! ---------------------------------------------------------------------------------
  1582                           ;!
  1583                           ;! Call Graph Graphs:
  1584                           ;!
  1585                           ;! _main (ROOT)
  1586                           ;!   _I2C_Master_Init
  1587                           ;!     ___lldiv
  1588                           ;!   _Set_Time_Date
  1589                           ;!     _DEC_2_BCD
  1590                           ;!       ___awdiv
  1591                           ;!       ___awmod
  1592                           ;!     _I2C_Master_Start
  1593                           ;!       _I2C_Master_Wait
  1594                           ;!     _I2C_Master_Stop
  1595                           ;!       _I2C_Master_Wait
  1596                           ;!     _I2C_Master_Write
  1597                           ;!       _DEC_2_BCD (ARG)
  1598                           ;!         ___awdiv
  1599                           ;!         ___awmod
  1600                           ;!       _I2C_Master_Wait (ARG)
  1601                           ;!   _Update_Current_Date_Time
  1602                           ;!     _BCD_2_DEC
  1603                           ;!       _I2C_Master_Read (ARG)
  1604                           ;!         _I2C_Master_Wait
  1605                           ;!       ___wmul (ARG)
  1606                           ;!     _I2C_Master_Read
  1607                           ;!       _I2C_Master_Wait
  1608                           ;!     _I2C_Master_Start
  1609                           ;!       _I2C_Master_Wait
  1610                           ;!     _I2C_Master_Stop
  1611                           ;!       _I2C_Master_Wait
  1612                           ;!     _I2C_Master_Write
  1613                           ;!       _DEC_2_BCD (ARG)
  1614                           ;!         ___awdiv
  1615                           ;!         ___awmod
  1616                           ;!       _I2C_Master_Wait (ARG)
  1617                           ;!   _configPorts
  1618                           ;!   _initOsci4MHZ
  1619                           ;!   _lcd_init
  1620                           ;!     _lcd_cmd
  1621                           ;!       _lcd_port
  1622                           ;!     _lcd_port
  1623                           ;!   _lcd_set_cursor
  1624                           ;!     _lcd_cmd
  1625                           ;!       _lcd_port
  1626                           ;!   _lcd_write_string
  1627                           ;!     _lcd_write_char
  1628                           ;!       _lcd_port
  1629                           ;!   _mostrar_lcd
  1630                           ;!     _lcd_set_cursor
  1631                           ;!       _lcd_cmd
  1632                           ;!         _lcd_port
  1633                           ;!     _lcd_write_char
  1634                           ;!       _lcd_port
  1635                           ;!     _lcd_write_string
  1636                           ;!       _lcd_write_char
  1637                           ;!         _lcd_port
  1638                           ;!   _separa_digitos_rtc
  1639                           ;!     ___awdiv
  1640                           ;!     ___awmod
  1641                           ;!
  1642                           
  1643                           ;! Address spaces:
  1644                           
  1645                           ;!Name               Size   Autos  Total    Cost      Usage
  1646                           ;!BANK3               60      0       0       9        0.0%
  1647                           ;!BITBANK3            60      0       0       8        0.0%
  1648                           ;!SFR3                 0      0       0       4        0.0%
  1649                           ;!BITSFR3              0      0       0       4        0.0%
  1650                           ;!BANK2               60      0       0      11        0.0%
  1651                           ;!BITBANK2            60      0       0      10        0.0%
  1652                           ;!SFR2                 0      0       0       5        0.0%
  1653                           ;!BITSFR2              0      0       0       5        0.0%
  1654                           ;!BANK1               50      0       0       7        0.0%
  1655                           ;!BITBANK1            50      0       0       6        0.0%
  1656                           ;!SFR1                 0      0       0       2        0.0%
  1657                           ;!BITSFR1              0      0       0       2        0.0%
  1658                           ;!BANK0               50      8      26       5       47.5%
  1659                           ;!BITBANK0            50      0       0       4        0.0%
  1660                           ;!SFR0                 0      0       0       1        0.0%
  1661                           ;!BITSFR0              0      0       0       1        0.0%
  1662                           ;!COMMON               E      E       E       1      100.0%
  1663                           ;!BITCOMMON            E      0       0       0        0.0%
  1664                           ;!CODE                 0      0       0       0        0.0%
  1665                           ;!DATA                 0      0      34      12        0.0%
  1666                           ;!ABS                  0      0      34       3        0.0%
  1667                           ;!NULL                 0      0       0       0        0.0%
  1668                           ;!STACK                0      0       0       2        0.0%
  1669                           ;!EEDATA             100      0       0       0        0.0%
  1670                           
  1671                           	global	_main
  1672                           
  1673 ;; *************** function _main *****************
  1674 ;; Defined at:
  1675 ;;		line 75 in file "Proyecto1_master.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : B00/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels required when called:    4
  1695 ;; This function calls:
  1696 ;;		_I2C_Master_Init
  1697 ;;		_Set_Time_Date
  1698 ;;		_Update_Current_Date_Time
  1699 ;;		_configPorts
  1700 ;;		_initOsci4MHZ
  1701 ;;		_lcd_init
  1702 ;;		_lcd_set_cursor
  1703 ;;		_lcd_write_string
  1704 ;;		_mostrar_lcd
  1705 ;;		_separa_digitos_rtc
  1706 ;; This function is called by:
  1707 ;;		Startup code after reset
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1711                           	file	"Proyecto1_master.c"
  1712                           	line	75
  1713                           global __pmaintext
  1714                           __pmaintext:	;psect for function _main
  1715  026E                     psect	maintext
  1716                           	file	"Proyecto1_master.c"
  1717                           	line	75
  1718                           	global	__size_of_main
  1719                           	__size_of_main	equ	__end_of_main-_main
  1720  004C                     	
  1721                           _main:	
  1722  026E                     ;incstack = 0
  1723                           	opt	stack 4
  1724                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1725                           	line	76
  1726                           	
  1727                           l1450:	
  1728  026E                     ;Proyecto1_master.c: 76:     initOsci4MHZ();
  1729                           	fcall	_initOsci4MHZ
  1730  026E  120A  118A  2066  120A  118A  	line	77
  1731                           ;Proyecto1_master.c: 77:     configPorts();
  1732                           	fcall	_configPorts
  1733  0273  120A  118A  20AC  120A  118A  	line	78
  1734                           	
  1735                           l1452:	
  1736  0278                     ;Proyecto1_master.c: 78:     lcd_init();
  1737                           	fcall	_lcd_init
  1738  0278  120A  118A  22BA  120A  118A  	line	79
  1739                           	
  1740                           l1454:	
  1741  027D                     ;Proyecto1_master.c: 79:     I2C_Master_Init(100000);
  1742                           	movlw	0
  1743  027D  3000               	bcf	status, 5	;RP0=0, select bank0
  1744  027E  1283               	bcf	status, 6	;RP1=0, select bank0
  1745  027F  1303               	movwf	(I2C_Master_Init@c+3)
  1746  0280  00C1               	movlw	01h
  1747  0281  3001               	movwf	(I2C_Master_Init@c+2)
  1748  0282  00C0               	movlw	086h
  1749  0283  3086               	movwf	(I2C_Master_Init@c+1)
  1750  0284  00BF               	movlw	0A0h
  1751  0285  30A0               	movwf	(I2C_Master_Init@c)
  1752  0286  00BE               
  1753                           	fcall	_I2C_Master_Init
  1754  0287  120A  118A  21F7  120A  118A  	line	82
  1755                           	
  1756                           l1456:	
  1757  028C                     ;Proyecto1_master.c: 82:     lcd_write_string("Fecha:");
  1758                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1759  028C  3001               	fcall	_lcd_write_string
  1760  028D  120A  118A  2148  120A  118A  	line	83
  1761                           	
  1762                           l1458:	
  1763  0292                     ;Proyecto1_master.c: 83:     lcd_set_cursor(2, 1);
  1764                           	clrf	(lcd_set_cursor@b)
  1765  0292  01F4               	incf	(lcd_set_cursor@b),f
  1766  0293  0AF4               	movlw	low(02h)
  1767  0294  3002               	fcall	_lcd_set_cursor
  1768  0295  120A  118A  2104  120A  118A  	line	84
  1769                           	
  1770                           l1460:	
  1771  029A                     ;Proyecto1_master.c: 84:     lcd_write_string("Hora:");
  1772                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1773  029A  3008               	fcall	_lcd_write_string
  1774  029B  120A  118A  2148  120A  118A  	line	87
  1775                           	
  1776                           l1462:	
  1777  02A0                     ;Proyecto1_master.c: 87:     Set_Time_Date();
  1778                           	fcall	_Set_Time_Date
  1779  02A0  120A  118A  24E9  120A  118A  	goto	l1464
  1780  02A5  2AA6               	line	89
  1781                           ;Proyecto1_master.c: 89:     while(1){
  1782                           	
  1783                           l95:	
  1784  02A6                     	line	91
  1785                           	
  1786                           l1464:	
  1787  02A6                     ;Proyecto1_master.c: 91:         Update_Current_Date_Time();
  1788                           	fcall	_Update_Current_Date_Time
  1789  02A6  120A  118A  267F  120A  118A  	line	93
  1790                           	
  1791                           l1466:	
  1792  02AB                     ;Proyecto1_master.c: 93:         separa_digitos_rtc();
  1793                           	fcall	_separa_digitos_rtc
  1794  02AB  120A  118A  2598  120A  118A  	line	95
  1795                           	
  1796                           l1468:	
  1797  02B0                     ;Proyecto1_master.c: 95:         mostrar_lcd();
  1798                           	fcall	_mostrar_lcd
  1799  02B0  120A  118A  2450  120A  118A  	goto	l1464
  1800  02B5  2AA6               	line	98
  1801                           ;Proyecto1_master.c: 98:     }
  1802                           	
  1803                           l96:	
  1804  02B6                     	goto	l1464
  1805  02B6  2AA6               	
  1806                           l97:	
  1807  02B7                     	line	100
  1808                           ;Proyecto1_master.c: 99:     return;
  1809                           	
  1810                           l98:	
  1811  02B7                     	global	start
  1812                           	ljmp	start
  1813  02B7  120A  118A  2800   	opt stack 0
  1814                           GLOBAL	__end_of_main
  1815                           	__end_of_main:
  1816  02BA                     	signat	_main,89
  1817                           	global	_separa_digitos_rtc
  1818                           
  1819 ;; *************** function _separa_digitos_rtc *****************
  1820 ;; Defined at:
  1821 ;;		line 101 in file "Proyecto1_master.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, pclath, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0
  1837 ;;      Temps:          1       0       0       0       0
  1838 ;;      Totals:         1       0       0       0       0
  1839 ;;Total ram usage:        1 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    1
  1842 ;; This function calls:
  1843 ;;		___awdiv
  1844 ;;		___awmod
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1850                           	line	101
  1851                           global __ptext1
  1852                           __ptext1:	;psect for function _separa_digitos_rtc
  1853  0598                     psect	text1
  1854                           	file	"Proyecto1_master.c"
  1855                           	line	101
  1856                           	global	__size_of_separa_digitos_rtc
  1857                           	__size_of_separa_digitos_rtc	equ	__end_of_separa_digitos_rtc-_separa_digitos_rtc
  1858  00E7                     	
  1859                           _separa_digitos_rtc:	
  1860  0598                     ;incstack = 0
  1861                           	opt	stack 6
  1862                           ; Regs used in _separa_digitos_rtc: [wreg+status,2+status,0+pclath+cstack]
  1863                           	line	102
  1864                           	
  1865                           l1430:	
  1866  0598                     ;Proyecto1_master.c: 102:     sec_0 = sec%10;
  1867                           	movlw	0Ah
  1868  0598  300A               	movwf	(___awmod@divisor)
  1869  0599  00F0               	movlw	0
  1870  059A  3000               	movwf	((___awmod@divisor))+1
  1871  059B  00F1               	bcf	status, 5	;RP0=0, select bank0
  1872  059C  1283               	bcf	status, 6	;RP1=0, select bank0
  1873  059D  1303               	movf	(_sec+1),w
  1874  059E  0825               	movwf	(___awmod@dividend+1)
  1875  059F  00F3               	movf	(_sec),w
  1876  05A0  0824               	movwf	(___awmod@dividend)
  1877  05A1  00F2               	fcall	___awmod
  1878  05A2  120A  118A  230F  120A  118A  	movf	(0+(?___awmod)),w
  1879  05A7  0870               	movwf	(??_separa_digitos_rtc+0)+0
  1880  05A8  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  1881  05A9  0879               	bcf	status, 5	;RP0=0, select bank0
  1882  05AA  1283               	bcf	status, 6	;RP1=0, select bank0
  1883  05AB  1303               	movwf	(_sec_0)
  1884  05AC  00B1               	line	103
  1885                           ;Proyecto1_master.c: 103:     sec_1 = (sec/10);
  1886                           	movlw	0Ah
  1887  05AD  300A               	movwf	(___awdiv@divisor)
  1888  05AE  00F0               	movlw	0
  1889  05AF  3000               	movwf	((___awdiv@divisor))+1
  1890  05B0  00F1               	movf	(_sec+1),w
  1891  05B1  0825               	movwf	(___awdiv@dividend+1)
  1892  05B2  00F3               	movf	(_sec),w
  1893  05B3  0824               	movwf	(___awdiv@dividend)
  1894  05B4  00F2               	fcall	___awdiv
  1895  05B5  120A  118A  23DF  120A  118A  	movf	(0+(?___awdiv)),w
  1896  05BA  0870               	movwf	(??_separa_digitos_rtc+0)+0
  1897  05BB  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  1898  05BC  0879               	bcf	status, 5	;RP0=0, select bank0
  1899  05BD  1283               	bcf	status, 6	;RP1=0, select bank0
  1900  05BE  1303               	movwf	(_sec_1)
  1901  05BF  00B0               	line	104
  1902                           ;Proyecto1_master.c: 104:     min_0 = min%10;
  1903                           	movlw	0Ah
  1904  05C0  300A               	movwf	(___awmod@divisor)
  1905  05C1  00F0               	movlw	0
  1906  05C2  3000               	movwf	((___awmod@divisor))+1
  1907  05C3  00F1               	movf	(_min+1),w
  1908  05C4  083D               	movwf	(___awmod@dividend+1)
  1909  05C5  00F3               	movf	(_min),w
  1910  05C6  083C               	movwf	(___awmod@dividend)
  1911  05C7  00F2               	fcall	___awmod
  1912  05C8  120A  118A  230F  120A  118A  	movf	(0+(?___awmod)),w
  1913  05CD  0870               	movwf	(??_separa_digitos_rtc+0)+0
  1914  05CE  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  1915  05CF  0879               	bcf	status, 5	;RP0=0, select bank0
  1916  05D0  1283               	bcf	status, 6	;RP1=0, select bank0
  1917  05D1  1303               	movwf	(_min_0)
  1918  05D2  00AF               	line	105
  1919                           ;Proyecto1_master.c: 105:     min_1 = min/10;
  1920                           	movlw	0Ah
  1921  05D3  300A               	movwf	(___awdiv@divisor)
  1922  05D4  00F0               	movlw	0
  1923  05D5  3000               	movwf	((___awdiv@divisor))+1
  1924  05D6  00F1               	movf	(_min+1),w
  1925  05D7  083D               	movwf	(___awdiv@dividend+1)
  1926  05D8  00F3               	movf	(_min),w
  1927  05D9  083C               	movwf	(___awdiv@dividend)
  1928  05DA  00F2               	fcall	___awdiv
  1929  05DB  120A  118A  23DF  120A  118A  	movf	(0+(?___awdiv)),w
  1930  05E0  0870               	movwf	(??_separa_digitos_rtc+0)+0
  1931  05E1  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  1932  05E2  0879               	bcf	status, 5	;RP0=0, select bank0
  1933  05E3  1283               	bcf	status, 6	;RP1=0, select bank0
  1934  05E4  1303               	movwf	(_min_1)
  1935  05E5  00AE               	line	106
  1936                           ;Proyecto1_master.c: 106:     hour_0 = hour%10;
  1937                           	movlw	0Ah
  1938  05E6  300A               	movwf	(___awmod@divisor)
  1939  05E7  00F0               	movlw	0
  1940  05E8  3000               	movwf	((___awmod@divisor))+1
  1941  05E9  00F1               	movf	(_hour+1),w
  1942  05EA  083B               	movwf	(___awmod@dividend+1)
  1943  05EB  00F3               	movf	(_hour),w
  1944  05EC  083A               	movwf	(___awmod@dividend)
  1945  05ED  00F2               	fcall	___awmod
  1946  05EE  120A  118A  230F  120A  118A  	movf	(0+(?___awmod)),w
  1947  05F3  0870               	movwf	(??_separa_digitos_rtc+0)+0
  1948  05F4  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  1949  05F5  0879               	bcf	status, 5	;RP0=0, select bank0
  1950  05F6  1283               	bcf	status, 6	;RP1=0, select bank0
  1951  05F7  1303               	movwf	(_hour_0)
  1952  05F8  00AD               	line	107
  1953                           ;Proyecto1_master.c: 107:     hour_1 = hour/10;
  1954                           	movlw	0Ah
  1955  05F9  300A               	movwf	(___awdiv@divisor)
  1956  05FA  00F0               	movlw	0
  1957  05FB  3000               	movwf	((___awdiv@divisor))+1
  1958  05FC  00F1               	movf	(_hour+1),w
  1959  05FD  083B               	movwf	(___awdiv@dividend+1)
  1960  05FE  00F3               	movf	(_hour),w
  1961  05FF  083A               	movwf	(___awdiv@dividend)
  1962  0600  00F2               	fcall	___awdiv
  1963  0601  120A  118A  23DF  120A  118A  	movf	(0+(?___awdiv)),w
  1964  0606  0870               	movwf	(??_separa_digitos_rtc+0)+0
  1965  0607  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  1966  0608  0879               	bcf	status, 5	;RP0=0, select bank0
  1967  0609  1283               	bcf	status, 6	;RP1=0, select bank0
  1968  060A  1303               	movwf	(_hour_1)
  1969  060B  00AC               	line	108
  1970                           ;Proyecto1_master.c: 108:     date_0 = date%10;
  1971                           	movlw	0Ah
  1972  060C  300A               	movwf	(___awmod@divisor)
  1973  060D  00F0               	movlw	0
  1974  060E  3000               	movwf	((___awmod@divisor))+1
  1975  060F  00F1               	movf	(_date+1),w
  1976  0610  0839               	movwf	(___awmod@dividend+1)
  1977  0611  00F3               	movf	(_date),w
  1978  0612  0838               	movwf	(___awmod@dividend)
  1979  0613  00F2               	fcall	___awmod
  1980  0614  120A  118A  230F  120A  118A  	movf	(0+(?___awmod)),w
  1981  0619  0870               	movwf	(??_separa_digitos_rtc+0)+0
  1982  061A  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  1983  061B  0879               	bcf	status, 5	;RP0=0, select bank0
  1984  061C  1283               	bcf	status, 6	;RP1=0, select bank0
  1985  061D  1303               	movwf	(_date_0)
  1986  061E  00AB               	line	109
  1987                           ;Proyecto1_master.c: 109:     date_1 = date/10;
  1988                           	movlw	0Ah
  1989  061F  300A               	movwf	(___awdiv@divisor)
  1990  0620  00F0               	movlw	0
  1991  0621  3000               	movwf	((___awdiv@divisor))+1
  1992  0622  00F1               	movf	(_date+1),w
  1993  0623  0839               	movwf	(___awdiv@dividend+1)
  1994  0624  00F3               	movf	(_date),w
  1995  0625  0838               	movwf	(___awdiv@dividend)
  1996  0626  00F2               	fcall	___awdiv
  1997  0627  120A  118A  23DF  120A  118A  	movf	(0+(?___awdiv)),w
  1998  062C  0870               	movwf	(??_separa_digitos_rtc+0)+0
  1999  062D  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  2000  062E  0879               	bcf	status, 5	;RP0=0, select bank0
  2001  062F  1283               	bcf	status, 6	;RP1=0, select bank0
  2002  0630  1303               	movwf	(_date_1)
  2003  0631  00AA               	line	110
  2004                           ;Proyecto1_master.c: 110:     month_0 = month%10;
  2005                           	movlw	0Ah
  2006  0632  300A               	movwf	(___awmod@divisor)
  2007  0633  00F0               	movlw	0
  2008  0634  3000               	movwf	((___awmod@divisor))+1
  2009  0635  00F1               	movf	(_month+1),w
  2010  0636  0835               	movwf	(___awmod@dividend+1)
  2011  0637  00F3               	movf	(_month),w
  2012  0638  0834               	movwf	(___awmod@dividend)
  2013  0639  00F2               	fcall	___awmod
  2014  063A  120A  118A  230F  120A  118A  	movf	(0+(?___awmod)),w
  2015  063F  0870               	movwf	(??_separa_digitos_rtc+0)+0
  2016  0640  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  2017  0641  0879               	bcf	status, 5	;RP0=0, select bank0
  2018  0642  1283               	bcf	status, 6	;RP1=0, select bank0
  2019  0643  1303               	movwf	(_month_0)
  2020  0644  00A9               	line	111
  2021                           ;Proyecto1_master.c: 111:     month_1 = month/10;
  2022                           	movlw	0Ah
  2023  0645  300A               	movwf	(___awdiv@divisor)
  2024  0646  00F0               	movlw	0
  2025  0647  3000               	movwf	((___awdiv@divisor))+1
  2026  0648  00F1               	movf	(_month+1),w
  2027  0649  0835               	movwf	(___awdiv@dividend+1)
  2028  064A  00F3               	movf	(_month),w
  2029  064B  0834               	movwf	(___awdiv@dividend)
  2030  064C  00F2               	fcall	___awdiv
  2031  064D  120A  118A  23DF  120A  118A  	movf	(0+(?___awdiv)),w
  2032  0652  0870               	movwf	(??_separa_digitos_rtc+0)+0
  2033  0653  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  2034  0654  0879               	bcf	status, 5	;RP0=0, select bank0
  2035  0655  1283               	bcf	status, 6	;RP1=0, select bank0
  2036  0656  1303               	movwf	(_month_1)
  2037  0657  00A8               	line	112
  2038                           ;Proyecto1_master.c: 112:     year_0 = year%10;
  2039                           	movlw	0Ah
  2040  0658  300A               	movwf	(___awmod@divisor)
  2041  0659  00F0               	movlw	0
  2042  065A  3000               	movwf	((___awmod@divisor))+1
  2043  065B  00F1               	movf	(_year+1),w
  2044  065C  0833               	movwf	(___awmod@dividend+1)
  2045  065D  00F3               	movf	(_year),w
  2046  065E  0832               	movwf	(___awmod@dividend)
  2047  065F  00F2               	fcall	___awmod
  2048  0660  120A  118A  230F  120A  118A  	movf	(0+(?___awmod)),w
  2049  0665  0870               	movwf	(??_separa_digitos_rtc+0)+0
  2050  0666  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  2051  0667  0879               	bcf	status, 5	;RP0=0, select bank0
  2052  0668  1283               	bcf	status, 6	;RP1=0, select bank0
  2053  0669  1303               	movwf	(_year_0)
  2054  066A  00A7               	line	113
  2055                           ;Proyecto1_master.c: 113:     year_1 = year/10;
  2056                           	movlw	0Ah
  2057  066B  300A               	movwf	(___awdiv@divisor)
  2058  066C  00F0               	movlw	0
  2059  066D  3000               	movwf	((___awdiv@divisor))+1
  2060  066E  00F1               	movf	(_year+1),w
  2061  066F  0833               	movwf	(___awdiv@dividend+1)
  2062  0670  00F3               	movf	(_year),w
  2063  0671  0832               	movwf	(___awdiv@dividend)
  2064  0672  00F2               	fcall	___awdiv
  2065  0673  120A  118A  23DF  120A  118A  	movf	(0+(?___awdiv)),w
  2066  0678  0870               	movwf	(??_separa_digitos_rtc+0)+0
  2067  0679  00F9               	movf	(??_separa_digitos_rtc+0)+0,w
  2068  067A  0879               	bcf	status, 5	;RP0=0, select bank0
  2069  067B  1283               	bcf	status, 6	;RP1=0, select bank0
  2070  067C  1303               	movwf	(_year_1)
  2071  067D  00A6               	line	115
  2072                           	
  2073                           l101:	
  2074  067E                     	return
  2075  067E  0008               	opt stack 0
  2076                           GLOBAL	__end_of_separa_digitos_rtc
  2077                           	__end_of_separa_digitos_rtc:
  2078  067F                     	signat	_separa_digitos_rtc,89
  2079                           	global	_mostrar_lcd
  2080                           
  2081 ;; *************** function _mostrar_lcd *****************
  2082 ;; Defined at:
  2083 ;;		line 117 in file "Proyecto1_master.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          1       0       0       0       0
  2100 ;;      Totals:         1       0       0       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    3
  2104 ;; This function calls:
  2105 ;;		_lcd_set_cursor
  2106 ;;		_lcd_write_char
  2107 ;;		_lcd_write_string
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2113                           	line	117
  2114                           global __ptext2
  2115                           __ptext2:	;psect for function _mostrar_lcd
  2116  0450                     psect	text2
  2117                           	file	"Proyecto1_master.c"
  2118                           	line	117
  2119                           	global	__size_of_mostrar_lcd
  2120                           	__size_of_mostrar_lcd	equ	__end_of_mostrar_lcd-_mostrar_lcd
  2121  0099                     	
  2122                           _mostrar_lcd:	
  2123  0450                     ;incstack = 0
  2124                           	opt	stack 4
  2125                           ; Regs used in _mostrar_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2126                           	line	118
  2127                           	
  2128                           l1432:	
  2129  0450                     ;Proyecto1_master.c: 118:     lcd_set_cursor(1, 8);
  2130                           	movlw	low(08h)
  2131  0450  3008               	movwf	(??_mostrar_lcd+0)+0
  2132  0451  00F7               	movf	(??_mostrar_lcd+0)+0,w
  2133  0452  0877               	movwf	(lcd_set_cursor@b)
  2134  0453  00F4               	movlw	low(01h)
  2135  0454  3001               	fcall	_lcd_set_cursor
  2136  0455  120A  118A  2104  120A  118A  	line	119
  2137                           ;Proyecto1_master.c: 119:         lcd_write_char(date_1+48);
  2138                           	bcf	status, 5	;RP0=0, select bank0
  2139  045A  1283               	bcf	status, 6	;RP1=0, select bank0
  2140  045B  1303               	movf	(_date_1),w
  2141  045C  082A               	addlw	030h
  2142  045D  3E30               	fcall	_lcd_write_char
  2143  045E  120A  118A  20EA  120A  118A  	line	120
  2144                           ;Proyecto1_master.c: 120:         lcd_write_char(date_0+48);
  2145                           	bcf	status, 5	;RP0=0, select bank0
  2146  0463  1283               	bcf	status, 6	;RP1=0, select bank0
  2147  0464  1303               	movf	(_date_0),w
  2148  0465  082B               	addlw	030h
  2149  0466  3E30               	fcall	_lcd_write_char
  2150  0467  120A  118A  20EA  120A  118A  	line	121
  2151                           	
  2152                           l1434:	
  2153  046C                     ;Proyecto1_master.c: 121:         lcd_write_string("/");
  2154                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2155  046C  300E               	fcall	_lcd_write_string
  2156  046D  120A  118A  2148  120A  118A  	line	122
  2157                           	
  2158                           l1436:	
  2159  0472                     ;Proyecto1_master.c: 122:         lcd_write_char(month_1+48);
  2160                           	bcf	status, 5	;RP0=0, select bank0
  2161  0472  1283               	bcf	status, 6	;RP1=0, select bank0
  2162  0473  1303               	movf	(_month_1),w
  2163  0474  0828               	addlw	030h
  2164  0475  3E30               	fcall	_lcd_write_char
  2165  0476  120A  118A  20EA  120A  118A  	line	123
  2166                           	
  2167                           l1438:	
  2168  047B                     ;Proyecto1_master.c: 123:         lcd_write_char(month_0+48);
  2169                           	bcf	status, 5	;RP0=0, select bank0
  2170  047B  1283               	bcf	status, 6	;RP1=0, select bank0
  2171  047C  1303               	movf	(_month_0),w
  2172  047D  0829               	addlw	030h
  2173  047E  3E30               	fcall	_lcd_write_char
  2174  047F  120A  118A  20EA  120A  118A  	line	124
  2175                           	
  2176                           l1440:	
  2177  0484                     ;Proyecto1_master.c: 124:         lcd_write_string("/");
  2178                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2179  0484  300E               	fcall	_lcd_write_string
  2180  0485  120A  118A  2148  120A  118A  	line	125
  2181                           ;Proyecto1_master.c: 125:         lcd_write_char(year_1+48);
  2182                           	bcf	status, 5	;RP0=0, select bank0
  2183  048A  1283               	bcf	status, 6	;RP1=0, select bank0
  2184  048B  1303               	movf	(_year_1),w
  2185  048C  0826               	addlw	030h
  2186  048D  3E30               	fcall	_lcd_write_char
  2187  048E  120A  118A  20EA  120A  118A  	line	126
  2188                           ;Proyecto1_master.c: 126:         lcd_write_char(year_0+48);
  2189                           	bcf	status, 5	;RP0=0, select bank0
  2190  0493  1283               	bcf	status, 6	;RP1=0, select bank0
  2191  0494  1303               	movf	(_year_0),w
  2192  0495  0827               	addlw	030h
  2193  0496  3E30               	fcall	_lcd_write_char
  2194  0497  120A  118A  20EA  120A  118A  	line	129
  2195                           ;Proyecto1_master.c: 129:         lcd_set_cursor(2, 8);
  2196                           	movlw	low(08h)
  2197  049C  3008               	movwf	(??_mostrar_lcd+0)+0
  2198  049D  00F7               	movf	(??_mostrar_lcd+0)+0,w
  2199  049E  0877               	movwf	(lcd_set_cursor@b)
  2200  049F  00F4               	movlw	low(02h)
  2201  04A0  3002               	fcall	_lcd_set_cursor
  2202  04A1  120A  118A  2104  120A  118A  	line	130
  2203                           ;Proyecto1_master.c: 130:         lcd_write_char(hour_1+48);
  2204                           	bcf	status, 5	;RP0=0, select bank0
  2205  04A6  1283               	bcf	status, 6	;RP1=0, select bank0
  2206  04A7  1303               	movf	(_hour_1),w
  2207  04A8  082C               	addlw	030h
  2208  04A9  3E30               	fcall	_lcd_write_char
  2209  04AA  120A  118A  20EA  120A  118A  	line	131
  2210                           ;Proyecto1_master.c: 131:         lcd_write_char(hour_0+48);
  2211                           	bcf	status, 5	;RP0=0, select bank0
  2212  04AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2213  04B0  1303               	movf	(_hour_0),w
  2214  04B1  082D               	addlw	030h
  2215  04B2  3E30               	fcall	_lcd_write_char
  2216  04B3  120A  118A  20EA  120A  118A  	line	132
  2217                           	
  2218                           l1442:	
  2219  04B8                     ;Proyecto1_master.c: 132:         lcd_write_string(":");
  2220                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2221  04B8  3006               	fcall	_lcd_write_string
  2222  04B9  120A  118A  2148  120A  118A  	line	133
  2223                           	
  2224                           l1444:	
  2225  04BE                     ;Proyecto1_master.c: 133:         lcd_write_char(min_1+48);
  2226                           	bcf	status, 5	;RP0=0, select bank0
  2227  04BE  1283               	bcf	status, 6	;RP1=0, select bank0
  2228  04BF  1303               	movf	(_min_1),w
  2229  04C0  082E               	addlw	030h
  2230  04C1  3E30               	fcall	_lcd_write_char
  2231  04C2  120A  118A  20EA  120A  118A  	line	134
  2232                           	
  2233                           l1446:	
  2234  04C7                     ;Proyecto1_master.c: 134:         lcd_write_char(min_0+48);
  2235                           	bcf	status, 5	;RP0=0, select bank0
  2236  04C7  1283               	bcf	status, 6	;RP1=0, select bank0
  2237  04C8  1303               	movf	(_min_0),w
  2238  04C9  082F               	addlw	030h
  2239  04CA  3E30               	fcall	_lcd_write_char
  2240  04CB  120A  118A  20EA  120A  118A  	line	135
  2241                           	
  2242                           l1448:	
  2243  04D0                     ;Proyecto1_master.c: 135:         lcd_write_string(":");
  2244                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  2245  04D0  3006               	fcall	_lcd_write_string
  2246  04D1  120A  118A  2148  120A  118A  	line	136
  2247                           ;Proyecto1_master.c: 136:         lcd_write_char(sec_1+48);
  2248                           	bcf	status, 5	;RP0=0, select bank0
  2249  04D6  1283               	bcf	status, 6	;RP1=0, select bank0
  2250  04D7  1303               	movf	(_sec_1),w
  2251  04D8  0830               	addlw	030h
  2252  04D9  3E30               	fcall	_lcd_write_char
  2253  04DA  120A  118A  20EA  120A  118A  	line	137
  2254                           ;Proyecto1_master.c: 137:         lcd_write_char(sec_0+48);
  2255                           	bcf	status, 5	;RP0=0, select bank0
  2256  04DF  1283               	bcf	status, 6	;RP1=0, select bank0
  2257  04E0  1303               	movf	(_sec_0),w
  2258  04E1  0831               	addlw	030h
  2259  04E2  3E30               	fcall	_lcd_write_char
  2260  04E3  120A  118A  20EA  120A  118A  	line	138
  2261                           	
  2262                           l104:	
  2263  04E8                     	return
  2264  04E8  0008               	opt stack 0
  2265                           GLOBAL	__end_of_mostrar_lcd
  2266                           	__end_of_mostrar_lcd:
  2267  04E9                     	signat	_mostrar_lcd,89
  2268                           	global	_lcd_write_string
  2269                           
  2270 ;; *************** function _lcd_write_string *****************
  2271 ;; Defined at:
  2272 ;;		line 131 in file "LCD.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  a               1    wreg     PTR unsigned char 
  2275 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2276 ;;		 -> STR_2(6), STR_1(7), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  a               1    6[COMMON] PTR unsigned char 
  2279 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2280 ;;		 -> STR_2(6), STR_1(7), 
  2281 ;;  i               2    4[COMMON] int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       0       0       0       0
  2292 ;;      Locals:         3       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0
  2294 ;;      Totals:         3       0       0       0       0
  2295 ;;Total ram usage:        3 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    2
  2298 ;; This function calls:
  2299 ;;		_lcd_write_char
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;;		_mostrar_lcd
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2306                           	file	"LCD.c"
  2307                           	line	131
  2308                           global __ptext3
  2309                           __ptext3:	;psect for function _lcd_write_string
  2310  0148                     psect	text3
  2311                           	file	"LCD.c"
  2312                           	line	131
  2313                           	global	__size_of_lcd_write_string
  2314                           	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  2315  0027                     	
  2316                           _lcd_write_string:	
  2317  0148                     ;incstack = 0
  2318                           	opt	stack 4
  2319                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2320                           ;lcd_write_string@a stored from wreg
  2321                           	movwf	(lcd_write_string@a)
  2322  0148  00F6               	line	134
  2323                           	
  2324                           l1316:	
  2325  0149                     ;LCD.c: 133:     int i;;LCD.c: 134:     for (i = 0; a[i] != '\0'; i++)
  2326                           	clrf	(lcd_write_string@i)
  2327  0149  01F4               	clrf	(lcd_write_string@i+1)
  2328  014A  01F5               	goto	l1322
  2329  014B  2960               	
  2330                           l263:	
  2331  014C                     	line	135
  2332                           	
  2333                           l1318:	
  2334  014C                     ;LCD.c: 135:         lcd_write_char(a[i]);
  2335                           	movf	(lcd_write_string@i),w
  2336  014C  0874               	addwf	(lcd_write_string@a),w
  2337  014D  0776               	movwf	fsr0
  2338  014E  0084               	fcall	stringdir
  2339  014F  120A  118A  2003  120A  118A  	fcall	_lcd_write_char
  2340  0154  120A  118A  20EA  120A  118A  	
  2341                           l1320:	
  2342  0159                     	movlw	01h
  2343  0159  3001               	addwf	(lcd_write_string@i),f
  2344  015A  07F4               	skipnc
  2345  015B  1803               	incf	(lcd_write_string@i+1),f
  2346  015C  0AF5               	movlw	0
  2347  015D  3000               	addwf	(lcd_write_string@i+1),f
  2348  015E  07F5               	goto	l1322
  2349  015F  2960               	
  2350                           l262:	
  2351  0160                     	
  2352                           l1322:	
  2353  0160                     	movf	(lcd_write_string@i),w
  2354  0160  0874               	addwf	(lcd_write_string@a),w
  2355  0161  0776               	movwf	fsr0
  2356  0162  0084               	fcall	stringdir
  2357  0163  120A  118A  2003  120A  118A  	xorlw	0
  2358  0168  3A00               	skipz
  2359  0169  1D03               	goto	u791
  2360  016A  296C               	goto	u790
  2361  016B  296D               u791:
  2362  016C                     	goto	l1318
  2363  016C  294C               u790:
  2364  016D                     	goto	l265
  2365  016D  296E               	
  2366                           l264:	
  2367  016E                     	line	136
  2368                           	
  2369                           l265:	
  2370  016E                     	return
  2371  016E  0008               	opt stack 0
  2372                           GLOBAL	__end_of_lcd_write_string
  2373                           	__end_of_lcd_write_string:
  2374  016F                     	signat	_lcd_write_string,4217
  2375                           	global	_lcd_write_char
  2376                           
  2377 ;; *************** function _lcd_write_char *****************
  2378 ;; Defined at:
  2379 ;;		line 121 in file "LCD.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  a               1    wreg     unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  a               1    3[COMMON] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0
  2395 ;;      Temps:          2       0       0       0       0
  2396 ;;      Totals:         3       0       0       0       0
  2397 ;;Total ram usage:        3 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    1
  2400 ;; This function calls:
  2401 ;;		_lcd_port
  2402 ;; This function is called by:
  2403 ;;		_mostrar_lcd
  2404 ;;		_lcd_write_string
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2408                           	line	121
  2409                           global __ptext4
  2410                           __ptext4:	;psect for function _lcd_write_char
  2411  00EA                     psect	text4
  2412                           	file	"LCD.c"
  2413                           	line	121
  2414                           	global	__size_of_lcd_write_char
  2415                           	__size_of_lcd_write_char	equ	__end_of_lcd_write_char-_lcd_write_char
  2416  001A                     	
  2417                           _lcd_write_char:	
  2418  00EA                     ;incstack = 0
  2419                           	opt	stack 4
  2420                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  2421                           ;lcd_write_char@a stored from wreg
  2422                           	movwf	(lcd_write_char@a)
  2423  00EA  00F3               	line	123
  2424                           	
  2425                           l1196:	
  2426  00EB                     ;LCD.c: 123:     RB7 = 1;
  2427                           	bcf	status, 5	;RP0=0, select bank0
  2428  00EB  1283               	bcf	status, 6	;RP1=0, select bank0
  2429  00EC  1303               	bsf	(55/8),(55)&7	;volatile
  2430  00ED  1786               	line	124
  2431                           	
  2432                           l1198:	
  2433  00EE                     ;LCD.c: 124:     lcd_port(a);
  2434                           	movf	(lcd_write_char@a),w
  2435  00EE  0873               	fcall	_lcd_port
  2436  00EF  120A  118A  222F  120A  118A  	line	126
  2437                           	
  2438                           l1200:	
  2439  00F4                     ;LCD.c: 126:     RD7 = 1;
  2440                           	bcf	status, 5	;RP0=0, select bank0
  2441  00F4  1283               	bcf	status, 6	;RP1=0, select bank0
  2442  00F5  1303               	bsf	(71/8),(71)&7	;volatile
  2443  00F6  1788               	line	127
  2444                           	
  2445                           l1202:	
  2446  00F7                     ;LCD.c: 127:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2447                           	opt asmopt_push
  2448                           opt asmopt_off
  2449                           movlw	6
  2450  00F7  3006               movwf	((??_lcd_write_char+0)+0+1),f
  2451  00F8  00F2               	movlw	48
  2452  00F9  3030               movwf	((??_lcd_write_char+0)+0),f
  2453  00FA  00F1               	u917:
  2454  00FB                     decfsz	((??_lcd_write_char+0)+0),f
  2455  00FB  0BF1               	goto	u917
  2456  00FC  28FB               	decfsz	((??_lcd_write_char+0)+0+1),f
  2457  00FD  0BF2               	goto	u917
  2458  00FE  28FB               	nop
  2459  00FF  0000               opt asmopt_pop
  2460                           
  2461                           	line	128
  2462                           	
  2463                           l1204:	
  2464  0100                     ;LCD.c: 128:     RD7 = 0;
  2465                           	bcf	status, 5	;RP0=0, select bank0
  2466  0100  1283               	bcf	status, 6	;RP1=0, select bank0
  2467  0101  1303               	bcf	(71/8),(71)&7	;volatile
  2468  0102  1388               	line	129
  2469                           	
  2470                           l259:	
  2471  0103                     	return
  2472  0103  0008               	opt stack 0
  2473                           GLOBAL	__end_of_lcd_write_char
  2474                           	__end_of_lcd_write_char:
  2475  0104                     	signat	_lcd_write_char,4217
  2476                           	global	_lcd_set_cursor
  2477                           
  2478 ;; *************** function _lcd_set_cursor *****************
  2479 ;; Defined at:
  2480 ;;		line 110 in file "LCD.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  a               1    wreg     unsigned char 
  2483 ;;  b               1    4[COMMON] unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  a               1    5[COMMON] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         1       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0
  2498 ;;      Totals:         2       0       0       0       0
  2499 ;;Total ram usage:        2 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    2
  2502 ;; This function calls:
  2503 ;;		_lcd_cmd
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;;		_mostrar_lcd
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2510                           	line	110
  2511                           global __ptext5
  2512                           __ptext5:	;psect for function _lcd_set_cursor
  2513  0104                     psect	text5
  2514                           	file	"LCD.c"
  2515                           	line	110
  2516                           	global	__size_of_lcd_set_cursor
  2517                           	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  2518  001E                     	
  2519                           _lcd_set_cursor:	
  2520  0104                     ;incstack = 0
  2521                           	opt	stack 4
  2522                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2523                           ;lcd_set_cursor@a stored from wreg
  2524                           	movwf	(lcd_set_cursor@a)
  2525  0104  00F5               	line	111
  2526                           	
  2527                           l1324:	
  2528  0105                     ;LCD.c: 111:     if (a == 1){
  2529                           		decf	((lcd_set_cursor@a)),w
  2530  0105  0375               	btfss	status,2
  2531  0106  1D03               	goto	u801
  2532  0107  2909               	goto	u800
  2533  0108  290A               u801:
  2534  0109                     	goto	l1328
  2535  0109  2912               u800:
  2536  010A                     	line	114
  2537                           	
  2538                           l1326:	
  2539  010A                     ;LCD.c: 114:         lcd_cmd(0x80 + b - 1);
  2540                           	movf	(lcd_set_cursor@b),w
  2541  010A  0874               	addlw	07Fh
  2542  010B  3E7F               	fcall	_lcd_cmd
  2543  010C  120A  118A  20D0  120A  118A  	line	115
  2544                           ;LCD.c: 115:     } else if (a == 2){
  2545                           	goto	l256
  2546  0111  2921               	
  2547                           l253:	
  2548  0112                     	
  2549                           l1328:	
  2550  0112                     		movlw	2
  2551  0112  3002               	xorwf	((lcd_set_cursor@a)),w
  2552  0113  0675               	btfss	status,2
  2553  0114  1D03               	goto	u811
  2554  0115  2917               	goto	u810
  2555  0116  2918               u811:
  2556  0117                     	goto	l256
  2557  0117  2921               u810:
  2558  0118                     	line	117
  2559                           	
  2560                           l1330:	
  2561  0118                     ;LCD.c: 117:         lcd_cmd(0xC0 + b - 1);
  2562                           	movf	(lcd_set_cursor@b),w
  2563  0118  0874               	addlw	0BFh
  2564  0119  3EBF               	fcall	_lcd_cmd
  2565  011A  120A  118A  20D0  120A  118A  	goto	l256
  2566  011F  2921               	line	118
  2567                           ;LCD.c: 118:     }
  2568                           	
  2569                           l255:	
  2570  0120                     	goto	l256
  2571  0120  2921               	
  2572                           l254:	
  2573  0121                     	line	119
  2574                           	
  2575                           l256:	
  2576  0121                     	return
  2577  0121  0008               	opt stack 0
  2578                           GLOBAL	__end_of_lcd_set_cursor
  2579                           	__end_of_lcd_set_cursor:
  2580  0122                     	signat	_lcd_set_cursor,8313
  2581                           	global	_lcd_init
  2582                           
  2583 ;; *************** function _lcd_init *****************
  2584 ;; Defined at:
  2585 ;;		line 85 in file "LCD.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0, pclath, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2599 ;;      Params:         0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0
  2601 ;;      Temps:          2       0       0       0       0
  2602 ;;      Totals:         2       0       0       0       0
  2603 ;;Total ram usage:        2 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    2
  2606 ;; This function calls:
  2607 ;;		_lcd_cmd
  2608 ;;		_lcd_port
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2614                           	line	85
  2615                           global __ptext6
  2616                           __ptext6:	;psect for function _lcd_init
  2617  02BA                     psect	text6
  2618                           	file	"LCD.c"
  2619                           	line	85
  2620                           	global	__size_of_lcd_init
  2621                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  2622  0055                     	
  2623                           _lcd_init:	
  2624  02BA                     ;incstack = 0
  2625                           	opt	stack 5
  2626                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2627                           	line	87
  2628                           	
  2629                           l1392:	
  2630  02BA                     ;LCD.c: 87:     _delay((unsigned long)((15)*(4000000/4000.0)));
  2631                           	opt asmopt_push
  2632                           opt asmopt_off
  2633                           movlw	20
  2634  02BA  3014               movwf	((??_lcd_init+0)+0+1),f
  2635  02BB  00F5               	movlw	121
  2636  02BC  3079               movwf	((??_lcd_init+0)+0),f
  2637  02BD  00F4               	u927:
  2638  02BE                     decfsz	((??_lcd_init+0)+0),f
  2639  02BE  0BF4               	goto	u927
  2640  02BF  2ABE               	decfsz	((??_lcd_init+0)+0+1),f
  2641  02C0  0BF5               	goto	u927
  2642  02C1  2ABE               	nop2
  2643  02C2  2AC3               opt asmopt_pop
  2644                           
  2645                           	line	88
  2646                           	
  2647                           l1394:	
  2648  02C3                     ;LCD.c: 88:     lcd_port(0x00);
  2649                           	movlw	low(0)
  2650  02C3  3000               	fcall	_lcd_port
  2651  02C4  120A  118A  222F  120A  118A  	line	89
  2652                           	
  2653                           l1396:	
  2654  02C9                     ;LCD.c: 89:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2655                           	opt asmopt_push
  2656                           opt asmopt_off
  2657                           movlw	26
  2658  02C9  301A               movwf	((??_lcd_init+0)+0+1),f
  2659  02CA  00F5               	movlw	248
  2660  02CB  30F8               movwf	((??_lcd_init+0)+0),f
  2661  02CC  00F4               	u937:
  2662  02CD                     decfsz	((??_lcd_init+0)+0),f
  2663  02CD  0BF4               	goto	u937
  2664  02CE  2ACD               	decfsz	((??_lcd_init+0)+0+1),f
  2665  02CF  0BF5               	goto	u937
  2666  02D0  2ACD               	nop
  2667  02D1  0000               opt asmopt_pop
  2668                           
  2669                           	line	90
  2670                           ;LCD.c: 90:     lcd_cmd(0x30);
  2671                           	movlw	low(030h)
  2672  02D2  3030               	fcall	_lcd_cmd
  2673  02D3  120A  118A  20D0  120A  118A  	line	91
  2674                           	
  2675                           l1398:	
  2676  02D8                     ;LCD.c: 91:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2677                           	opt asmopt_push
  2678                           opt asmopt_off
  2679                           movlw	7
  2680  02D8  3007               movwf	((??_lcd_init+0)+0+1),f
  2681  02D9  00F5               	movlw	125
  2682  02DA  307D               movwf	((??_lcd_init+0)+0),f
  2683  02DB  00F4               	u947:
  2684  02DC                     decfsz	((??_lcd_init+0)+0),f
  2685  02DC  0BF4               	goto	u947
  2686  02DD  2ADC               	decfsz	((??_lcd_init+0)+0+1),f
  2687  02DE  0BF5               	goto	u947
  2688  02DF  2ADC               opt asmopt_pop
  2689                           
  2690                           	line	92
  2691                           	
  2692                           l1400:	
  2693  02E0                     ;LCD.c: 92:     lcd_cmd(0x30);
  2694                           	movlw	low(030h)
  2695  02E0  3030               	fcall	_lcd_cmd
  2696  02E1  120A  118A  20D0  120A  118A  	line	93
  2697                           ;LCD.c: 93:  _delay((unsigned long)((160)*(4000000/4000000.0)));
  2698                           	opt asmopt_push
  2699                           opt asmopt_off
  2700                           	movlw	53
  2701  02E6  3035               movwf	((??_lcd_init+0)+0),f
  2702  02E7  00F4               	u957:
  2703  02E8                     decfsz	(??_lcd_init+0)+0,f
  2704  02E8  0BF4               	goto	u957
  2705  02E9  2AE8               opt asmopt_pop
  2706                           
  2707                           	line	94
  2708                           	
  2709                           l1402:	
  2710  02EA                     ;LCD.c: 94:     lcd_cmd(0x30);
  2711                           	movlw	low(030h)
  2712  02EA  3030               	fcall	_lcd_cmd
  2713  02EB  120A  118A  20D0  120A  118A  	line	97
  2714                           	
  2715                           l1404:	
  2716  02F0                     ;LCD.c: 97:     lcd_cmd(0x38);
  2717                           	movlw	low(038h)
  2718  02F0  3038               	fcall	_lcd_cmd
  2719  02F1  120A  118A  20D0  120A  118A  	line	98
  2720                           	
  2721                           l1406:	
  2722  02F6                     ;LCD.c: 98:     lcd_cmd(0x10);
  2723                           	movlw	low(010h)
  2724  02F6  3010               	fcall	_lcd_cmd
  2725  02F7  120A  118A  20D0  120A  118A  	line	99
  2726                           	
  2727                           l1408:	
  2728  02FC                     ;LCD.c: 99:     lcd_cmd(0x01);
  2729                           	movlw	low(01h)
  2730  02FC  3001               	fcall	_lcd_cmd
  2731  02FD  120A  118A  20D0  120A  118A  	line	100
  2732                           	
  2733                           l1410:	
  2734  0302                     ;LCD.c: 100:     lcd_cmd(0x06);
  2735                           	movlw	low(06h)
  2736  0302  3006               	fcall	_lcd_cmd
  2737  0303  120A  118A  20D0  120A  118A  	line	101
  2738                           	
  2739                           l1412:	
  2740  0308                     ;LCD.c: 101:     lcd_cmd(0x0C);
  2741                           	movlw	low(0Ch)
  2742  0308  300C               	fcall	_lcd_cmd
  2743  0309  120A  118A  20D0  120A  118A  	line	103
  2744                           	
  2745                           l247:	
  2746  030E                     	return
  2747  030E  0008               	opt stack 0
  2748                           GLOBAL	__end_of_lcd_init
  2749                           	__end_of_lcd_init:
  2750  030F                     	signat	_lcd_init,89
  2751                           	global	_lcd_cmd
  2752                           
  2753 ;; *************** function _lcd_cmd *****************
  2754 ;; Defined at:
  2755 ;;		line 75 in file "LCD.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  a               1    wreg     unsigned char 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  a               1    3[COMMON] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, pclath, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2769 ;;      Params:         0       0       0       0       0
  2770 ;;      Locals:         1       0       0       0       0
  2771 ;;      Temps:          2       0       0       0       0
  2772 ;;      Totals:         3       0       0       0       0
  2773 ;;Total ram usage:        3 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    1
  2776 ;; This function calls:
  2777 ;;		_lcd_port
  2778 ;; This function is called by:
  2779 ;;		_lcd_init
  2780 ;;		_lcd_set_cursor
  2781 ;;		_lcd_clear
  2782 ;;		_lcd_shift_right
  2783 ;;		_lcd_shift_left
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2787                           	line	75
  2788                           global __ptext7
  2789                           __ptext7:	;psect for function _lcd_cmd
  2790  00D0                     psect	text7
  2791                           	file	"LCD.c"
  2792                           	line	75
  2793                           	global	__size_of_lcd_cmd
  2794                           	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  2795  001A                     	
  2796                           _lcd_cmd:	
  2797  00D0                     ;incstack = 0
  2798                           	opt	stack 4
  2799                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2800                           ;lcd_cmd@a stored from wreg
  2801                           	movwf	(lcd_cmd@a)
  2802  00D0  00F3               	line	77
  2803                           	
  2804                           l1210:	
  2805  00D1                     ;LCD.c: 77:     RB7 = 0;
  2806                           	bcf	status, 5	;RP0=0, select bank0
  2807  00D1  1283               	bcf	status, 6	;RP1=0, select bank0
  2808  00D2  1303               	bcf	(55/8),(55)&7	;volatile
  2809  00D3  1386               	line	78
  2810                           	
  2811                           l1212:	
  2812  00D4                     ;LCD.c: 78:     lcd_port(a);
  2813                           	movf	(lcd_cmd@a),w
  2814  00D4  0873               	fcall	_lcd_port
  2815  00D5  120A  118A  222F  120A  118A  	line	80
  2816                           	
  2817                           l1214:	
  2818  00DA                     ;LCD.c: 80:     RD7 = 1;
  2819                           	bcf	status, 5	;RP0=0, select bank0
  2820  00DA  1283               	bcf	status, 6	;RP1=0, select bank0
  2821  00DB  1303               	bsf	(71/8),(71)&7	;volatile
  2822  00DC  1788               	line	81
  2823                           	
  2824                           l1216:	
  2825  00DD                     ;LCD.c: 81:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2826                           	opt asmopt_push
  2827                           opt asmopt_off
  2828                           movlw	13
  2829  00DD  300D               movwf	((??_lcd_cmd+0)+0+1),f
  2830  00DE  00F2               	movlw	251
  2831  00DF  30FB               movwf	((??_lcd_cmd+0)+0),f
  2832  00E0  00F1               	u967:
  2833  00E1                     decfsz	((??_lcd_cmd+0)+0),f
  2834  00E1  0BF1               	goto	u967
  2835  00E2  28E1               	decfsz	((??_lcd_cmd+0)+0+1),f
  2836  00E3  0BF2               	goto	u967
  2837  00E4  28E1               	nop2
  2838  00E5  28E6               opt asmopt_pop
  2839                           
  2840                           	line	82
  2841                           	
  2842                           l1218:	
  2843  00E6                     ;LCD.c: 82:     RD7 = 0;
  2844                           	bcf	status, 5	;RP0=0, select bank0
  2845  00E6  1283               	bcf	status, 6	;RP1=0, select bank0
  2846  00E7  1303               	bcf	(71/8),(71)&7	;volatile
  2847  00E8  1388               	line	83
  2848                           	
  2849                           l244:	
  2850  00E9                     	return
  2851  00E9  0008               	opt stack 0
  2852                           GLOBAL	__end_of_lcd_cmd
  2853                           	__end_of_lcd_cmd:
  2854  00EA                     	signat	_lcd_cmd,4217
  2855                           	global	_lcd_port
  2856                           
  2857 ;; *************** function _lcd_port *****************
  2858 ;; Defined at:
  2859 ;;		line 24 in file "LCD.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  a               1    wreg     unsigned char 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  a               1    0[COMMON] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         0       0       0       0       0
  2874 ;;      Locals:         1       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0
  2876 ;;      Totals:         1       0       0       0       0
  2877 ;;Total ram usage:        1 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_lcd_cmd
  2883 ;;		_lcd_init
  2884 ;;		_lcd_write_char
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2888                           	line	24
  2889                           global __ptext8
  2890                           __ptext8:	;psect for function _lcd_port
  2891  022F                     psect	text8
  2892                           	file	"LCD.c"
  2893                           	line	24
  2894                           	global	__size_of_lcd_port
  2895                           	__size_of_lcd_port	equ	__end_of_lcd_port-_lcd_port
  2896  003F                     	
  2897                           _lcd_port:	
  2898  022F                     ;incstack = 0
  2899                           	opt	stack 4
  2900                           ; Regs used in _lcd_port: [wreg]
  2901                           ;lcd_port@a stored from wreg
  2902                           	movwf	(lcd_port@a)
  2903  022F  00F0               	line	26
  2904                           	
  2905                           l1178:	
  2906  0230                     ;LCD.c: 26:     if(a & 1){
  2907                           	btfss	(lcd_port@a),(0)&7
  2908  0230  1C70               	goto	u461
  2909  0231  2A33               	goto	u460
  2910  0232  2A34               u461:
  2911  0233                     	goto	l225
  2912  0233  2A38               u460:
  2913  0234                     	line	27
  2914                           	
  2915                           l1180:	
  2916  0234                     ;LCD.c: 27:         RA0 = 1;
  2917                           	bcf	status, 5	;RP0=0, select bank0
  2918  0234  1283               	bcf	status, 6	;RP1=0, select bank0
  2919  0235  1303               	bsf	(40/8),(40)&7	;volatile
  2920  0236  1405               	line	28
  2921                           ;LCD.c: 28:     } else {
  2922                           	goto	l226
  2923  0237  2A3B               	
  2924                           l225:	
  2925  0238                     	line	29
  2926                           ;LCD.c: 29:         RA0 = 0;
  2927                           	bcf	status, 5	;RP0=0, select bank0
  2928  0238  1283               	bcf	status, 6	;RP1=0, select bank0
  2929  0239  1303               	bcf	(40/8),(40)&7	;volatile
  2930  023A  1005               	line	30
  2931                           ;LCD.c: 30:     }
  2932                           	
  2933                           l226:	
  2934  023B                     	line	32
  2935                           ;LCD.c: 32:     if(a & 2){
  2936                           	btfss	(lcd_port@a),(1)&7
  2937  023B  1CF0               	goto	u471
  2938  023C  2A3E               	goto	u470
  2939  023D  2A3F               u471:
  2940  023E                     	goto	l227
  2941  023E  2A41               u470:
  2942  023F                     	line	33
  2943                           	
  2944                           l1182:	
  2945  023F                     ;LCD.c: 33:         RA1 = 1;
  2946                           	bsf	(41/8),(41)&7	;volatile
  2947  023F  1485               	line	34
  2948                           ;LCD.c: 34:     } else {
  2949                           	goto	l228
  2950  0240  2A42               	
  2951                           l227:	
  2952  0241                     	line	35
  2953                           ;LCD.c: 35:         RA1 = 0;
  2954                           	bcf	(41/8),(41)&7	;volatile
  2955  0241  1085               	line	36
  2956                           ;LCD.c: 36:     }
  2957                           	
  2958                           l228:	
  2959  0242                     	line	38
  2960                           ;LCD.c: 38:     if(a & 4){
  2961                           	btfss	(lcd_port@a),(2)&7
  2962  0242  1D70               	goto	u481
  2963  0243  2A45               	goto	u480
  2964  0244  2A46               u481:
  2965  0245                     	goto	l229
  2966  0245  2A48               u480:
  2967  0246                     	line	39
  2968                           	
  2969                           l1184:	
  2970  0246                     ;LCD.c: 39:         RA2 = 1;
  2971                           	bsf	(42/8),(42)&7	;volatile
  2972  0246  1505               	line	40
  2973                           ;LCD.c: 40:     } else {
  2974                           	goto	l230
  2975  0247  2A49               	
  2976                           l229:	
  2977  0248                     	line	41
  2978                           ;LCD.c: 41:         RA2 = 0;
  2979                           	bcf	(42/8),(42)&7	;volatile
  2980  0248  1105               	line	42
  2981                           ;LCD.c: 42:     }
  2982                           	
  2983                           l230:	
  2984  0249                     	line	44
  2985                           ;LCD.c: 44:     if(a & 8){
  2986                           	btfss	(lcd_port@a),(3)&7
  2987  0249  1DF0               	goto	u491
  2988  024A  2A4C               	goto	u490
  2989  024B  2A4D               u491:
  2990  024C                     	goto	l231
  2991  024C  2A4F               u490:
  2992  024D                     	line	45
  2993                           	
  2994                           l1186:	
  2995  024D                     ;LCD.c: 45:         RA3 = 1;
  2996                           	bsf	(43/8),(43)&7	;volatile
  2997  024D  1585               	line	46
  2998                           ;LCD.c: 46:     } else {
  2999                           	goto	l232
  3000  024E  2A50               	
  3001                           l231:	
  3002  024F                     	line	47
  3003                           ;LCD.c: 47:         RA3 = 0;
  3004                           	bcf	(43/8),(43)&7	;volatile
  3005  024F  1185               	line	48
  3006                           ;LCD.c: 48:     }
  3007                           	
  3008                           l232:	
  3009  0250                     	line	50
  3010                           ;LCD.c: 50:     if(a & 16){
  3011                           	btfss	(lcd_port@a),(4)&7
  3012  0250  1E70               	goto	u501
  3013  0251  2A53               	goto	u500
  3014  0252  2A54               u501:
  3015  0253                     	goto	l233
  3016  0253  2A56               u500:
  3017  0254                     	line	51
  3018                           	
  3019                           l1188:	
  3020  0254                     ;LCD.c: 51:         RA4 = 1;
  3021                           	bsf	(44/8),(44)&7	;volatile
  3022  0254  1605               	line	52
  3023                           ;LCD.c: 52:     } else {
  3024                           	goto	l234
  3025  0255  2A57               	
  3026                           l233:	
  3027  0256                     	line	53
  3028                           ;LCD.c: 53:         RA4 = 0;
  3029                           	bcf	(44/8),(44)&7	;volatile
  3030  0256  1205               	line	54
  3031                           ;LCD.c: 54:     }
  3032                           	
  3033                           l234:	
  3034  0257                     	line	56
  3035                           ;LCD.c: 56:     if(a & 32){
  3036                           	btfss	(lcd_port@a),(5)&7
  3037  0257  1EF0               	goto	u511
  3038  0258  2A5A               	goto	u510
  3039  0259  2A5B               u511:
  3040  025A                     	goto	l235
  3041  025A  2A5D               u510:
  3042  025B                     	line	57
  3043                           	
  3044                           l1190:	
  3045  025B                     ;LCD.c: 57:         RA5 = 1;
  3046                           	bsf	(45/8),(45)&7	;volatile
  3047  025B  1685               	line	58
  3048                           ;LCD.c: 58:     } else {
  3049                           	goto	l236
  3050  025C  2A5E               	
  3051                           l235:	
  3052  025D                     	line	59
  3053                           ;LCD.c: 59:         RA5 = 0;
  3054                           	bcf	(45/8),(45)&7	;volatile
  3055  025D  1285               	line	60
  3056                           ;LCD.c: 60:     }
  3057                           	
  3058                           l236:	
  3059  025E                     	line	62
  3060                           ;LCD.c: 62:     if(a & 64){
  3061                           	btfss	(lcd_port@a),(6)&7
  3062  025E  1F70               	goto	u521
  3063  025F  2A61               	goto	u520
  3064  0260  2A62               u521:
  3065  0261                     	goto	l237
  3066  0261  2A64               u520:
  3067  0262                     	line	63
  3068                           	
  3069                           l1192:	
  3070  0262                     ;LCD.c: 63:         RA6 = 1;
  3071                           	bsf	(46/8),(46)&7	;volatile
  3072  0262  1705               	line	64
  3073                           ;LCD.c: 64:     } else {
  3074                           	goto	l238
  3075  0263  2A65               	
  3076                           l237:	
  3077  0264                     	line	65
  3078                           ;LCD.c: 65:         RA6 = 0;
  3079                           	bcf	(46/8),(46)&7	;volatile
  3080  0264  1305               	line	66
  3081                           ;LCD.c: 66:     }
  3082                           	
  3083                           l238:	
  3084  0265                     	line	68
  3085                           ;LCD.c: 68:     if(a & 128){
  3086                           	btfss	(lcd_port@a),(7)&7
  3087  0265  1FF0               	goto	u531
  3088  0266  2A68               	goto	u530
  3089  0267  2A69               u531:
  3090  0268                     	goto	l239
  3091  0268  2A6B               u530:
  3092  0269                     	line	69
  3093                           	
  3094                           l1194:	
  3095  0269                     ;LCD.c: 69:         RA7 = 1;
  3096                           	bsf	(47/8),(47)&7	;volatile
  3097  0269  1785               	line	70
  3098                           ;LCD.c: 70:     } else {
  3099                           	goto	l241
  3100  026A  2A6D               	
  3101                           l239:	
  3102  026B                     	line	71
  3103                           ;LCD.c: 71:         RA7 = 0;
  3104                           	bcf	(47/8),(47)&7	;volatile
  3105  026B  1385               	goto	l241
  3106  026C  2A6D               	line	72
  3107                           ;LCD.c: 72:     }
  3108                           	
  3109                           l240:	
  3110  026D                     	line	73
  3111                           	
  3112                           l241:	
  3113  026D                     	return
  3114  026D  0008               	opt stack 0
  3115                           GLOBAL	__end_of_lcd_port
  3116                           	__end_of_lcd_port:
  3117  026E                     	signat	_lcd_port,4217
  3118                           	global	_initOsci4MHZ
  3119                           
  3120 ;; *************** function _initOsci4MHZ *****************
  3121 ;; Defined at:
  3122 ;;		line 52 in file "oscilador.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		None
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_main
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3149                           	file	"oscilador.c"
  3150                           	line	52
  3151                           global __ptext9
  3152                           __ptext9:	;psect for function _initOsci4MHZ
  3153  0066                     psect	text9
  3154                           	file	"oscilador.c"
  3155                           	line	52
  3156                           	global	__size_of_initOsci4MHZ
  3157                           	__size_of_initOsci4MHZ	equ	__end_of_initOsci4MHZ-_initOsci4MHZ
  3158  0007                     	
  3159                           _initOsci4MHZ:	
  3160  0066                     ;incstack = 0
  3161                           	opt	stack 7
  3162                           ; Regs used in _initOsci4MHZ: []
  3163                           	line	53
  3164                           	
  3165                           l1058:	
  3166  0066                     ;oscilador.c: 53:     OSCCONbits.IRCF0 = 0;
  3167                           	bsf	status, 5	;RP0=1, select bank1
  3168  0066  1683               	bcf	status, 6	;RP1=0, select bank1
  3169  0067  1303               	bcf	(143)^080h,4	;volatile
  3170  0068  120F               	line	54
  3171                           ;oscilador.c: 54:     OSCCONbits.IRCF1 = 1;
  3172                           	bsf	(143)^080h,5	;volatile
  3173  0069  168F               	line	55
  3174                           ;oscilador.c: 55:     OSCCONbits.IRCF2 = 1;
  3175                           	bsf	(143)^080h,6	;volatile
  3176  006A  170F               	line	56
  3177                           ;oscilador.c: 56:     OSCCONbits.SCS = 1;
  3178                           	bsf	(143)^080h,0	;volatile
  3179  006B  140F               	line	57
  3180                           	
  3181                           l142:	
  3182  006C                     	return
  3183  006C  0008               	opt stack 0
  3184                           GLOBAL	__end_of_initOsci4MHZ
  3185                           	__end_of_initOsci4MHZ:
  3186  006D                     	signat	_initOsci4MHZ,89
  3187                           	global	_configPorts
  3188                           
  3189 ;; *************** function _configPorts *****************
  3190 ;; Defined at:
  3191 ;;		line 140 in file "Proyecto1_master.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		status,2
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3218                           	file	"Proyecto1_master.c"
  3219                           	line	140
  3220                           global __ptext10
  3221                           __ptext10:	;psect for function _configPorts
  3222  00AC                     psect	text10
  3223                           	file	"Proyecto1_master.c"
  3224                           	line	140
  3225                           	global	__size_of_configPorts
  3226                           	__size_of_configPorts	equ	__end_of_configPorts-_configPorts
  3227  0011                     	
  3228                           _configPorts:	
  3229  00AC                     ;incstack = 0
  3230                           	opt	stack 7
  3231                           ; Regs used in _configPorts: [status,2]
  3232                           	line	141
  3233                           	
  3234                           l1060:	
  3235  00AC                     ;Proyecto1_master.c: 141:     TRISA = 0;
  3236                           	bsf	status, 5	;RP0=1, select bank1
  3237  00AC  1683               	bcf	status, 6	;RP1=0, select bank1
  3238  00AD  1303               	clrf	(133)^080h	;volatile
  3239  00AE  0185               	line	143
  3240                           ;Proyecto1_master.c: 143:     TRISD = 0;
  3241                           	clrf	(136)^080h	;volatile
  3242  00AF  0188               	line	144
  3243                           ;Proyecto1_master.c: 144:     TRISE = 0;
  3244                           	clrf	(137)^080h	;volatile
  3245  00B0  0189               	line	145
  3246                           ;Proyecto1_master.c: 145:     TRISB = 0;
  3247                           	clrf	(134)^080h	;volatile
  3248  00B1  0186               	line	147
  3249                           ;Proyecto1_master.c: 147:     PORTA = 0;
  3250                           	bcf	status, 5	;RP0=0, select bank0
  3251  00B2  1283               	bcf	status, 6	;RP1=0, select bank0
  3252  00B3  1303               	clrf	(5)	;volatile
  3253  00B4  0185               	line	149
  3254                           ;Proyecto1_master.c: 149:     PORTD = 0;
  3255                           	clrf	(8)	;volatile
  3256  00B5  0188               	line	150
  3257                           ;Proyecto1_master.c: 150:     PORTE = 0;
  3258                           	clrf	(9)	;volatile
  3259  00B6  0189               	line	151
  3260                           ;Proyecto1_master.c: 151:     PORTB = 0;
  3261                           	clrf	(6)	;volatile
  3262  00B7  0186               	line	153
  3263                           ;Proyecto1_master.c: 153:     ANSEL = 0;
  3264                           	bsf	status, 5	;RP0=1, select bank3
  3265  00B8  1683               	bsf	status, 6	;RP1=1, select bank3
  3266  00B9  1703               	clrf	(392)^0180h	;volatile
  3267  00BA  0188               	line	154
  3268                           ;Proyecto1_master.c: 154:     ANSELH = 0;
  3269                           	clrf	(393)^0180h	;volatile
  3270  00BB  0189               	line	156
  3271                           	
  3272                           l107:	
  3273  00BC                     	return
  3274  00BC  0008               	opt stack 0
  3275                           GLOBAL	__end_of_configPorts
  3276                           	__end_of_configPorts:
  3277  00BD                     	signat	_configPorts,89
  3278                           	global	_Update_Current_Date_Time
  3279                           
  3280 ;; *************** function _Update_Current_Date_Time *****************
  3281 ;; Defined at:
  3282 ;;		line 229 in file "Proyecto1_master.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0, pclath, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3296 ;;      Params:         0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0
  3299 ;;      Totals:         0       0       0       0       0
  3300 ;;Total ram usage:        0 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    2
  3303 ;; This function calls:
  3304 ;;		_BCD_2_DEC
  3305 ;;		_I2C_Master_Read
  3306 ;;		_I2C_Master_Start
  3307 ;;		_I2C_Master_Stop
  3308 ;;		_I2C_Master_Write
  3309 ;; This function is called by:
  3310 ;;		_main
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3314                           	line	229
  3315                           global __ptext11
  3316                           __ptext11:	;psect for function _Update_Current_Date_Time
  3317  067F                     psect	text11
  3318                           	file	"Proyecto1_master.c"
  3319                           	line	229
  3320                           	global	__size_of_Update_Current_Date_Time
  3321                           	__size_of_Update_Current_Date_Time	equ	__end_of_Update_Current_Date_Time-_Update_Curren
                                 t_Date_Time
  3322  0167                     	
  3323                           _Update_Current_Date_Time:	
  3324  067F                     ;incstack = 0
  3325                           	opt	stack 5
  3326                           ; Regs used in _Update_Current_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  3327                           	line	231
  3328                           	
  3329                           l1428:	
  3330  067F                     ;Proyecto1_master.c: 231:    I2C_Master_Start();
  3331                           	fcall	_I2C_Master_Start
  3332  067F  120A  118A  2075  120A  118A  	line	232
  3333                           ;Proyecto1_master.c: 232:    I2C_Master_Write(0xD0);
  3334                           	movlw	0D0h
  3335  0684  30D0               	bcf	status, 5	;RP0=0, select bank0
  3336  0685  1283               	bcf	status, 6	;RP1=0, select bank0
  3337  0686  1303               	movwf	(I2C_Master_Write@d)
  3338  0687  00BE               	movlw	0
  3339  0688  3000               	movwf	((I2C_Master_Write@d))+1
  3340  0689  00BF               	fcall	_I2C_Master_Write
  3341  068A  120A  118A  2087  120A  118A  	line	233
  3342                           ;Proyecto1_master.c: 233:    I2C_Master_Write(0);
  3343                           	movlw	0
  3344  068F  3000               	bcf	status, 5	;RP0=0, select bank0
  3345  0690  1283               	bcf	status, 6	;RP1=0, select bank0
  3346  0691  1303               	movwf	(I2C_Master_Write@d)
  3347  0692  00BE               	movwf	(I2C_Master_Write@d+1)
  3348  0693  00BF               	fcall	_I2C_Master_Write
  3349  0694  120A  118A  2087  120A  118A  	line	234
  3350                           ;Proyecto1_master.c: 234:    I2C_Master_Stop();
  3351                           	fcall	_I2C_Master_Stop
  3352  0699  120A  118A  207E  120A  118A  	line	237
  3353                           ;Proyecto1_master.c: 237:    I2C_Master_Start();
  3354                           	fcall	_I2C_Master_Start
  3355  069E  120A  118A  2075  120A  118A  	line	238
  3356                           ;Proyecto1_master.c: 238:    I2C_Master_Write(0xD1);
  3357                           	movlw	0D1h
  3358  06A3  30D1               	bcf	status, 5	;RP0=0, select bank0
  3359  06A4  1283               	bcf	status, 6	;RP1=0, select bank0
  3360  06A5  1303               	movwf	(I2C_Master_Write@d)
  3361  06A6  00BE               	movlw	0
  3362  06A7  3000               	movwf	((I2C_Master_Write@d))+1
  3363  06A8  00BF               	fcall	_I2C_Master_Write
  3364  06A9  120A  118A  2087  120A  118A  	line	239
  3365                           ;Proyecto1_master.c: 239:    sec = BCD_2_DEC(I2C_Master_Read(0));
  3366                           	movlw	0
  3367  06AE  3000               	movwf	(I2C_Master_Read@a)
  3368  06AF  00F0               	movwf	(I2C_Master_Read@a+1)
  3369  06B0  00F1               	fcall	_I2C_Master_Read
  3370  06B1  120A  118A  2197  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  3371  06B6  0871               	movwf	(BCD_2_DEC@to_convert+1)
  3372  06B7  00F7               	movf	(0+(?_I2C_Master_Read)),w
  3373  06B8  0870               	movwf	(BCD_2_DEC@to_convert)
  3374  06B9  00F6               	fcall	_BCD_2_DEC
  3375  06BA  120A  118A  2122  120A  118A  	movf	(1+(?_BCD_2_DEC)),w
  3376  06BF  0877               	bcf	status, 5	;RP0=0, select bank0
  3377  06C0  1283               	bcf	status, 6	;RP1=0, select bank0
  3378  06C1  1303               	movwf	(_sec+1)
  3379  06C2  00A5               	movf	(0+(?_BCD_2_DEC)),w
  3380  06C3  0876               	movwf	(_sec)
  3381  06C4  00A4               	line	240
  3382                           ;Proyecto1_master.c: 240:    I2C_Master_Stop();
  3383                           	fcall	_I2C_Master_Stop
  3384  06C5  120A  118A  207E  120A  118A  	line	242
  3385                           ;Proyecto1_master.c: 242:    I2C_Master_Start();
  3386                           	fcall	_I2C_Master_Start
  3387  06CA  120A  118A  2075  120A  118A  	line	243
  3388                           ;Proyecto1_master.c: 243:    I2C_Master_Write(0xD1);
  3389                           	movlw	0D1h
  3390  06CF  30D1               	bcf	status, 5	;RP0=0, select bank0
  3391  06D0  1283               	bcf	status, 6	;RP1=0, select bank0
  3392  06D1  1303               	movwf	(I2C_Master_Write@d)
  3393  06D2  00BE               	movlw	0
  3394  06D3  3000               	movwf	((I2C_Master_Write@d))+1
  3395  06D4  00BF               	fcall	_I2C_Master_Write
  3396  06D5  120A  118A  2087  120A  118A  	line	244
  3397                           ;Proyecto1_master.c: 244:    min = BCD_2_DEC(I2C_Master_Read(0));
  3398                           	movlw	0
  3399  06DA  3000               	movwf	(I2C_Master_Read@a)
  3400  06DB  00F0               	movwf	(I2C_Master_Read@a+1)
  3401  06DC  00F1               	fcall	_I2C_Master_Read
  3402  06DD  120A  118A  2197  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  3403  06E2  0871               	movwf	(BCD_2_DEC@to_convert+1)
  3404  06E3  00F7               	movf	(0+(?_I2C_Master_Read)),w
  3405  06E4  0870               	movwf	(BCD_2_DEC@to_convert)
  3406  06E5  00F6               	fcall	_BCD_2_DEC
  3407  06E6  120A  118A  2122  120A  118A  	movf	(1+(?_BCD_2_DEC)),w
  3408  06EB  0877               	bcf	status, 5	;RP0=0, select bank0
  3409  06EC  1283               	bcf	status, 6	;RP1=0, select bank0
  3410  06ED  1303               	movwf	(_min+1)
  3411  06EE  00BD               	movf	(0+(?_BCD_2_DEC)),w
  3412  06EF  0876               	movwf	(_min)
  3413  06F0  00BC               	line	245
  3414                           ;Proyecto1_master.c: 245:    I2C_Master_Stop();
  3415                           	fcall	_I2C_Master_Stop
  3416  06F1  120A  118A  207E  120A  118A  	line	247
  3417                           ;Proyecto1_master.c: 247:    I2C_Master_Start();
  3418                           	fcall	_I2C_Master_Start
  3419  06F6  120A  118A  2075  120A  118A  	line	248
  3420                           ;Proyecto1_master.c: 248:    I2C_Master_Write(0xD1);
  3421                           	movlw	0D1h
  3422  06FB  30D1               	bcf	status, 5	;RP0=0, select bank0
  3423  06FC  1283               	bcf	status, 6	;RP1=0, select bank0
  3424  06FD  1303               	movwf	(I2C_Master_Write@d)
  3425  06FE  00BE               	movlw	0
  3426  06FF  3000               	movwf	((I2C_Master_Write@d))+1
  3427  0700  00BF               	fcall	_I2C_Master_Write
  3428  0701  120A  118A  2087  120A  118A  	line	249
  3429                           ;Proyecto1_master.c: 249:    hour = BCD_2_DEC(I2C_Master_Read(0));
  3430                           	movlw	0
  3431  0706  3000               	movwf	(I2C_Master_Read@a)
  3432  0707  00F0               	movwf	(I2C_Master_Read@a+1)
  3433  0708  00F1               	fcall	_I2C_Master_Read
  3434  0709  120A  118A  2197  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  3435  070E  0871               	movwf	(BCD_2_DEC@to_convert+1)
  3436  070F  00F7               	movf	(0+(?_I2C_Master_Read)),w
  3437  0710  0870               	movwf	(BCD_2_DEC@to_convert)
  3438  0711  00F6               	fcall	_BCD_2_DEC
  3439  0712  120A  118A  2122  120A  118A  	movf	(1+(?_BCD_2_DEC)),w
  3440  0717  0877               	bcf	status, 5	;RP0=0, select bank0
  3441  0718  1283               	bcf	status, 6	;RP1=0, select bank0
  3442  0719  1303               	movwf	(_hour+1)
  3443  071A  00BB               	movf	(0+(?_BCD_2_DEC)),w
  3444  071B  0876               	movwf	(_hour)
  3445  071C  00BA               	line	250
  3446                           ;Proyecto1_master.c: 250:    I2C_Master_Stop();
  3447                           	fcall	_I2C_Master_Stop
  3448  071D  120A  118A  207E  120A  118A  	line	252
  3449                           ;Proyecto1_master.c: 252:    I2C_Master_Start();
  3450                           	fcall	_I2C_Master_Start
  3451  0722  120A  118A  2075  120A  118A  	line	253
  3452                           ;Proyecto1_master.c: 253:    I2C_Master_Write(0xD1);
  3453                           	movlw	0D1h
  3454  0727  30D1               	bcf	status, 5	;RP0=0, select bank0
  3455  0728  1283               	bcf	status, 6	;RP1=0, select bank0
  3456  0729  1303               	movwf	(I2C_Master_Write@d)
  3457  072A  00BE               	movlw	0
  3458  072B  3000               	movwf	((I2C_Master_Write@d))+1
  3459  072C  00BF               	fcall	_I2C_Master_Write
  3460  072D  120A  118A  2087  120A  118A  	line	254
  3461                           ;Proyecto1_master.c: 254:    I2C_Master_Read(0);
  3462                           	movlw	0
  3463  0732  3000               	movwf	(I2C_Master_Read@a)
  3464  0733  00F0               	movwf	(I2C_Master_Read@a+1)
  3465  0734  00F1               	fcall	_I2C_Master_Read
  3466  0735  120A  118A  2197  120A  118A  	line	255
  3467                           ;Proyecto1_master.c: 255:    I2C_Master_Stop();
  3468                           	fcall	_I2C_Master_Stop
  3469  073A  120A  118A  207E  120A  118A  	line	257
  3470                           ;Proyecto1_master.c: 257:    I2C_Master_Start();
  3471                           	fcall	_I2C_Master_Start
  3472  073F  120A  118A  2075  120A  118A  	line	258
  3473                           ;Proyecto1_master.c: 258:    I2C_Master_Write(0xD1);
  3474                           	movlw	0D1h
  3475  0744  30D1               	bcf	status, 5	;RP0=0, select bank0
  3476  0745  1283               	bcf	status, 6	;RP1=0, select bank0
  3477  0746  1303               	movwf	(I2C_Master_Write@d)
  3478  0747  00BE               	movlw	0
  3479  0748  3000               	movwf	((I2C_Master_Write@d))+1
  3480  0749  00BF               	fcall	_I2C_Master_Write
  3481  074A  120A  118A  2087  120A  118A  	line	259
  3482                           ;Proyecto1_master.c: 259:    date = BCD_2_DEC(I2C_Master_Read(0));
  3483                           	movlw	0
  3484  074F  3000               	movwf	(I2C_Master_Read@a)
  3485  0750  00F0               	movwf	(I2C_Master_Read@a+1)
  3486  0751  00F1               	fcall	_I2C_Master_Read
  3487  0752  120A  118A  2197  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  3488  0757  0871               	movwf	(BCD_2_DEC@to_convert+1)
  3489  0758  00F7               	movf	(0+(?_I2C_Master_Read)),w
  3490  0759  0870               	movwf	(BCD_2_DEC@to_convert)
  3491  075A  00F6               	fcall	_BCD_2_DEC
  3492  075B  120A  118A  2122  120A  118A  	movf	(1+(?_BCD_2_DEC)),w
  3493  0760  0877               	bcf	status, 5	;RP0=0, select bank0
  3494  0761  1283               	bcf	status, 6	;RP1=0, select bank0
  3495  0762  1303               	movwf	(_date+1)
  3496  0763  00B9               	movf	(0+(?_BCD_2_DEC)),w
  3497  0764  0876               	movwf	(_date)
  3498  0765  00B8               	line	260
  3499                           ;Proyecto1_master.c: 260:    I2C_Master_Stop();
  3500                           	fcall	_I2C_Master_Stop
  3501  0766  120A  118A  207E  120A  118A  	line	262
  3502                           ;Proyecto1_master.c: 262:    I2C_Master_Start();
  3503                           	fcall	_I2C_Master_Start
  3504  076B  120A  118A  2075  120A  118A  	line	263
  3505                           ;Proyecto1_master.c: 263:    I2C_Master_Write(0xD1);
  3506                           	movlw	0D1h
  3507  0770  30D1               	bcf	status, 5	;RP0=0, select bank0
  3508  0771  1283               	bcf	status, 6	;RP1=0, select bank0
  3509  0772  1303               	movwf	(I2C_Master_Write@d)
  3510  0773  00BE               	movlw	0
  3511  0774  3000               	movwf	((I2C_Master_Write@d))+1
  3512  0775  00BF               	fcall	_I2C_Master_Write
  3513  0776  120A  118A  2087  120A  118A  	line	264
  3514                           ;Proyecto1_master.c: 264:    month = BCD_2_DEC(I2C_Master_Read(0));
  3515                           	movlw	0
  3516  077B  3000               	movwf	(I2C_Master_Read@a)
  3517  077C  00F0               	movwf	(I2C_Master_Read@a+1)
  3518  077D  00F1               	fcall	_I2C_Master_Read
  3519  077E  120A  118A  2197  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  3520  0783  0871               	movwf	(BCD_2_DEC@to_convert+1)
  3521  0784  00F7               	movf	(0+(?_I2C_Master_Read)),w
  3522  0785  0870               	movwf	(BCD_2_DEC@to_convert)
  3523  0786  00F6               	fcall	_BCD_2_DEC
  3524  0787  120A  118A  2122  120A  118A  	movf	(1+(?_BCD_2_DEC)),w
  3525  078C  0877               	bcf	status, 5	;RP0=0, select bank0
  3526  078D  1283               	bcf	status, 6	;RP1=0, select bank0
  3527  078E  1303               	movwf	(_month+1)
  3528  078F  00B5               	movf	(0+(?_BCD_2_DEC)),w
  3529  0790  0876               	movwf	(_month)
  3530  0791  00B4               	line	265
  3531                           ;Proyecto1_master.c: 265:    I2C_Master_Stop();
  3532                           	fcall	_I2C_Master_Stop
  3533  0792  120A  118A  207E  120A  118A  	line	267
  3534                           ;Proyecto1_master.c: 267:    I2C_Master_Start();
  3535                           	fcall	_I2C_Master_Start
  3536  0797  120A  118A  2075  120A  118A  	line	268
  3537                           ;Proyecto1_master.c: 268:    I2C_Master_Write(0xD1);
  3538                           	movlw	0D1h
  3539  079C  30D1               	bcf	status, 5	;RP0=0, select bank0
  3540  079D  1283               	bcf	status, 6	;RP1=0, select bank0
  3541  079E  1303               	movwf	(I2C_Master_Write@d)
  3542  079F  00BE               	movlw	0
  3543  07A0  3000               	movwf	((I2C_Master_Write@d))+1
  3544  07A1  00BF               	fcall	_I2C_Master_Write
  3545  07A2  120A  118A  2087  120A  118A  	line	269
  3546                           ;Proyecto1_master.c: 269:    year = BCD_2_DEC(I2C_Master_Read(0));
  3547                           	movlw	0
  3548  07A7  3000               	movwf	(I2C_Master_Read@a)
  3549  07A8  00F0               	movwf	(I2C_Master_Read@a+1)
  3550  07A9  00F1               	fcall	_I2C_Master_Read
  3551  07AA  120A  118A  2197  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  3552  07AF  0871               	movwf	(BCD_2_DEC@to_convert+1)
  3553  07B0  00F7               	movf	(0+(?_I2C_Master_Read)),w
  3554  07B1  0870               	movwf	(BCD_2_DEC@to_convert)
  3555  07B2  00F6               	fcall	_BCD_2_DEC
  3556  07B3  120A  118A  2122  120A  118A  	movf	(1+(?_BCD_2_DEC)),w
  3557  07B8  0877               	bcf	status, 5	;RP0=0, select bank0
  3558  07B9  1283               	bcf	status, 6	;RP1=0, select bank0
  3559  07BA  1303               	movwf	(_year+1)
  3560  07BB  00B3               	movf	(0+(?_BCD_2_DEC)),w
  3561  07BC  0876               	movwf	(_year)
  3562  07BD  00B2               	line	270
  3563                           ;Proyecto1_master.c: 270:    I2C_Master_Stop();
  3564                           	fcall	_I2C_Master_Stop
  3565  07BE  120A  118A  207E  120A  118A  	line	272
  3566                           ;Proyecto1_master.c: 272:    I2C_Master_Stop();
  3567                           	fcall	_I2C_Master_Stop
  3568  07C3  120A  118A  207E  120A  118A  	line	275
  3569                           ;Proyecto1_master.c: 275:    I2C_Master_Start();
  3570                           	fcall	_I2C_Master_Start
  3571  07C8  120A  118A  2075  120A  118A  	line	276
  3572                           ;Proyecto1_master.c: 276:    I2C_Master_Write(0xD1);
  3573                           	movlw	0D1h
  3574  07CD  30D1               	bcf	status, 5	;RP0=0, select bank0
  3575  07CE  1283               	bcf	status, 6	;RP1=0, select bank0
  3576  07CF  1303               	movwf	(I2C_Master_Write@d)
  3577  07D0  00BE               	movlw	0
  3578  07D1  3000               	movwf	((I2C_Master_Write@d))+1
  3579  07D2  00BF               	fcall	_I2C_Master_Write
  3580  07D3  120A  118A  2087  120A  118A  	line	277
  3581                           ;Proyecto1_master.c: 277:    I2C_Master_Read(0);
  3582                           	movlw	0
  3583  07D8  3000               	movwf	(I2C_Master_Read@a)
  3584  07D9  00F0               	movwf	(I2C_Master_Read@a+1)
  3585  07DA  00F1               	fcall	_I2C_Master_Read
  3586  07DB  120A  118A  2197  120A  118A  	line	278
  3587                           ;Proyecto1_master.c: 278:    I2C_Master_Stop();
  3588                           	fcall	_I2C_Master_Stop
  3589  07E0  120A  118A  207E  120A  118A  	line	280
  3590                           	
  3591                           l119:	
  3592  07E5                     	return
  3593  07E5  0008               	opt stack 0
  3594                           GLOBAL	__end_of_Update_Current_Date_Time
  3595                           	__end_of_Update_Current_Date_Time:
  3596  07E6                     	signat	_Update_Current_Date_Time,89
  3597                           	global	_I2C_Master_Read
  3598                           
  3599 ;; *************** function _I2C_Master_Read *****************
  3600 ;; Defined at:
  3601 ;;		line 71 in file "I2C.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  a               2    0[COMMON] unsigned short 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  temp            2    4[COMMON] unsigned short 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  2    0[COMMON] unsigned short 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0, pclath, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3615 ;;      Params:         2       0       0       0       0
  3616 ;;      Locals:         2       0       0       0       0
  3617 ;;      Temps:          2       0       0       0       0
  3618 ;;      Totals:         6       0       0       0       0
  3619 ;;Total ram usage:        6 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    1
  3622 ;; This function calls:
  3623 ;;		_I2C_Master_Wait
  3624 ;; This function is called by:
  3625 ;;		_Update_Current_Date_Time
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3629                           	file	"I2C.c"
  3630                           	line	71
  3631                           global __ptext12
  3632                           __ptext12:	;psect for function _I2C_Master_Read
  3633  0197                     psect	text12
  3634                           	file	"I2C.c"
  3635                           	line	71
  3636                           	global	__size_of_I2C_Master_Read
  3637                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  3638  002F                     	
  3639                           _I2C_Master_Read:	
  3640  0197                     ;incstack = 0
  3641                           	opt	stack 5
  3642                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3643                           	line	74
  3644                           	
  3645                           l1352:	
  3646  0197                     ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:    
                                  unsigned short temp;;I2C.c: 74:     I2C_Master_Wait();
  3647                           	fcall	_I2C_Master_Wait
  3648  0197  120A  118A  209D  120A  118A  	line	75
  3649                           	
  3650                           l1354:	
  3651  019C                     ;I2C.c: 75:     SSPCON2bits.RCEN = 1;
  3652                           	bsf	status, 5	;RP0=1, select bank1
  3653  019C  1683               	bcf	status, 6	;RP1=0, select bank1
  3654  019D  1303               	bsf	(145)^080h,3	;volatile
  3655  019E  1591               	line	76
  3656                           ;I2C.c: 76:     I2C_Master_Wait();
  3657                           	fcall	_I2C_Master_Wait
  3658  019F  120A  118A  209D  120A  118A  	line	77
  3659                           	
  3660                           l1356:	
  3661  01A4                     ;I2C.c: 77:     temp = SSPBUF;
  3662                           	bcf	status, 5	;RP0=0, select bank0
  3663  01A4  1283               	bcf	status, 6	;RP1=0, select bank0
  3664  01A5  1303               	movf	(19),w	;volatile
  3665  01A6  0813               	movwf	(??_I2C_Master_Read+0)+0
  3666  01A7  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  3667  01A8  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  3668  01A9  0872               	movwf	(I2C_Master_Read@temp)
  3669  01AA  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  3670  01AB  0873               	movwf	(I2C_Master_Read@temp+1)
  3671  01AC  00F5               	line	78
  3672                           	
  3673                           l1358:	
  3674  01AD                     ;I2C.c: 78:     I2C_Master_Wait();
  3675                           	fcall	_I2C_Master_Wait
  3676  01AD  120A  118A  209D  120A  118A  	line	79
  3677                           	
  3678                           l1360:	
  3679  01B2                     ;I2C.c: 79:     if(a == 1){
  3680                           		decf	((I2C_Master_Read@a)),w
  3681  01B2  0370               iorwf	((I2C_Master_Read@a+1)),w
  3682  01B3  0471               	btfss	status,2
  3683  01B4  1D03               	goto	u821
  3684  01B5  29B7               	goto	u820
  3685  01B6  29B8               u821:
  3686  01B7                     	goto	l195
  3687  01B7  29BC               u820:
  3688  01B8                     	line	80
  3689                           	
  3690                           l1362:	
  3691  01B8                     ;I2C.c: 80:         SSPCON2bits.ACKDT = 0;
  3692                           	bsf	status, 5	;RP0=1, select bank1
  3693  01B8  1683               	bcf	status, 6	;RP1=0, select bank1
  3694  01B9  1303               	bcf	(145)^080h,5	;volatile
  3695  01BA  1291               	line	81
  3696                           ;I2C.c: 81:     }else{
  3697                           	goto	l196
  3698  01BB  29BF               	
  3699                           l195:	
  3700  01BC                     	line	82
  3701                           ;I2C.c: 82:         SSPCON2bits.ACKDT = 1;
  3702                           	bsf	status, 5	;RP0=1, select bank1
  3703  01BC  1683               	bcf	status, 6	;RP1=0, select bank1
  3704  01BD  1303               	bsf	(145)^080h,5	;volatile
  3705  01BE  1691               	line	83
  3706                           ;I2C.c: 83:     }
  3707                           	
  3708                           l196:	
  3709  01BF                     	line	84
  3710                           ;I2C.c: 84:     SSPCON2bits.ACKEN = 1;
  3711                           	bsf	(145)^080h,4	;volatile
  3712  01BF  1611               	line	85
  3713                           	
  3714                           l1364:	
  3715  01C0                     ;I2C.c: 85:     return temp;
  3716                           	movf	(I2C_Master_Read@temp+1),w
  3717  01C0  0875               	movwf	(?_I2C_Master_Read+1)
  3718  01C1  00F1               	movf	(I2C_Master_Read@temp),w
  3719  01C2  0874               	movwf	(?_I2C_Master_Read)
  3720  01C3  00F0               	goto	l197
  3721  01C4  29C5               	
  3722                           l1366:	
  3723  01C5                     	line	86
  3724                           	
  3725                           l197:	
  3726  01C5                     	return
  3727  01C5  0008               	opt stack 0
  3728                           GLOBAL	__end_of_I2C_Master_Read
  3729                           	__end_of_I2C_Master_Read:
  3730  01C6                     	signat	_I2C_Master_Read,4218
  3731                           	global	_BCD_2_DEC
  3732                           
  3733 ;; *************** function _BCD_2_DEC *****************
  3734 ;; Defined at:
  3735 ;;		line 161 in file "Proyecto1_master.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  to_convert      2    6[COMMON] int 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  2    6[COMMON] int 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         2       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0
  3751 ;;      Temps:          2       0       0       0       0
  3752 ;;      Totals:         4       0       0       0       0
  3753 ;;Total ram usage:        4 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    1
  3756 ;; This function calls:
  3757 ;;		___wmul
  3758 ;; This function is called by:
  3759 ;;		_Update_Current_Date_Time
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3763                           	file	"Proyecto1_master.c"
  3764                           	line	161
  3765                           global __ptext13
  3766                           __ptext13:	;psect for function _BCD_2_DEC
  3767  0122                     psect	text13
  3768                           	file	"Proyecto1_master.c"
  3769                           	line	161
  3770                           	global	__size_of_BCD_2_DEC
  3771                           	__size_of_BCD_2_DEC	equ	__end_of_BCD_2_DEC-_BCD_2_DEC
  3772  0026                     	
  3773                           _BCD_2_DEC:	
  3774  0122                     ;incstack = 0
  3775                           	opt	stack 5
  3776                           ; Regs used in _BCD_2_DEC: [wreg+status,2+status,0+pclath+cstack]
  3777                           	line	162
  3778                           	
  3779                           l1332:	
  3780  0122                     ;Proyecto1_master.c: 162:    return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  3781                           	movlw	0Fh
  3782  0122  300F               	andwf	(BCD_2_DEC@to_convert),w
  3783  0123  0576               	movwf	(??_BCD_2_DEC+0)+0
  3784  0124  00F8               	movlw	0
  3785  0125  3000               	andwf	(BCD_2_DEC@to_convert+1),w
  3786  0126  0577               	movwf	1+(??_BCD_2_DEC+0)+0
  3787  0127  00F9               	swapf	(BCD_2_DEC@to_convert),w
  3788  0128  0E76               	andlw	0fh
  3789  0129  390F               	movwf	(___wmul@multiplier)
  3790  012A  00F0               	swapf	(BCD_2_DEC@to_convert+1),w
  3791  012B  0E77               	andlw	0f0h
  3792  012C  39F0               	iorwf	(___wmul@multiplier)+0
  3793  012D  04F0               	swapf	(BCD_2_DEC@to_convert+1),w
  3794  012E  0E77               	andlw	0fh
  3795  012F  390F               	movwf	(___wmul@multiplier)+1
  3796  0130  00F1               	movlw	0f0h
  3797  0131  30F0               	btfss	(___wmul@multiplier)+1,3
  3798  0132  1DF1               	movlw	0
  3799  0133  3000               	iorwf	(___wmul@multiplier)+1
  3800  0134  04F1               	movlw	0Ah
  3801  0135  300A               	movwf	(___wmul@multiplicand)
  3802  0136  00F2               	movlw	0
  3803  0137  3000               	movwf	((___wmul@multiplicand))+1
  3804  0138  00F3               	fcall	___wmul
  3805  0139  120A  118A  216F  120A  118A  	movf	0+(??_BCD_2_DEC+0)+0,w
  3806  013E  0878               	addwf	(0+(?___wmul)),w
  3807  013F  0770               	movwf	(?_BCD_2_DEC)
  3808  0140  00F6               	movf	1+(??_BCD_2_DEC+0)+0,w
  3809  0141  0879               	skipnc
  3810  0142  1803               	incf	1+(??_BCD_2_DEC+0)+0,w
  3811  0143  0A79               	addwf	(1+(?___wmul)),w
  3812  0144  0771               	movwf	1+(?_BCD_2_DEC)
  3813  0145  00F7               	goto	l110
  3814  0146  2947               	
  3815                           l1334:	
  3816  0147                     	line	163
  3817                           	
  3818                           l110:	
  3819  0147                     	return
  3820  0147  0008               	opt stack 0
  3821                           GLOBAL	__end_of_BCD_2_DEC
  3822                           	__end_of_BCD_2_DEC:
  3823  0148                     	signat	_BCD_2_DEC,4218
  3824                           	global	___wmul
  3825                           
  3826 ;; *************** function ___wmul *****************
  3827 ;; Defined at:
  3828 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  multiplier      2    0[COMMON] unsigned int 
  3831 ;;  multiplicand    2    2[COMMON] unsigned int 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  product         2    4[COMMON] unsigned int 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2    0[COMMON] unsigned int 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         4       0       0       0       0
  3844 ;;      Locals:         2       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         6       0       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_BCD_2_DEC
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  3856                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3857                           	line	15
  3858                           global __ptext14
  3859                           __ptext14:	;psect for function ___wmul
  3860  016F                     psect	text14
  3861                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3862                           	line	15
  3863                           	global	__size_of___wmul
  3864                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3865  0028                     	
  3866                           ___wmul:	
  3867  016F                     ;incstack = 0
  3868                           	opt	stack 5
  3869                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3870                           	line	43
  3871                           	
  3872                           l1220:	
  3873  016F                     	clrf	(___wmul@product)
  3874  016F  01F4               	clrf	(___wmul@product+1)
  3875  0170  01F5               	goto	l1222
  3876  0171  2972               	line	44
  3877                           	
  3878                           l356:	
  3879  0172                     	line	45
  3880                           	
  3881                           l1222:	
  3882  0172                     	btfss	(___wmul@multiplier),(0)&7
  3883  0172  1C70               	goto	u561
  3884  0173  2975               	goto	u560
  3885  0174  2976               u561:
  3886  0175                     	goto	l357
  3887  0175  297C               u560:
  3888  0176                     	line	46
  3889                           	
  3890                           l1224:	
  3891  0176                     	movf	(___wmul@multiplicand),w
  3892  0176  0872               	addwf	(___wmul@product),f
  3893  0177  07F4               	skipnc
  3894  0178  1803               	incf	(___wmul@product+1),f
  3895  0179  0AF5               	movf	(___wmul@multiplicand+1),w
  3896  017A  0873               	addwf	(___wmul@product+1),f
  3897  017B  07F5               	
  3898                           l357:	
  3899  017C                     	line	47
  3900                           	movlw	01h
  3901  017C  3001               	
  3902                           u575:
  3903  017D                     	clrc
  3904  017D  1003               	rlf	(___wmul@multiplicand),f
  3905  017E  0DF2               	rlf	(___wmul@multiplicand+1),f
  3906  017F  0DF3               	addlw	-1
  3907  0180  3EFF               	skipz
  3908  0181  1D03               	goto	u575
  3909  0182  297D               	line	48
  3910                           	
  3911                           l1226:	
  3912  0183                     	movlw	01h
  3913  0183  3001               	
  3914                           u585:
  3915  0184                     	clrc
  3916  0184  1003               	rrf	(___wmul@multiplier+1),f
  3917  0185  0CF1               	rrf	(___wmul@multiplier),f
  3918  0186  0CF0               	addlw	-1
  3919  0187  3EFF               	skipz
  3920  0188  1D03               	goto	u585
  3921  0189  2984               	line	49
  3922                           	
  3923                           l1228:	
  3924  018A                     	movf	((___wmul@multiplier)),w
  3925  018A  0870               iorwf	((___wmul@multiplier+1)),w
  3926  018B  0471               	btfss	status,2
  3927  018C  1D03               	goto	u591
  3928  018D  298F               	goto	u590
  3929  018E  2990               u591:
  3930  018F                     	goto	l1222
  3931  018F  2972               u590:
  3932  0190                     	goto	l1230
  3933  0190  2991               	
  3934                           l358:	
  3935  0191                     	line	52
  3936                           	
  3937                           l1230:	
  3938  0191                     	movf	(___wmul@product+1),w
  3939  0191  0875               	movwf	(?___wmul+1)
  3940  0192  00F1               	movf	(___wmul@product),w
  3941  0193  0874               	movwf	(?___wmul)
  3942  0194  00F0               	goto	l359
  3943  0195  2996               	
  3944                           l1232:	
  3945  0196                     	line	53
  3946                           	
  3947                           l359:	
  3948  0196                     	return
  3949  0196  0008               	opt stack 0
  3950                           GLOBAL	__end_of___wmul
  3951                           	__end_of___wmul:
  3952  0197                     	signat	___wmul,8314
  3953                           	global	_Set_Time_Date
  3954                           
  3955 ;; *************** function _Set_Time_Date *****************
  3956 ;; Defined at:
  3957 ;;		line 172 in file "Proyecto1_master.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    2
  3978 ;; This function calls:
  3979 ;;		_DEC_2_BCD
  3980 ;;		_I2C_Master_Start
  3981 ;;		_I2C_Master_Stop
  3982 ;;		_I2C_Master_Write
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3988                           	file	"Proyecto1_master.c"
  3989                           	line	172
  3990                           global __ptext15
  3991                           __ptext15:	;psect for function _Set_Time_Date
  3992  04E9                     psect	text15
  3993                           	file	"Proyecto1_master.c"
  3994                           	line	172
  3995                           	global	__size_of_Set_Time_Date
  3996                           	__size_of_Set_Time_Date	equ	__end_of_Set_Time_Date-_Set_Time_Date
  3997  00AF                     	
  3998                           _Set_Time_Date:	
  3999  04E9                     ;incstack = 0
  4000                           	opt	stack 5
  4001                           ; Regs used in _Set_Time_Date: [wreg+status,2+status,0+pclath+cstack]
  4002                           	line	213
  4003                           	
  4004                           l1426:	
  4005  04E9                     ;Proyecto1_master.c: 213:     I2C_Master_Start();
  4006                           	fcall	_I2C_Master_Start
  4007  04E9  120A  118A  2075  120A  118A  	line	214
  4008                           ;Proyecto1_master.c: 214:     I2C_Master_Write(0xD0);
  4009                           	movlw	0D0h
  4010  04EE  30D0               	bcf	status, 5	;RP0=0, select bank0
  4011  04EF  1283               	bcf	status, 6	;RP1=0, select bank0
  4012  04F0  1303               	movwf	(I2C_Master_Write@d)
  4013  04F1  00BE               	movlw	0
  4014  04F2  3000               	movwf	((I2C_Master_Write@d))+1
  4015  04F3  00BF               	fcall	_I2C_Master_Write
  4016  04F4  120A  118A  2087  120A  118A  	line	215
  4017                           ;Proyecto1_master.c: 215:     I2C_Master_Write(0);
  4018                           	movlw	0
  4019  04F9  3000               	bcf	status, 5	;RP0=0, select bank0
  4020  04FA  1283               	bcf	status, 6	;RP1=0, select bank0
  4021  04FB  1303               	movwf	(I2C_Master_Write@d)
  4022  04FC  00BE               	movwf	(I2C_Master_Write@d+1)
  4023  04FD  00BF               	fcall	_I2C_Master_Write
  4024  04FE  120A  118A  2087  120A  118A  	line	216
  4025                           ;Proyecto1_master.c: 216:     I2C_Master_Write(DEC_2_BCD(sec));
  4026                           	bcf	status, 5	;RP0=0, select bank0
  4027  0503  1283               	bcf	status, 6	;RP1=0, select bank0
  4028  0504  1303               	movf	(_sec+1),w
  4029  0505  0825               	movwf	(DEC_2_BCD@to_convert+1)
  4030  0506  00FA               	movf	(_sec),w
  4031  0507  0824               	movwf	(DEC_2_BCD@to_convert)
  4032  0508  00F9               	fcall	_DEC_2_BCD
  4033  0509  120A  118A  21C6  120A  118A  	movf	(1+(?_DEC_2_BCD)),w
  4034  050E  087A               	bcf	status, 5	;RP0=0, select bank0
  4035  050F  1283               	bcf	status, 6	;RP1=0, select bank0
  4036  0510  1303               	movwf	(I2C_Master_Write@d+1)
  4037  0511  00BF               	movf	(0+(?_DEC_2_BCD)),w
  4038  0512  0879               	movwf	(I2C_Master_Write@d)
  4039  0513  00BE               	fcall	_I2C_Master_Write
  4040  0514  120A  118A  2087  120A  118A  	line	217
  4041                           ;Proyecto1_master.c: 217:     I2C_Master_Write(DEC_2_BCD(min));
  4042                           	bcf	status, 5	;RP0=0, select bank0
  4043  0519  1283               	bcf	status, 6	;RP1=0, select bank0
  4044  051A  1303               	movf	(_min+1),w
  4045  051B  083D               	movwf	(DEC_2_BCD@to_convert+1)
  4046  051C  00FA               	movf	(_min),w
  4047  051D  083C               	movwf	(DEC_2_BCD@to_convert)
  4048  051E  00F9               	fcall	_DEC_2_BCD
  4049  051F  120A  118A  21C6  120A  118A  	movf	(1+(?_DEC_2_BCD)),w
  4050  0524  087A               	bcf	status, 5	;RP0=0, select bank0
  4051  0525  1283               	bcf	status, 6	;RP1=0, select bank0
  4052  0526  1303               	movwf	(I2C_Master_Write@d+1)
  4053  0527  00BF               	movf	(0+(?_DEC_2_BCD)),w
  4054  0528  0879               	movwf	(I2C_Master_Write@d)
  4055  0529  00BE               	fcall	_I2C_Master_Write
  4056  052A  120A  118A  2087  120A  118A  	line	218
  4057                           ;Proyecto1_master.c: 218:     I2C_Master_Write(DEC_2_BCD(hour));
  4058                           	bcf	status, 5	;RP0=0, select bank0
  4059  052F  1283               	bcf	status, 6	;RP1=0, select bank0
  4060  0530  1303               	movf	(_hour+1),w
  4061  0531  083B               	movwf	(DEC_2_BCD@to_convert+1)
  4062  0532  00FA               	movf	(_hour),w
  4063  0533  083A               	movwf	(DEC_2_BCD@to_convert)
  4064  0534  00F9               	fcall	_DEC_2_BCD
  4065  0535  120A  118A  21C6  120A  118A  	movf	(1+(?_DEC_2_BCD)),w
  4066  053A  087A               	bcf	status, 5	;RP0=0, select bank0
  4067  053B  1283               	bcf	status, 6	;RP1=0, select bank0
  4068  053C  1303               	movwf	(I2C_Master_Write@d+1)
  4069  053D  00BF               	movf	(0+(?_DEC_2_BCD)),w
  4070  053E  0879               	movwf	(I2C_Master_Write@d)
  4071  053F  00BE               	fcall	_I2C_Master_Write
  4072  0540  120A  118A  2087  120A  118A  	line	219
  4073                           ;Proyecto1_master.c: 219:     I2C_Master_Write(1);
  4074                           	movlw	01h
  4075  0545  3001               	bcf	status, 5	;RP0=0, select bank0
  4076  0546  1283               	bcf	status, 6	;RP1=0, select bank0
  4077  0547  1303               	movwf	(I2C_Master_Write@d)
  4078  0548  00BE               	movlw	0
  4079  0549  3000               	movwf	((I2C_Master_Write@d))+1
  4080  054A  00BF               	fcall	_I2C_Master_Write
  4081  054B  120A  118A  2087  120A  118A  	line	220
  4082                           ;Proyecto1_master.c: 220:     I2C_Master_Write(DEC_2_BCD(date));
  4083                           	bcf	status, 5	;RP0=0, select bank0
  4084  0550  1283               	bcf	status, 6	;RP1=0, select bank0
  4085  0551  1303               	movf	(_date+1),w
  4086  0552  0839               	movwf	(DEC_2_BCD@to_convert+1)
  4087  0553  00FA               	movf	(_date),w
  4088  0554  0838               	movwf	(DEC_2_BCD@to_convert)
  4089  0555  00F9               	fcall	_DEC_2_BCD
  4090  0556  120A  118A  21C6  120A  118A  	movf	(1+(?_DEC_2_BCD)),w
  4091  055B  087A               	bcf	status, 5	;RP0=0, select bank0
  4092  055C  1283               	bcf	status, 6	;RP1=0, select bank0
  4093  055D  1303               	movwf	(I2C_Master_Write@d+1)
  4094  055E  00BF               	movf	(0+(?_DEC_2_BCD)),w
  4095  055F  0879               	movwf	(I2C_Master_Write@d)
  4096  0560  00BE               	fcall	_I2C_Master_Write
  4097  0561  120A  118A  2087  120A  118A  	line	221
  4098                           ;Proyecto1_master.c: 221:     I2C_Master_Write(DEC_2_BCD(month));
  4099                           	bcf	status, 5	;RP0=0, select bank0
  4100  0566  1283               	bcf	status, 6	;RP1=0, select bank0
  4101  0567  1303               	movf	(_month+1),w
  4102  0568  0835               	movwf	(DEC_2_BCD@to_convert+1)
  4103  0569  00FA               	movf	(_month),w
  4104  056A  0834               	movwf	(DEC_2_BCD@to_convert)
  4105  056B  00F9               	fcall	_DEC_2_BCD
  4106  056C  120A  118A  21C6  120A  118A  	movf	(1+(?_DEC_2_BCD)),w
  4107  0571  087A               	bcf	status, 5	;RP0=0, select bank0
  4108  0572  1283               	bcf	status, 6	;RP1=0, select bank0
  4109  0573  1303               	movwf	(I2C_Master_Write@d+1)
  4110  0574  00BF               	movf	(0+(?_DEC_2_BCD)),w
  4111  0575  0879               	movwf	(I2C_Master_Write@d)
  4112  0576  00BE               	fcall	_I2C_Master_Write
  4113  0577  120A  118A  2087  120A  118A  	line	222
  4114                           ;Proyecto1_master.c: 222:     I2C_Master_Write(DEC_2_BCD(year));
  4115                           	bcf	status, 5	;RP0=0, select bank0
  4116  057C  1283               	bcf	status, 6	;RP1=0, select bank0
  4117  057D  1303               	movf	(_year+1),w
  4118  057E  0833               	movwf	(DEC_2_BCD@to_convert+1)
  4119  057F  00FA               	movf	(_year),w
  4120  0580  0832               	movwf	(DEC_2_BCD@to_convert)
  4121  0581  00F9               	fcall	_DEC_2_BCD
  4122  0582  120A  118A  21C6  120A  118A  	movf	(1+(?_DEC_2_BCD)),w
  4123  0587  087A               	bcf	status, 5	;RP0=0, select bank0
  4124  0588  1283               	bcf	status, 6	;RP1=0, select bank0
  4125  0589  1303               	movwf	(I2C_Master_Write@d+1)
  4126  058A  00BF               	movf	(0+(?_DEC_2_BCD)),w
  4127  058B  0879               	movwf	(I2C_Master_Write@d)
  4128  058C  00BE               	fcall	_I2C_Master_Write
  4129  058D  120A  118A  2087  120A  118A  	line	223
  4130                           ;Proyecto1_master.c: 223:     I2C_Master_Stop();
  4131                           	fcall	_I2C_Master_Stop
  4132  0592  120A  118A  207E  120A  118A  	line	225
  4133                           	
  4134                           l116:	
  4135  0597                     	return
  4136  0597  0008               	opt stack 0
  4137                           GLOBAL	__end_of_Set_Time_Date
  4138                           	__end_of_Set_Time_Date:
  4139  0598                     	signat	_Set_Time_Date,89
  4140                           	global	_I2C_Master_Write
  4141                           
  4142 ;; *************** function _I2C_Master_Write *****************
  4143 ;; Defined at:
  4144 ;;		line 62 in file "I2C.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  d               2    0[BANK0 ] unsigned int 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4158 ;;      Params:         0       2       0       0       0
  4159 ;;      Locals:         0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0
  4161 ;;      Totals:         0       2       0       0       0
  4162 ;;Total ram usage:        2 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    1
  4165 ;; This function calls:
  4166 ;;		_I2C_Master_Wait
  4167 ;; This function is called by:
  4168 ;;		_Set_Time_Date
  4169 ;;		_Update_Current_Date_Time
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4173                           	file	"I2C.c"
  4174                           	line	62
  4175                           global __ptext16
  4176                           __ptext16:	;psect for function _I2C_Master_Write
  4177  0087                     psect	text16
  4178                           	file	"I2C.c"
  4179                           	line	62
  4180                           	global	__size_of_I2C_Master_Write
  4181                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  4182  000A                     	
  4183                           _I2C_Master_Write:	
  4184  0087                     ;incstack = 0
  4185                           	opt	stack 5
  4186                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4187                           	line	64
  4188                           	
  4189                           l1344:	
  4190  0087                     ;I2C.c: 62: void I2C_Master_Write(unsigned d);I2C.c: 63: {;I2C.c: 64:     I2C_Master_Wai
                                 t();
  4191                           	fcall	_I2C_Master_Wait
  4192  0087  120A  118A  209D  120A  118A  	line	65
  4193                           	
  4194                           l1346:	
  4195  008C                     ;I2C.c: 65:     SSPBUF = d;
  4196                           	bcf	status, 5	;RP0=0, select bank0
  4197  008C  1283               	bcf	status, 6	;RP1=0, select bank0
  4198  008D  1303               	movf	(I2C_Master_Write@d),w
  4199  008E  083E               	movwf	(19)	;volatile
  4200  008F  0093               	line	66
  4201                           	
  4202                           l192:	
  4203  0090                     	return
  4204  0090  0008               	opt stack 0
  4205                           GLOBAL	__end_of_I2C_Master_Write
  4206                           	__end_of_I2C_Master_Write:
  4207  0091                     	signat	_I2C_Master_Write,4217
  4208                           	global	_I2C_Master_Stop
  4209                           
  4210 ;; *************** function _I2C_Master_Stop *****************
  4211 ;; Defined at:
  4212 ;;		line 52 in file "I2C.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0, pclath, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4226 ;;      Params:         0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0
  4229 ;;      Totals:         0       0       0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    1
  4233 ;; This function calls:
  4234 ;;		_I2C_Master_Wait
  4235 ;; This function is called by:
  4236 ;;		_Set_Time_Date
  4237 ;;		_Update_Current_Date_Time
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4241                           	line	52
  4242                           global __ptext17
  4243                           __ptext17:	;psect for function _I2C_Master_Stop
  4244  007E                     psect	text17
  4245                           	file	"I2C.c"
  4246                           	line	52
  4247                           	global	__size_of_I2C_Master_Stop
  4248                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  4249  0009                     	
  4250                           _I2C_Master_Stop:	
  4251  007E                     ;incstack = 0
  4252                           	opt	stack 5
  4253                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4254                           	line	54
  4255                           	
  4256                           l1348:	
  4257  007E                     ;I2C.c: 54:     I2C_Master_Wait();
  4258                           	fcall	_I2C_Master_Wait
  4259  007E  120A  118A  209D  120A  118A  	line	55
  4260                           	
  4261                           l1350:	
  4262  0083                     ;I2C.c: 55:     SSPCON2bits.PEN = 1;
  4263                           	bsf	status, 5	;RP0=1, select bank1
  4264  0083  1683               	bcf	status, 6	;RP1=0, select bank1
  4265  0084  1303               	bsf	(145)^080h,2	;volatile
  4266  0085  1511               	line	56
  4267                           	
  4268                           l189:	
  4269  0086                     	return
  4270  0086  0008               	opt stack 0
  4271                           GLOBAL	__end_of_I2C_Master_Stop
  4272                           	__end_of_I2C_Master_Stop:
  4273  0087                     	signat	_I2C_Master_Stop,89
  4274                           	global	_I2C_Master_Start
  4275                           
  4276 ;; *************** function _I2C_Master_Start *****************
  4277 ;; Defined at:
  4278 ;;		line 36 in file "I2C.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0, pclath, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4292 ;;      Params:         0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0
  4295 ;;      Totals:         0       0       0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    1
  4299 ;; This function calls:
  4300 ;;		_I2C_Master_Wait
  4301 ;; This function is called by:
  4302 ;;		_Set_Time_Date
  4303 ;;		_Update_Current_Date_Time
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  4307                           	line	36
  4308                           global __ptext18
  4309                           __ptext18:	;psect for function _I2C_Master_Start
  4310  0075                     psect	text18
  4311                           	file	"I2C.c"
  4312                           	line	36
  4313                           	global	__size_of_I2C_Master_Start
  4314                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  4315  0009                     	
  4316                           _I2C_Master_Start:	
  4317  0075                     ;incstack = 0
  4318                           	opt	stack 5
  4319                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4320                           	line	38
  4321                           	
  4322                           l1340:	
  4323  0075                     ;I2C.c: 38:     I2C_Master_Wait();
  4324                           	fcall	_I2C_Master_Wait
  4325  0075  120A  118A  209D  120A  118A  	line	39
  4326                           	
  4327                           l1342:	
  4328  007A                     ;I2C.c: 39:     SSPCON2bits.SEN = 1;
  4329                           	bsf	status, 5	;RP0=1, select bank1
  4330  007A  1683               	bcf	status, 6	;RP1=0, select bank1
  4331  007B  1303               	bsf	(145)^080h,0	;volatile
  4332  007C  1411               	line	40
  4333                           	
  4334                           l183:	
  4335  007D                     	return
  4336  007D  0008               	opt stack 0
  4337                           GLOBAL	__end_of_I2C_Master_Start
  4338                           	__end_of_I2C_Master_Start:
  4339  007E                     	signat	_I2C_Master_Start,89
  4340                           	global	_I2C_Master_Wait
  4341                           
  4342 ;; *************** function _I2C_Master_Wait *****************
  4343 ;; Defined at:
  4344 ;;		line 29 in file "I2C.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4358 ;;      Params:         0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0
  4361 ;;      Totals:         0       0       0       0       0
  4362 ;;Total ram usage:        0 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_I2C_Master_Start
  4368 ;;		_I2C_Master_Stop
  4369 ;;		_I2C_Master_Write
  4370 ;;		_I2C_Master_Read
  4371 ;;		_I2C_Master_RepeatedStart
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  4375                           	line	29
  4376                           global __ptext19
  4377                           __ptext19:	;psect for function _I2C_Master_Wait
  4378  009D                     psect	text19
  4379                           	file	"I2C.c"
  4380                           	line	29
  4381                           	global	__size_of_I2C_Master_Wait
  4382                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  4383  000F                     	
  4384                           _I2C_Master_Wait:	
  4385  009D                     ;incstack = 0
  4386                           	opt	stack 5
  4387                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4388                           	line	31
  4389                           	
  4390                           l1206:	
  4391  009D                     ;I2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4392                           	goto	l177
  4393  009D  289E               	
  4394                           l178:	
  4395  009E                     	
  4396                           l177:	
  4397  009E                     	bsf	status, 5	;RP0=1, select bank1
  4398  009E  1683               	bcf	status, 6	;RP1=0, select bank1
  4399  009F  1303               	btfsc	(148)^080h,(2)&7	;volatile
  4400  00A0  1914               	goto	u541
  4401  00A1  28A3               	goto	u540
  4402  00A2  28A4               u541:
  4403  00A3                     	goto	l177
  4404  00A3  289E               u540:
  4405  00A4                     	
  4406                           l1208:	
  4407  00A4                     	movf	(145)^080h,w	;volatile
  4408  00A4  0811               	andlw	01Fh
  4409  00A5  391F               	btfss	status,2
  4410  00A6  1D03               	goto	u551
  4411  00A7  28A9               	goto	u550
  4412  00A8  28AA               u551:
  4413  00A9                     	goto	l177
  4414  00A9  289E               u550:
  4415  00AA                     	goto	l180
  4416  00AA  28AB               	
  4417                           l179:	
  4418  00AB                     	line	32
  4419                           	
  4420                           l180:	
  4421  00AB                     	return
  4422  00AB  0008               	opt stack 0
  4423                           GLOBAL	__end_of_I2C_Master_Wait
  4424                           	__end_of_I2C_Master_Wait:
  4425  00AC                     	signat	_I2C_Master_Wait,89
  4426                           	global	_DEC_2_BCD
  4427                           
  4428 ;; *************** function _DEC_2_BCD *****************
  4429 ;; Defined at:
  4430 ;;		line 166 in file "Proyecto1_master.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  to_convert      2    9[COMMON] int 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2    9[COMMON] int 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0, pclath, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         2       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0
  4446 ;;      Temps:          2       0       0       0       0
  4447 ;;      Totals:         4       0       0       0       0
  4448 ;;Total ram usage:        4 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    1
  4451 ;; This function calls:
  4452 ;;		___awdiv
  4453 ;;		___awmod
  4454 ;; This function is called by:
  4455 ;;		_Set_Time_Date
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  4459                           	file	"Proyecto1_master.c"
  4460                           	line	166
  4461                           global __ptext20
  4462                           __ptext20:	;psect for function _DEC_2_BCD
  4463  01C6                     psect	text20
  4464                           	file	"Proyecto1_master.c"
  4465                           	line	166
  4466                           	global	__size_of_DEC_2_BCD
  4467                           	__size_of_DEC_2_BCD	equ	__end_of_DEC_2_BCD-_DEC_2_BCD
  4468  0031                     	
  4469                           _DEC_2_BCD:	
  4470  01C6                     ;incstack = 0
  4471                           	opt	stack 5
  4472                           ; Regs used in _DEC_2_BCD: [wreg+status,2+status,0+pclath+cstack]
  4473                           	line	167
  4474                           	
  4475                           l1336:	
  4476  01C6                     ;Proyecto1_master.c: 167:    return ((to_convert / 10) << 4) + (to_convert % 10);
  4477                           	movlw	0Ah
  4478  01C6  300A               	movwf	(___awdiv@divisor)
  4479  01C7  00F0               	movlw	0
  4480  01C8  3000               	movwf	((___awdiv@divisor))+1
  4481  01C9  00F1               	movf	(DEC_2_BCD@to_convert+1),w
  4482  01CA  087A               	movwf	(___awdiv@dividend+1)
  4483  01CB  00F3               	movf	(DEC_2_BCD@to_convert),w
  4484  01CC  0879               	movwf	(___awdiv@dividend)
  4485  01CD  00F2               	fcall	___awdiv
  4486  01CE  120A  118A  23DF  120A  118A  	movf	(0+?___awdiv),w
  4487  01D3  0870               	movwf	(??_DEC_2_BCD+0)+0
  4488  01D4  00FB               	movf	(1+?___awdiv),w
  4489  01D5  0871               	movwf	((??_DEC_2_BCD+0)+0+1)
  4490  01D6  00FC               	swapf	(??_DEC_2_BCD+0)+0,f
  4491  01D7  0EFB               	swapf	(??_DEC_2_BCD+0)+1,f
  4492  01D8  0EFC               	movlw	0f0h
  4493  01D9  30F0               	andwf	(??_DEC_2_BCD+0)+1,f
  4494  01DA  05FC               	movf	(??_DEC_2_BCD+0)+0,w
  4495  01DB  087B               	andlw	0fh
  4496  01DC  390F               	iorwf	(??_DEC_2_BCD+0)+1,f
  4497  01DD  04FC               	movlw	0f0h
  4498  01DE  30F0               	andwf	(??_DEC_2_BCD+0)+0,f
  4499  01DF  05FB               	movlw	0Ah
  4500  01E0  300A               	movwf	(___awmod@divisor)
  4501  01E1  00F0               	movlw	0
  4502  01E2  3000               	movwf	((___awmod@divisor))+1
  4503  01E3  00F1               	movf	(DEC_2_BCD@to_convert+1),w
  4504  01E4  087A               	movwf	(___awmod@dividend+1)
  4505  01E5  00F3               	movf	(DEC_2_BCD@to_convert),w
  4506  01E6  0879               	movwf	(___awmod@dividend)
  4507  01E7  00F2               	fcall	___awmod
  4508  01E8  120A  118A  230F  120A  118A  	movf	(0+(?___awmod)),w
  4509  01ED  0870               	addwf	0+(??_DEC_2_BCD+0)+0,w
  4510  01EE  077B               	movwf	(?_DEC_2_BCD)
  4511  01EF  00F9               	movf	(1+(?___awmod)),w
  4512  01F0  0871               	skipnc
  4513  01F1  1803               	incf	(1+(?___awmod)),w
  4514  01F2  0A71               	addwf	1+(??_DEC_2_BCD+0)+0,w
  4515  01F3  077C               	movwf	1+(?_DEC_2_BCD)
  4516  01F4  00FA               	goto	l113
  4517  01F5  29F6               	
  4518                           l1338:	
  4519  01F6                     	line	168
  4520                           	
  4521                           l113:	
  4522  01F6                     	return
  4523  01F6  0008               	opt stack 0
  4524                           GLOBAL	__end_of_DEC_2_BCD
  4525                           	__end_of_DEC_2_BCD:
  4526  01F7                     	signat	_DEC_2_BCD,4218
  4527                           	global	___awmod
  4528                           
  4529 ;; *************** function ___awmod *****************
  4530 ;; Defined at:
  4531 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  divisor         2    0[COMMON] int 
  4534 ;;  dividend        2    2[COMMON] int 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  sign            1    6[COMMON] unsigned char 
  4537 ;;  counter         1    5[COMMON] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2    0[COMMON] int 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         4       0       0       0       0
  4548 ;;      Locals:         2       0       0       0       0
  4549 ;;      Temps:          1       0       0       0       0
  4550 ;;      Totals:         7       0       0       0       0
  4551 ;;Total ram usage:        7 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_separa_digitos_rtc
  4557 ;;		_DEC_2_BCD
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  4561                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4562                           	line	5
  4563                           global __ptext21
  4564                           __ptext21:	;psect for function ___awmod
  4565  030F                     psect	text21
  4566                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4567                           	line	5
  4568                           	global	__size_of___awmod
  4569                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  4570  0063                     	
  4571                           ___awmod:	
  4572  030F                     ;incstack = 0
  4573                           	opt	stack 6
  4574                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4575                           	line	12
  4576                           	
  4577                           l1278:	
  4578  030F                     	clrf	(___awmod@sign)
  4579  030F  01F6               	line	13
  4580                           	
  4581                           l1280:	
  4582  0310                     	btfss	(___awmod@dividend+1),7
  4583  0310  1FF3               	goto	u701
  4584  0311  2B13               	goto	u700
  4585  0312  2B14               u701:
  4586  0313                     	goto	l1286
  4587  0313  2B1C               u700:
  4588  0314                     	line	14
  4589                           	
  4590                           l1282:	
  4591  0314                     	comf	(___awmod@dividend),f
  4592  0314  09F2               	comf	(___awmod@dividend+1),f
  4593  0315  09F3               	incf	(___awmod@dividend),f
  4594  0316  0AF2               	skipnz
  4595  0317  1903               	incf	(___awmod@dividend+1),f
  4596  0318  0AF3               	line	15
  4597                           	
  4598                           l1284:	
  4599  0319                     	clrf	(___awmod@sign)
  4600  0319  01F6               	incf	(___awmod@sign),f
  4601  031A  0AF6               	goto	l1286
  4602  031B  2B1C               	line	16
  4603                           	
  4604                           l513:	
  4605  031C                     	line	17
  4606                           	
  4607                           l1286:	
  4608  031C                     	btfss	(___awmod@divisor+1),7
  4609  031C  1FF1               	goto	u711
  4610  031D  2B1F               	goto	u710
  4611  031E  2B20               u711:
  4612  031F                     	goto	l1290
  4613  031F  2B26               u710:
  4614  0320                     	line	18
  4615                           	
  4616                           l1288:	
  4617  0320                     	comf	(___awmod@divisor),f
  4618  0320  09F0               	comf	(___awmod@divisor+1),f
  4619  0321  09F1               	incf	(___awmod@divisor),f
  4620  0322  0AF0               	skipnz
  4621  0323  1903               	incf	(___awmod@divisor+1),f
  4622  0324  0AF1               	goto	l1290
  4623  0325  2B26               	
  4624                           l514:	
  4625  0326                     	line	19
  4626                           	
  4627                           l1290:	
  4628  0326                     	movf	((___awmod@divisor)),w
  4629  0326  0870               iorwf	((___awmod@divisor+1)),w
  4630  0327  0471               	btfsc	status,2
  4631  0328  1903               	goto	u721
  4632  0329  2B2B               	goto	u720
  4633  032A  2B2C               u721:
  4634  032B                     	goto	l1308
  4635  032B  2B61               u720:
  4636  032C                     	line	20
  4637                           	
  4638                           l1292:	
  4639  032C                     	clrf	(___awmod@counter)
  4640  032C  01F5               	incf	(___awmod@counter),f
  4641  032D  0AF5               	line	21
  4642                           	goto	l1298
  4643  032E  2B3B               	
  4644                           l517:	
  4645  032F                     	line	22
  4646                           	
  4647                           l1294:	
  4648  032F                     	movlw	01h
  4649  032F  3001               	
  4650                           u735:
  4651  0330                     	clrc
  4652  0330  1003               	rlf	(___awmod@divisor),f
  4653  0331  0DF0               	rlf	(___awmod@divisor+1),f
  4654  0332  0DF1               	addlw	-1
  4655  0333  3EFF               	skipz
  4656  0334  1D03               	goto	u735
  4657  0335  2B30               	line	23
  4658                           	
  4659                           l1296:	
  4660  0336                     	movlw	low(01h)
  4661  0336  3001               	movwf	(??___awmod+0)+0
  4662  0337  00F4               	movf	(??___awmod+0)+0,w
  4663  0338  0874               	addwf	(___awmod@counter),f
  4664  0339  07F5               	goto	l1298
  4665  033A  2B3B               	line	24
  4666                           	
  4667                           l516:	
  4668  033B                     	line	21
  4669                           	
  4670                           l1298:	
  4671  033B                     	btfss	(___awmod@divisor+1),(15)&7
  4672  033B  1FF1               	goto	u741
  4673  033C  2B3E               	goto	u740
  4674  033D  2B3F               u741:
  4675  033E                     	goto	l1294
  4676  033E  2B2F               u740:
  4677  033F                     	goto	l1300
  4678  033F  2B41               	
  4679                           l518:	
  4680  0340                     	goto	l1300
  4681  0340  2B41               	line	25
  4682                           	
  4683                           l519:	
  4684  0341                     	line	26
  4685                           	
  4686                           l1300:	
  4687  0341                     	movf	(___awmod@divisor+1),w
  4688  0341  0871               	subwf	(___awmod@dividend+1),w
  4689  0342  0273               	skipz
  4690  0343  1D03               	goto	u755
  4691  0344  2B47               	movf	(___awmod@divisor),w
  4692  0345  0870               	subwf	(___awmod@dividend),w
  4693  0346  0272               u755:
  4694  0347                     	skipc
  4695  0347  1C03               	goto	u751
  4696  0348  2B4A               	goto	u750
  4697  0349  2B4B               u751:
  4698  034A                     	goto	l1304
  4699  034A  2B52               u750:
  4700  034B                     	line	27
  4701                           	
  4702                           l1302:	
  4703  034B                     	movf	(___awmod@divisor),w
  4704  034B  0870               	subwf	(___awmod@dividend),f
  4705  034C  02F2               	movf	(___awmod@divisor+1),w
  4706  034D  0871               	skipc
  4707  034E  1C03               	decf	(___awmod@dividend+1),f
  4708  034F  03F3               	subwf	(___awmod@dividend+1),f
  4709  0350  02F3               	goto	l1304
  4710  0351  2B52               	
  4711                           l520:	
  4712  0352                     	line	28
  4713                           	
  4714                           l1304:	
  4715  0352                     	movlw	01h
  4716  0352  3001               	
  4717                           u765:
  4718  0353                     	clrc
  4719  0353  1003               	rrf	(___awmod@divisor+1),f
  4720  0354  0CF1               	rrf	(___awmod@divisor),f
  4721  0355  0CF0               	addlw	-1
  4722  0356  3EFF               	skipz
  4723  0357  1D03               	goto	u765
  4724  0358  2B53               	line	29
  4725                           	
  4726                           l1306:	
  4727  0359                     	movlw	01h
  4728  0359  3001               	subwf	(___awmod@counter),f
  4729  035A  02F5               	btfss	status,2
  4730  035B  1D03               	goto	u771
  4731  035C  2B5E               	goto	u770
  4732  035D  2B5F               u771:
  4733  035E                     	goto	l1300
  4734  035E  2B41               u770:
  4735  035F                     	goto	l1308
  4736  035F  2B61               	
  4737                           l521:	
  4738  0360                     	goto	l1308
  4739  0360  2B61               	line	30
  4740                           	
  4741                           l515:	
  4742  0361                     	line	31
  4743                           	
  4744                           l1308:	
  4745  0361                     	movf	((___awmod@sign)),w
  4746  0361  0876               	btfsc	status,2
  4747  0362  1903               	goto	u781
  4748  0363  2B65               	goto	u780
  4749  0364  2B66               u781:
  4750  0365                     	goto	l1312
  4751  0365  2B6C               u780:
  4752  0366                     	line	32
  4753                           	
  4754                           l1310:	
  4755  0366                     	comf	(___awmod@dividend),f
  4756  0366  09F2               	comf	(___awmod@dividend+1),f
  4757  0367  09F3               	incf	(___awmod@dividend),f
  4758  0368  0AF2               	skipnz
  4759  0369  1903               	incf	(___awmod@dividend+1),f
  4760  036A  0AF3               	goto	l1312
  4761  036B  2B6C               	
  4762                           l522:	
  4763  036C                     	line	33
  4764                           	
  4765                           l1312:	
  4766  036C                     	movf	(___awmod@dividend+1),w
  4767  036C  0873               	movwf	(?___awmod+1)
  4768  036D  00F1               	movf	(___awmod@dividend),w
  4769  036E  0872               	movwf	(?___awmod)
  4770  036F  00F0               	goto	l523
  4771  0370  2B71               	
  4772                           l1314:	
  4773  0371                     	line	34
  4774                           	
  4775                           l523:	
  4776  0371                     	return
  4777  0371  0008               	opt stack 0
  4778                           GLOBAL	__end_of___awmod
  4779                           	__end_of___awmod:
  4780  0372                     	signat	___awmod,8314
  4781                           	global	___awdiv
  4782                           
  4783 ;; *************** function ___awdiv *****************
  4784 ;; Defined at:
  4785 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  divisor         2    0[COMMON] int 
  4788 ;;  dividend        2    2[COMMON] int 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  quotient        2    7[COMMON] int 
  4791 ;;  sign            1    6[COMMON] unsigned char 
  4792 ;;  counter         1    5[COMMON] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  2    0[COMMON] int 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4802 ;;      Params:         4       0       0       0       0
  4803 ;;      Locals:         4       0       0       0       0
  4804 ;;      Temps:          1       0       0       0       0
  4805 ;;      Totals:         9       0       0       0       0
  4806 ;;Total ram usage:        9 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_separa_digitos_rtc
  4812 ;;		_DEC_2_BCD
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
  4816                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4817                           	line	5
  4818                           global __ptext22
  4819                           __ptext22:	;psect for function ___awdiv
  4820  03DF                     psect	text22
  4821                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4822                           	line	5
  4823                           	global	__size_of___awdiv
  4824                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4825  0071                     	
  4826                           ___awdiv:	
  4827  03DF                     ;incstack = 0
  4828                           	opt	stack 6
  4829                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4830                           	line	13
  4831                           	
  4832                           l1234:	
  4833  03DF                     	clrf	(___awdiv@sign)
  4834  03DF  01F6               	line	14
  4835                           	
  4836                           l1236:	
  4837  03E0                     	btfss	(___awdiv@divisor+1),7
  4838  03E0  1FF1               	goto	u601
  4839  03E1  2BE3               	goto	u600
  4840  03E2  2BE4               u601:
  4841  03E3                     	goto	l1242
  4842  03E3  2BEC               u600:
  4843  03E4                     	line	15
  4844                           	
  4845                           l1238:	
  4846  03E4                     	comf	(___awdiv@divisor),f
  4847  03E4  09F0               	comf	(___awdiv@divisor+1),f
  4848  03E5  09F1               	incf	(___awdiv@divisor),f
  4849  03E6  0AF0               	skipnz
  4850  03E7  1903               	incf	(___awdiv@divisor+1),f
  4851  03E8  0AF1               	line	16
  4852                           	
  4853                           l1240:	
  4854  03E9                     	clrf	(___awdiv@sign)
  4855  03E9  01F6               	incf	(___awdiv@sign),f
  4856  03EA  0AF6               	goto	l1242
  4857  03EB  2BEC               	line	17
  4858                           	
  4859                           l500:	
  4860  03EC                     	line	18
  4861                           	
  4862                           l1242:	
  4863  03EC                     	btfss	(___awdiv@dividend+1),7
  4864  03EC  1FF3               	goto	u611
  4865  03ED  2BEF               	goto	u610
  4866  03EE  2BF0               u611:
  4867  03EF                     	goto	l1248
  4868  03EF  2BFA               u610:
  4869  03F0                     	line	19
  4870                           	
  4871                           l1244:	
  4872  03F0                     	comf	(___awdiv@dividend),f
  4873  03F0  09F2               	comf	(___awdiv@dividend+1),f
  4874  03F1  09F3               	incf	(___awdiv@dividend),f
  4875  03F2  0AF2               	skipnz
  4876  03F3  1903               	incf	(___awdiv@dividend+1),f
  4877  03F4  0AF3               	line	20
  4878                           	
  4879                           l1246:	
  4880  03F5                     	movlw	low(01h)
  4881  03F5  3001               	movwf	(??___awdiv+0)+0
  4882  03F6  00F4               	movf	(??___awdiv+0)+0,w
  4883  03F7  0874               	xorwf	(___awdiv@sign),f
  4884  03F8  06F6               	goto	l1248
  4885  03F9  2BFA               	line	21
  4886                           	
  4887                           l501:	
  4888  03FA                     	line	22
  4889                           	
  4890                           l1248:	
  4891  03FA                     	clrf	(___awdiv@quotient)
  4892  03FA  01F7               	clrf	(___awdiv@quotient+1)
  4893  03FB  01F8               	line	23
  4894                           	
  4895                           l1250:	
  4896  03FC                     	movf	((___awdiv@divisor)),w
  4897  03FC  0870               iorwf	((___awdiv@divisor+1)),w
  4898  03FD  0471               	btfsc	status,2
  4899  03FE  1903               	goto	u621
  4900  03FF  2C01               	goto	u620
  4901  0400  2C02               u621:
  4902  0401                     	goto	l1270
  4903  0401  2C3F               u620:
  4904  0402                     	line	24
  4905                           	
  4906                           l1252:	
  4907  0402                     	clrf	(___awdiv@counter)
  4908  0402  01F5               	incf	(___awdiv@counter),f
  4909  0403  0AF5               	line	25
  4910                           	goto	l1258
  4911  0404  2C11               	
  4912                           l504:	
  4913  0405                     	line	26
  4914                           	
  4915                           l1254:	
  4916  0405                     	movlw	01h
  4917  0405  3001               	
  4918                           u635:
  4919  0406                     	clrc
  4920  0406  1003               	rlf	(___awdiv@divisor),f
  4921  0407  0DF0               	rlf	(___awdiv@divisor+1),f
  4922  0408  0DF1               	addlw	-1
  4923  0409  3EFF               	skipz
  4924  040A  1D03               	goto	u635
  4925  040B  2C06               	line	27
  4926                           	
  4927                           l1256:	
  4928  040C                     	movlw	low(01h)
  4929  040C  3001               	movwf	(??___awdiv+0)+0
  4930  040D  00F4               	movf	(??___awdiv+0)+0,w
  4931  040E  0874               	addwf	(___awdiv@counter),f
  4932  040F  07F5               	goto	l1258
  4933  0410  2C11               	line	28
  4934                           	
  4935                           l503:	
  4936  0411                     	line	25
  4937                           	
  4938                           l1258:	
  4939  0411                     	btfss	(___awdiv@divisor+1),(15)&7
  4940  0411  1FF1               	goto	u641
  4941  0412  2C14               	goto	u640
  4942  0413  2C15               u641:
  4943  0414                     	goto	l1254
  4944  0414  2C05               u640:
  4945  0415                     	goto	l1260
  4946  0415  2C17               	
  4947                           l505:	
  4948  0416                     	goto	l1260
  4949  0416  2C17               	line	29
  4950                           	
  4951                           l506:	
  4952  0417                     	line	30
  4953                           	
  4954                           l1260:	
  4955  0417                     	movlw	01h
  4956  0417  3001               	
  4957                           u655:
  4958  0418                     	clrc
  4959  0418  1003               	rlf	(___awdiv@quotient),f
  4960  0419  0DF7               	rlf	(___awdiv@quotient+1),f
  4961  041A  0DF8               	addlw	-1
  4962  041B  3EFF               	skipz
  4963  041C  1D03               	goto	u655
  4964  041D  2C18               	line	31
  4965                           	movf	(___awdiv@divisor+1),w
  4966  041E  0871               	subwf	(___awdiv@dividend+1),w
  4967  041F  0273               	skipz
  4968  0420  1D03               	goto	u665
  4969  0421  2C24               	movf	(___awdiv@divisor),w
  4970  0422  0870               	subwf	(___awdiv@dividend),w
  4971  0423  0272               u665:
  4972  0424                     	skipc
  4973  0424  1C03               	goto	u661
  4974  0425  2C27               	goto	u660
  4975  0426  2C28               u661:
  4976  0427                     	goto	l1266
  4977  0427  2C30               u660:
  4978  0428                     	line	32
  4979                           	
  4980                           l1262:	
  4981  0428                     	movf	(___awdiv@divisor),w
  4982  0428  0870               	subwf	(___awdiv@dividend),f
  4983  0429  02F2               	movf	(___awdiv@divisor+1),w
  4984  042A  0871               	skipc
  4985  042B  1C03               	decf	(___awdiv@dividend+1),f
  4986  042C  03F3               	subwf	(___awdiv@dividend+1),f
  4987  042D  02F3               	line	33
  4988                           	
  4989                           l1264:	
  4990  042E                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4991  042E  1477               	goto	l1266
  4992  042F  2C30               	line	34
  4993                           	
  4994                           l507:	
  4995  0430                     	line	35
  4996                           	
  4997                           l1266:	
  4998  0430                     	movlw	01h
  4999  0430  3001               	
  5000                           u675:
  5001  0431                     	clrc
  5002  0431  1003               	rrf	(___awdiv@divisor+1),f
  5003  0432  0CF1               	rrf	(___awdiv@divisor),f
  5004  0433  0CF0               	addlw	-1
  5005  0434  3EFF               	skipz
  5006  0435  1D03               	goto	u675
  5007  0436  2C31               	line	36
  5008                           	
  5009                           l1268:	
  5010  0437                     	movlw	01h
  5011  0437  3001               	subwf	(___awdiv@counter),f
  5012  0438  02F5               	btfss	status,2
  5013  0439  1D03               	goto	u681
  5014  043A  2C3C               	goto	u680
  5015  043B  2C3D               u681:
  5016  043C                     	goto	l1260
  5017  043C  2C17               u680:
  5018  043D                     	goto	l1270
  5019  043D  2C3F               	
  5020                           l508:	
  5021  043E                     	goto	l1270
  5022  043E  2C3F               	line	37
  5023                           	
  5024                           l502:	
  5025  043F                     	line	38
  5026                           	
  5027                           l1270:	
  5028  043F                     	movf	((___awdiv@sign)),w
  5029  043F  0876               	btfsc	status,2
  5030  0440  1903               	goto	u691
  5031  0441  2C43               	goto	u690
  5032  0442  2C44               u691:
  5033  0443                     	goto	l1274
  5034  0443  2C4A               u690:
  5035  0444                     	line	39
  5036                           	
  5037                           l1272:	
  5038  0444                     	comf	(___awdiv@quotient),f
  5039  0444  09F7               	comf	(___awdiv@quotient+1),f
  5040  0445  09F8               	incf	(___awdiv@quotient),f
  5041  0446  0AF7               	skipnz
  5042  0447  1903               	incf	(___awdiv@quotient+1),f
  5043  0448  0AF8               	goto	l1274
  5044  0449  2C4A               	
  5045                           l509:	
  5046  044A                     	line	40
  5047                           	
  5048                           l1274:	
  5049  044A                     	movf	(___awdiv@quotient+1),w
  5050  044A  0878               	movwf	(?___awdiv+1)
  5051  044B  00F1               	movf	(___awdiv@quotient),w
  5052  044C  0877               	movwf	(?___awdiv)
  5053  044D  00F0               	goto	l510
  5054  044E  2C4F               	
  5055                           l1276:	
  5056  044F                     	line	41
  5057                           	
  5058                           l510:	
  5059  044F                     	return
  5060  044F  0008               	opt stack 0
  5061                           GLOBAL	__end_of___awdiv
  5062                           	__end_of___awdiv:
  5063  0450                     	signat	___awdiv,8314
  5064                           	global	_I2C_Master_Init
  5065                           
  5066 ;; *************** function _I2C_Master_Init *****************
  5067 ;; Defined at:
  5068 ;;		line 13 in file "I2C.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  c               4    0[BANK0 ] const unsigned long 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0, pclath, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5082 ;;      Params:         0       4       0       0       0
  5083 ;;      Locals:         0       0       0       0       0
  5084 ;;      Temps:          0       4       0       0       0
  5085 ;;      Totals:         0       8       0       0       0
  5086 ;;Total ram usage:        8 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    1
  5089 ;; This function calls:
  5090 ;;		___lldiv
  5091 ;; This function is called by:
  5092 ;;		_main
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  5096                           	file	"I2C.c"
  5097                           	line	13
  5098                           global __ptext23
  5099                           __ptext23:	;psect for function _I2C_Master_Init
  5100  01F7                     psect	text23
  5101                           	file	"I2C.c"
  5102                           	line	13
  5103                           	global	__size_of_I2C_Master_Init
  5104                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  5105  0038                     	
  5106                           _I2C_Master_Init:	
  5107  01F7                     ;incstack = 0
  5108                           	opt	stack 6
  5109                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5110                           	line	15
  5111                           	
  5112                           l1414:	
  5113  01F7                     ;I2C.c: 13: void I2C_Master_Init(const unsigned long c);I2C.c: 14: {;I2C.c: 15:     SSPC
                                 ON = 0b00101000;
  5114                           	movlw	low(028h)
  5115  01F7  3028               	bcf	status, 5	;RP0=0, select bank0
  5116  01F8  1283               	bcf	status, 6	;RP1=0, select bank0
  5117  01F9  1303               	movwf	(20)	;volatile
  5118  01FA  0094               	line	16
  5119                           	
  5120                           l1416:	
  5121  01FB                     ;I2C.c: 16:     SSPCON2 = 0;
  5122                           	bsf	status, 5	;RP0=1, select bank1
  5123  01FB  1683               	bcf	status, 6	;RP1=0, select bank1
  5124  01FC  1303               	clrf	(145)^080h	;volatile
  5125  01FD  0191               	line	17
  5126                           	
  5127                           l1418:	
  5128  01FE                     ;I2C.c: 17:     SSPADD = (4000000/(4*c))-1;
  5129                           	bcf	status, 5	;RP0=0, select bank0
  5130  01FE  1283               	bcf	status, 6	;RP1=0, select bank0
  5131  01FF  1303               	movf	(I2C_Master_Init@c),w
  5132  0200  083E               	movwf	(??_I2C_Master_Init+0)+0
  5133  0201  00C2               	movf	(I2C_Master_Init@c+1),w
  5134  0202  083F               	movwf	((??_I2C_Master_Init+0)+0+1)
  5135  0203  00C3               	movf	(I2C_Master_Init@c+2),w
  5136  0204  0840               	movwf	((??_I2C_Master_Init+0)+0+2)
  5137  0205  00C4               	movf	(I2C_Master_Init@c+3),w
  5138  0206  0841               	movwf	((??_I2C_Master_Init+0)+0+3)
  5139  0207  00C5               	movlw	02h
  5140  0208  3002               u905:
  5141  0209                     	clrc
  5142  0209  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  5143  020A  0DC2               	rlf	(??_I2C_Master_Init+0)+1,f
  5144  020B  0DC3               	rlf	(??_I2C_Master_Init+0)+2,f
  5145  020C  0DC4               	rlf	(??_I2C_Master_Init+0)+3,f
  5146  020D  0DC5               u900:
  5147  020E                     	addlw	-1
  5148  020E  3EFF               	skipz
  5149  020F  1D03               	goto	u905
  5150  0210  2A09               	movf	3+(??_I2C_Master_Init+0)+0,w
  5151  0211  0845               	movwf	(___lldiv@divisor+3)
  5152  0212  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  5153  0213  0844               	movwf	(___lldiv@divisor+2)
  5154  0214  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  5155  0215  0843               	movwf	(___lldiv@divisor+1)
  5156  0216  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  5157  0217  0842               	movwf	(___lldiv@divisor)
  5158  0218  00F0               
  5159                           	movlw	0
  5160  0219  3000               	movwf	(___lldiv@dividend+3)
  5161  021A  00F7               	movlw	03Dh
  5162  021B  303D               	movwf	(___lldiv@dividend+2)
  5163  021C  00F6               	movlw	09h
  5164  021D  3009               	movwf	(___lldiv@dividend+1)
  5165  021E  00F5               	movlw	0
  5166  021F  3000               	movwf	(___lldiv@dividend)
  5167  0220  00F4               
  5168                           	fcall	___lldiv
  5169  0221  120A  118A  2372  120A  118A  	movf	(0+(?___lldiv)),w
  5170  0226  0870               	addlw	0FFh
  5171  0227  3EFF               	bsf	status, 5	;RP0=1, select bank1
  5172  0228  1683               	bcf	status, 6	;RP1=0, select bank1
  5173  0229  1303               	movwf	(147)^080h	;volatile
  5174  022A  0093               	line	18
  5175                           	
  5176                           l1420:	
  5177  022B                     ;I2C.c: 18:     SSPSTAT = 0;
  5178                           	clrf	(148)^080h	;volatile
  5179  022B  0194               	line	19
  5180                           	
  5181                           l1422:	
  5182  022C                     ;I2C.c: 19:     TRISCbits.TRISC3 = 1;
  5183                           	bsf	(135)^080h,3	;volatile
  5184  022C  1587               	line	20
  5185                           	
  5186                           l1424:	
  5187  022D                     ;I2C.c: 20:     TRISCbits.TRISC4 = 1;
  5188                           	bsf	(135)^080h,4	;volatile
  5189  022D  1607               	line	21
  5190                           	
  5191                           l174:	
  5192  022E                     	return
  5193  022E  0008               	opt stack 0
  5194                           GLOBAL	__end_of_I2C_Master_Init
  5195                           	__end_of_I2C_Master_Init:
  5196  022F                     	signat	_I2C_Master_Init,4217
  5197                           	global	___lldiv
  5198                           
  5199 ;; *************** function ___lldiv *****************
  5200 ;; Defined at:
  5201 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  divisor         4    0[COMMON] unsigned long 
  5204 ;;  dividend        4    4[COMMON] unsigned long 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  quotient        4    9[COMMON] unsigned long 
  5207 ;;  counter         1   13[COMMON] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  4    0[COMMON] unsigned long 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5217 ;;      Params:         8       0       0       0       0
  5218 ;;      Locals:         5       0       0       0       0
  5219 ;;      Temps:          1       0       0       0       0
  5220 ;;      Totals:        14       0       0       0       0
  5221 ;;Total ram usage:       14 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_I2C_Master_Init
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
  5230                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5231                           	line	5
  5232                           global __ptext24
  5233                           __ptext24:	;psect for function ___lldiv
  5234  0372                     psect	text24
  5235                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5236                           	line	5
  5237                           	global	__size_of___lldiv
  5238                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  5239  006D                     	
  5240                           ___lldiv:	
  5241  0372                     ;incstack = 0
  5242                           	opt	stack 6
  5243                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5244                           	line	13
  5245                           	
  5246                           l1368:	
  5247  0372                     	movlw	high highword(0)
  5248  0372  3000               	movwf	(___lldiv@quotient+3)
  5249  0373  00FC               	movlw	low highword(0)
  5250  0374  3000               	movwf	(___lldiv@quotient+2)
  5251  0375  00FB               	movlw	high(0)
  5252  0376  3000               	movwf	(___lldiv@quotient+1)
  5253  0377  00FA               	movlw	low(0)
  5254  0378  3000               	movwf	(___lldiv@quotient)
  5255  0379  00F9               
  5256                           	line	14
  5257                           	movf	(___lldiv@divisor+3),w
  5258  037A  0873               	iorwf	(___lldiv@divisor+2),w
  5259  037B  0472               	iorwf	(___lldiv@divisor+1),w
  5260  037C  0471               	iorwf	(___lldiv@divisor),w
  5261  037D  0470               	skipnz
  5262  037E  1903               	goto	u831
  5263  037F  2B81               	goto	u830
  5264  0380  2B82               u831:
  5265  0381                     	goto	l1388
  5266  0381  2BD5               u830:
  5267  0382                     	line	15
  5268                           	
  5269                           l1370:	
  5270  0382                     	clrf	(___lldiv@counter)
  5271  0382  01FD               	incf	(___lldiv@counter),f
  5272  0383  0AFD               	line	16
  5273                           	goto	l1374
  5274  0384  2B93               	
  5275                           l388:	
  5276  0385                     	line	17
  5277                           	
  5278                           l1372:	
  5279  0385                     	movlw	01h
  5280  0385  3001               	movwf	(??___lldiv+0)+0
  5281  0386  00F8               u845:
  5282  0387                     	clrc
  5283  0387  1003               	rlf	(___lldiv@divisor),f
  5284  0388  0DF0               	rlf	(___lldiv@divisor+1),f
  5285  0389  0DF1               	rlf	(___lldiv@divisor+2),f
  5286  038A  0DF2               	rlf	(___lldiv@divisor+3),f
  5287  038B  0DF3               	decfsz	(??___lldiv+0)+0
  5288  038C  0BF8               	goto	u845
  5289  038D  2B87               	line	18
  5290                           	movlw	low(01h)
  5291  038E  3001               	movwf	(??___lldiv+0)+0
  5292  038F  00F8               	movf	(??___lldiv+0)+0,w
  5293  0390  0878               	addwf	(___lldiv@counter),f
  5294  0391  07FD               	goto	l1374
  5295  0392  2B93               	line	19
  5296                           	
  5297                           l387:	
  5298  0393                     	line	16
  5299                           	
  5300                           l1374:	
  5301  0393                     	btfss	(___lldiv@divisor+3),(31)&7
  5302  0393  1FF3               	goto	u851
  5303  0394  2B96               	goto	u850
  5304  0395  2B97               u851:
  5305  0396                     	goto	l1372
  5306  0396  2B85               u850:
  5307  0397                     	goto	l1376
  5308  0397  2B99               	
  5309                           l389:	
  5310  0398                     	goto	l1376
  5311  0398  2B99               	line	20
  5312                           	
  5313                           l390:	
  5314  0399                     	line	21
  5315                           	
  5316                           l1376:	
  5317  0399                     	movlw	01h
  5318  0399  3001               	movwf	(??___lldiv+0)+0
  5319  039A  00F8               u865:
  5320  039B                     	clrc
  5321  039B  1003               	rlf	(___lldiv@quotient),f
  5322  039C  0DF9               	rlf	(___lldiv@quotient+1),f
  5323  039D  0DFA               	rlf	(___lldiv@quotient+2),f
  5324  039E  0DFB               	rlf	(___lldiv@quotient+3),f
  5325  039F  0DFC               	decfsz	(??___lldiv+0)+0
  5326  03A0  0BF8               	goto	u865
  5327  03A1  2B9B               	line	22
  5328                           	
  5329                           l1378:	
  5330  03A2                     	movf	(___lldiv@divisor+3),w
  5331  03A2  0873               	subwf	(___lldiv@dividend+3),w
  5332  03A3  0277               	skipz
  5333  03A4  1D03               	goto	u875
  5334  03A5  2BB0               	movf	(___lldiv@divisor+2),w
  5335  03A6  0872               	subwf	(___lldiv@dividend+2),w
  5336  03A7  0276               	skipz
  5337  03A8  1D03               	goto	u875
  5338  03A9  2BB0               	movf	(___lldiv@divisor+1),w
  5339  03AA  0871               	subwf	(___lldiv@dividend+1),w
  5340  03AB  0275               	skipz
  5341  03AC  1D03               	goto	u875
  5342  03AD  2BB0               	movf	(___lldiv@divisor),w
  5343  03AE  0870               	subwf	(___lldiv@dividend),w
  5344  03AF  0274               u875:
  5345  03B0                     	skipc
  5346  03B0  1C03               	goto	u871
  5347  03B1  2BB3               	goto	u870
  5348  03B2  2BB4               u871:
  5349  03B3                     	goto	l1384
  5350  03B3  2BC4               u870:
  5351  03B4                     	line	23
  5352                           	
  5353                           l1380:	
  5354  03B4                     	movf	(___lldiv@divisor),w
  5355  03B4  0870               	subwf	(___lldiv@dividend),f
  5356  03B5  02F4               	movf	(___lldiv@divisor+1),w
  5357  03B6  0871               	skipc
  5358  03B7  1C03               	incfsz	(___lldiv@divisor+1),w
  5359  03B8  0F71               	subwf	(___lldiv@dividend+1),f
  5360  03B9  02F5               	movf	(___lldiv@divisor+2),w
  5361  03BA  0872               	skipc
  5362  03BB  1C03               	incfsz	(___lldiv@divisor+2),w
  5363  03BC  0F72               	subwf	(___lldiv@dividend+2),f
  5364  03BD  02F6               	movf	(___lldiv@divisor+3),w
  5365  03BE  0873               	skipc
  5366  03BF  1C03               	incfsz	(___lldiv@divisor+3),w
  5367  03C0  0F73               	subwf	(___lldiv@dividend+3),f
  5368  03C1  02F7               	line	24
  5369                           	
  5370                           l1382:	
  5371  03C2                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  5372  03C2  1479               	goto	l1384
  5373  03C3  2BC4               	line	25
  5374                           	
  5375                           l391:	
  5376  03C4                     	line	26
  5377                           	
  5378                           l1384:	
  5379  03C4                     	movlw	01h
  5380  03C4  3001               u885:
  5381  03C5                     	clrc
  5382  03C5  1003               	rrf	(___lldiv@divisor+3),f
  5383  03C6  0CF3               	rrf	(___lldiv@divisor+2),f
  5384  03C7  0CF2               	rrf	(___lldiv@divisor+1),f
  5385  03C8  0CF1               	rrf	(___lldiv@divisor),f
  5386  03C9  0CF0               	addlw	-1
  5387  03CA  3EFF               	skipz
  5388  03CB  1D03               	goto	u885
  5389  03CC  2BC5               
  5390                           	line	27
  5391                           	
  5392                           l1386:	
  5393  03CD                     	movlw	01h
  5394  03CD  3001               	subwf	(___lldiv@counter),f
  5395  03CE  02FD               	btfss	status,2
  5396  03CF  1D03               	goto	u891
  5397  03D0  2BD2               	goto	u890
  5398  03D1  2BD3               u891:
  5399  03D2                     	goto	l1376
  5400  03D2  2B99               u890:
  5401  03D3                     	goto	l1388
  5402  03D3  2BD5               	
  5403                           l392:	
  5404  03D4                     	goto	l1388
  5405  03D4  2BD5               	line	28
  5406                           	
  5407                           l386:	
  5408  03D5                     	line	29
  5409                           	
  5410                           l1388:	
  5411  03D5                     	movf	(___lldiv@quotient+3),w
  5412  03D5  087C               	movwf	(?___lldiv+3)
  5413  03D6  00F3               	movf	(___lldiv@quotient+2),w
  5414  03D7  087B               	movwf	(?___lldiv+2)
  5415  03D8  00F2               	movf	(___lldiv@quotient+1),w
  5416  03D9  087A               	movwf	(?___lldiv+1)
  5417  03DA  00F1               	movf	(___lldiv@quotient),w
  5418  03DB  0879               	movwf	(?___lldiv)
  5419  03DC  00F0               
  5420                           	goto	l393
  5421  03DD  2BDE               	
  5422                           l1390:	
  5423  03DE                     	line	30
  5424                           	
  5425                           l393:	
  5426  03DE                     	return
  5427  03DE  0008               	opt stack 0
  5428                           GLOBAL	__end_of___lldiv
  5429                           	__end_of___lldiv:
  5430  03DF                     	signat	___lldiv,8316
  5431                           global	___latbits
  5432                           ___latbits	equ	2
  5433  0002                     	global	btemp
  5434                           	btemp set 07Eh
  5435  007E                     
  5436                           	DABS	1,126,2	;btemp
  5437                           	global	wtemp0
  5438                           	wtemp0 set btemp+0
  5439  007E                     	end


Data Sizes:
    Strings     15
    Constant    0
    Data        12
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_write_string@a	PTR unsigned char  size(1) Largest target is 7
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[6]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _separa_digitos_rtc->___awdiv
    _mostrar_lcd->_lcd_write_string
    _lcd_write_string->_lcd_write_char
    _lcd_write_char->_lcd_port
    _lcd_set_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_port
    _BCD_2_DEC->_I2C_Master_Read
    _BCD_2_DEC->___wmul
    _Set_Time_Date->_DEC_2_BCD
    _I2C_Master_Write->_DEC_2_BCD
    _DEC_2_BCD->___awdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _Update_Current_Date_Time->_I2C_Master_Write
    _Set_Time_Date->_I2C_Master_Write

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13261
                    _I2C_Master_Init
                      _Set_Time_Date
           _Update_Current_Date_Time
                        _configPorts
                       _initOsci4MHZ
                           _lcd_init
                     _lcd_set_cursor
                   _lcd_write_string
                        _mostrar_lcd
                 _separa_digitos_rtc
 ---------------------------------------------------------------------------------
 (1) _separa_digitos_rtc                                   1     1      0    2724
                                              9 COMMON     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _mostrar_lcd                                          1     1      0    1198
                                              7 COMMON     1     1      0
                     _lcd_set_cursor
                     _lcd_write_char
                   _lcd_write_string
 ---------------------------------------------------------------------------------
 (2) _lcd_write_string                                     3     3      0     486
                                              4 COMMON     3     3      0
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_write_char                                       3     3      0     198
                                              1 COMMON     3     3      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       2     1      1     514
                                              4 COMMON     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _lcd_cmd
                           _lcd_port
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (4) _lcd_port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initOsci4MHZ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPorts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_Current_Date_Time                             0     0      0    2863
                          _BCD_2_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     653
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BCD_2_DEC                                            4     2      2     744
                                              6 COMMON     4     2      2
                    _I2C_Master_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Set_Time_Date                                        0     0      0    4690
                          _DEC_2_BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1466
                                              0 BANK0      2     0      2
                          _DEC_2_BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DEC_2_BCD                                            4     2      2    3224
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Set_Time_Date
     _DEC_2_BCD
       ___awdiv
       ___awmod
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_2_BCD (ARG)
         ___awdiv
         ___awmod
       _I2C_Master_Wait (ARG)
   _Update_Current_Date_Time
     _BCD_2_DEC
       _I2C_Master_Read (ARG)
         _I2C_Master_Wait
       ___wmul (ARG)
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_2_BCD (ARG)
         ___awdiv
         ___awmod
       _I2C_Master_Wait (ARG)
   _configPorts
   _initOsci4MHZ
   _lcd_init
     _lcd_cmd
       _lcd_port
     _lcd_port
   _lcd_set_cursor
     _lcd_cmd
       _lcd_port
   _lcd_write_string
     _lcd_write_char
       _lcd_port
   _mostrar_lcd
     _lcd_set_cursor
       _lcd_cmd
         _lcd_port
     _lcd_write_char
       _lcd_port
     _lcd_write_string
       _lcd_write_char
         _lcd_port
   _separa_digitos_rtc
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      34      12        0.0%
ABS                  0      0      34       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Feb 24 20:35:57 2020

                                pc 0002                        __CFG_CP$OFF 0000  
                               l95 02A6                                 l96 02B6  
                               l97 02B7                                 l98 02B7  
                     ___awdiv@sign 0076                 __size_of_DEC_2_BCD 0031  
                               fsr 0004                ___wmul@multiplicand 0072  
                              l101 067E                                l110 0147  
                              l104 04E8                                l113 01F6  
                              l107 00BC                                l116 0597  
                              l142 006C                                l230 0249  
                              l119 07E5                                l231 024F  
                              l240 026D                                l232 0250  
                              l241 026D                                l233 0256  
                              l225 0238                                l234 0257  
                              l226 023B                                l235 025D  
                              l227 0241                                l500 03EC  
                              l180 00AB                                l236 025E  
                              l228 0242                                l244 00E9  
                              l501 03FA                                l237 0264  
                              l229 0248                                l253 0112  
                              l174 022E                                l510 044F  
                              l502 043F                                l238 0265  
                              l254 0121                                l262 0160  
                              l503 0411                                l183 007D  
                              l239 026B                                l247 030E  
                              l255 0120                                l263 014C  
                              l504 0405                                l520 0352  
                              l192 0090                                l256 0121  
                              l264 016E                                l505 0416  
                              l521 0360                                l513 031C  
                              l177 009E                                l265 016E  
                              l506 0417                                l522 036C  
                              l514 0326                                l178 009E  
                              l507 0430                                l523 0371  
                              l515 0361                                l179 00AB  
                              l195 01BC                                l259 0103  
                              l508 043E                                l516 033B  
                              l356 0172                                l196 01BF  
                              l509 044A                                l517 032F  
                              l189 0086                                l357 017C  
                              l197 01C5                                l390 0399  
                              l518 0340                                l358 0191  
                              l391 03C4                                l519 0341  
                              l359 0196                                l392 03D4  
                              l393 03DE                                l386 03D5  
                              l387 0393                                l388 0385  
                              l389 0398                                _GIE 005F  
                              _RA0 0028                                _RA1 0029  
                              _RA2 002A                                _RA3 002B  
                              _RA4 002C                                _RA5 002D  
                              _RA6 002E                                _RA7 002F  
                              _RB7 0037                                _RD7 0047  
                              u500 0254                                u501 0253  
                              u510 025B                                u511 025A  
                              u600 03E4                                u520 0262  
                              u601 03E3                                u521 0261  
                              u610 03F0                                u530 0269  
                     __CFG_CPD$OFF 0000                                u611 03EF  
                              u531 0268                                u620 0402  
                              u700 0314                                u540 00A4  
                              u460 0234                                u621 0401  
                              u701 0313                                u541 00A3  
                              u461 0233                                u710 0320  
                              u550 00AA                                u470 023F  
                              u711 031F                                u551 00A9  
                              u471 023E                                u640 0415  
                              u720 032C                                u560 0176  
                              u480 0246                                u800 010A  
                              u641 0414                                u721 032B  
                              u561 0175                                u481 0245  
                              u801 0109                                u490 024D  
                              u810 0118                                u635 0406  
                              u491 024C                                u811 0117  
                              u900 020E                                u660 0428  
                              u740 033F                                u820 01B8  
                              u661 0427                                u741 033E  
                              u821 01B7                                u830 0382  
                              u750 034B                                u590 0190  
                              u831 0381                                u655 0418  
                              u751 034A                                u735 0330  
                              u591 018F                                u575 017D  
                              u680 043D                                u905 0209  
                              u681 043C                                u665 0424  
                              u585 0184                                u850 0397  
                              u690 0444                                u770 035F  
                              u851 0396                                u691 0443  
                              u675 0431                                u771 035E  
                              u755 0347                                u780 0366  
                              u845 0387                                u781 0365  
                              u765 0353                                u917 00FB  
                              u870 03B4                                u790 016D  
                              u871 03B3                                u927 02BE  
                              u791 016C                                u865 039B  
                              u937 02CD                                u890 03D3  
                              u891 03D2                                u875 03B0  
                              u947 02DC                                u885 03C5  
                              u957 02E8                                u967 00E1  
                              _day 0036                                _min 003C  
                              _sec 0024                                _pot 0020  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0076                    ?_lcd_set_cursor 0074  
                     __CFG_LVP$OFF 0000                               l1200 00F4  
                             l1210 00D1                               l1202 00F7  
                             l1300 0341                               l1220 016F  
                             l1060 00AC                               l1212 00D4  
                             l1204 0100                               l1310 0366  
                             l1302 034B                               l1206 009D  
                             l1230 0191                               l1222 0172  
                             l1214 00DA                               l1240 03E9  
                             l1312 036C                               l1304 0352  
                             l1208 00A4                               l1232 0196  
                             l1224 0176                               l1216 00DD  
                             l1400 02E0                               l1320 0159  
                             l1250 03FC                               l1242 03EC  
                             l1234 03DF                               l1314 0371  
                             l1306 0359                               l1226 0183  
                             l1058 0066                               l1218 00E6  
                             l1410 0302                               l1402 02EA  
                             l1330 0118                               l1322 0160  
                             l1420 022B                               l1260 0417  
                             l1252 0402                               l1244 03F0  
                             l1236 03E0                               l1308 0361  
                             l1340 0075                               l1228 018A  
                             l1332 0122                               l1180 0234  
                             l1412 0308                               l1404 02F0  
                             l1324 0105                               l1316 0149  
                             l1422 022C                               l1414 01F7  
                             l1262 0428                               l1254 0405  
                             l1270 043F                               l1246 03F5  
                             l1238 03E4                               l1342 007A  
                             l1350 0083                               l1334 0147  
                             l1190 025B                               l1182 023F  
                             l1406 02F6                               l1326 010A  
                             l1318 014C                               l1430 0598  
                             l1424 022D                               l1416 01FB  
                             l1272 0444                               l1264 042E  
                             l1256 040C                               l1248 03FA  
                             l1280 0310                               l1336 01C6  
                             l1344 0087                               l1360 01B2  
                             l1352 0197                               l1192 0262  
                             l1184 0246                               l1408 02FC  
                             l1328 0112                               l1440 0484  
                             l1432 0450                               l1370 0382  
                             l1418 01FE                               l1274 044A  
                             l1266 0430                               l1258 0411  
                             l1290 0326                               l1282 0314  
                             l1338 01F6                               l1346 008C  
                             l1426 04E9                               l1362 01B8  
                             l1354 019C                               l1194 0269  
                             l1186 024D                               l1178 0230  
                             l1442 04B8                               l1434 046C  
                             l1450 026E                               l1380 03B4  
                             l1372 0385                               l1276 044F  
                             l1268 0437                               l1292 032C  
                             l1284 0319                               l1348 007E  
                             l1364 01C0                               l1356 01A4  
                             l1428 067F                               l1188 0254  
                             l1196 00EB                               l1444 04BE  
                             l1436 0472                               l1460 029A  
                             l1452 0278                               l1390 03DE  
                             l1382 03C2                               l1374 0393  
                             l1294 032F                               l1286 031C  
                             l1278 030F                               l1366 01C5  
                             l1358 01AD                               l1198 00EE  
                             l1446 04C7                               l1438 047B  
                             l1462 02A0                               l1454 027D  
                             l1384 03C4                               l1376 0399  
                             l1368 0372                               l1296 0336  
                             l1288 0320                               l1392 02BA  
                             l1448 04D0                               l1464 02A6  
                             l1456 028C                               l1386 03CD  
                             l1378 03A2                               l1298 033B  
                             l1394 02C3                               l1466 02AB  
                             l1458 0292                               l1388 03D5  
                             l1396 02C9                               l1468 02B0  
                             l1398 02D8                               STR_1 0009  
                             STR_2 0010                               STR_3 0016  
                             STR_4 0016                               STR_5 000E  
                             STR_6 000E                               _PEIE 005E  
                  lcd_write_char@a 0073                       __CFG_WRT$OFF 0000  
           __end_of_lcd_write_char 0104                               _date 0038  
                             _main 026E                               _hour 003A  
                             _year 0032                               btemp 007E  
                             start 0000                      __CFG_IESO$OFF 0000  
                 ?_I2C_Master_Init 003E                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                    __end_of___awdiv 0450  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 0372  
                            _ANSEL 0188                    __end_of___lldiv 03DF  
                  ___awdiv@divisor 0070                    ___awdiv@counter 0075  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTD 0008                              _PORTE 0009  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              _SSPIF 0063  
                   __CFG_FCMEN$OFF 0000                    __end_of_lcd_cmd 00EA  
                __end_of_BCD_2_DEC 0148                              _min_0 002F  
                            _min_1 002E                              _sec_0 0031  
                            _sec_1 0030                              _month 0034  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                __end_of_DEC_2_BCD 01F7                    ?_lcd_write_char 0070  
                            status 0003                              wtemp0 007E  
                   __CFG_MCLRE$OFF 0000                    __initialization 07E6  
                     __end_of_main 02BA                      ?_initOsci4MHZ 0070  
                           ??_main 007E                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 003E                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 007D                   ___awdiv@dividend 0072  
                           _ANSELH 0189                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                   __CFG_PWRTE$OFF 0000                   __end_of_lcd_init 030F  
                 __end_of_lcd_port 026E               __size_of_configPorts 0011  
                           ___wmul 016F                             _date_0 002B  
                        ??___awdiv 0074                             _date_1 002A  
                        ??___awmod 0074                          ??___lldiv 0078  
                   ??_initOsci4MHZ 0070                             _hour_0 002D  
                           _hour_1 002C                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070           __end_of_lcd_write_string 016F  
                           _year_0 0027                             _year_1 0026  
                  ___awmod@counter 0075   __end_of_Update_Current_Date_Time 07E6  
                        ??_lcd_cmd 0071                       ?_mostrar_lcd 0070  
                lcd_write_string@a 0076                  lcd_write_string@i 0074  
          __end_of__initialization 07FC                     __pcstackCOMMON 0070  
                     __pidataBANK0 0091                   ??_lcd_set_cursor 0075  
      __size_of_separa_digitos_rtc 00E7                         __pbssBANK0 0020  
                       __pmaintext 026E                            ?___wmul 0070  
         _Update_Current_Date_Time 067F             __size_of_Set_Time_Date 00AF  
                 ??_lcd_write_char 0071                            _SSPCON2 0091  
                        ?_lcd_init 0070                            _SSPSTAT 0094  
                        ?_lcd_port 0070                         __stringtab 0003  
             __end_of_initOsci4MHZ 006D                          _BCD_2_DEC 0122  
                        _DEC_2_BCD 01C6                            ___awdiv 03DF  
                          ___awmod 030F                            ___lldiv 0372  
                  __size_of___wmul 0028                            __ptext1 0598  
                          __ptext2 0450                            __ptext3 0148  
                          __ptext4 00EA                            __ptext5 0104  
                          __ptext6 02BA                            __ptext7 00D0  
                          __ptext8 022F                            __ptext9 0066  
                          _lcd_cmd 00D0                   ___awmod@dividend 0072  
                          _month_0 0029                            _month_1 0028  
         __size_of_I2C_Master_Init 0038           __size_of_I2C_Master_Read 002F  
         __size_of_I2C_Master_Wait 000F           __size_of_I2C_Master_Stop 0009  
             __size_of_mostrar_lcd 0099                            clrloop0 006E  
                       ??_lcd_init 0074                         ??_lcd_port 0070  
             end_of_initialization 07FC                         ?_BCD_2_DEC 0076  
        __size_of_I2C_Master_Start 0009                         ?_DEC_2_BCD 0079  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                      _Set_Time_Date 04E9  
                 I2C_Master_Init@c 003E                   I2C_Master_Read@a 0070  
                ?_lcd_write_string 0070                 ??_lcd_write_string 0074  
                        _TRISCbits 0087                      ??_configPorts 0070  
                   ?_Set_Time_Date 0070                BCD_2_DEC@to_convert 0076  
                   __end_of___wmul 0197                start_initialization 07E6  
            __size_of_initOsci4MHZ 0007                        ??_BCD_2_DEC 0078  
                ??_I2C_Master_Init 0042                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                        ??_DEC_2_BCD 007B  
                         ??___wmul 0074                         init_fetch0 00BD  
                      __pdataBANK0 0032                __end_of_configPorts 00BD  
       ??_Update_Current_Date_Time 007D                       _initOsci4MHZ 0066  
       __end_of_separa_digitos_rtc 067F                          ___latbits 0002  
                    __pcstackBANK0 003E                  __size_of_lcd_init 0055  
                __size_of_lcd_port 003F                    ??_Set_Time_Date 007D  
                 _I2C_Master_Start 0075                   _I2C_Master_Write 0087  
                         ?___awdiv 0070                           ?___awmod 0070  
                         ?___lldiv 0070                          __pstrings 0003  
                         ?_lcd_cmd 0070            __size_of_lcd_set_cursor 001E  
                   ___wmul@product 0074                          clear_ram0 006D  
                  lcd_set_cursor@a 0075                    lcd_set_cursor@b 0074  
                      _configPorts 00AC                        __stringbase 0008  
                ___wmul@multiplier 0070                      ??_mostrar_lcd 0077  
                        lcd_port@a 0070                I2C_Master_Read@temp 0074  
        __size_of_lcd_write_string 0027            __size_of_lcd_write_char 001A  
                 __size_of___awdiv 0071                   __size_of___awmod 0063  
                 __size_of___lldiv 006D                 __end_of__stringtab 0009  
                 __size_of_lcd_cmd 001A                    _I2C_Master_Init 01F7  
                  _I2C_Master_Read 0197                    _I2C_Master_Wait 009D  
                  _I2C_Master_Stop 007E                           __ptext10 00AC  
                         __ptext11 067F                           __ptext20 01C6  
                         __ptext12 0197                           __ptext21 030F  
                         __ptext13 0122                           __ptext22 03DF  
                         __ptext14 016F                           __ptext23 01F7  
                         __ptext15 04E9                           __ptext24 0372  
                         __ptext16 0087                           __ptext17 007E  
                         __ptext18 0075                           __ptext19 009D  
                __CFG_BOR4V$BOR40V 0000                           _lcd_init 02BA  
                         _lcd_port 022F                __end_of_mostrar_lcd 04E9  
                    __size_of_main 004C                           lcd_cmd@a 0073  
         __end_of_I2C_Master_Start 007E           __end_of_I2C_Master_Write 0091  
                         init_ram0 00C1                     _lcd_set_cursor 0104  
               _separa_digitos_rtc 0598                   ___lldiv@dividend 0074  
                        stringcode 0003                ?_separa_digitos_rtc 0070  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 022F  
          __end_of_I2C_Master_Read 01C6            __end_of_I2C_Master_Wait 00AC  
          __end_of_I2C_Master_Stop 0087                   ___lldiv@quotient 0079  
                I2C_Master_Write@d 003E               ??_separa_digitos_rtc 0079  
                      _mostrar_lcd 0450                           stringdir 0003  
                         stringtab 0003                        _SSPCON2bits 0091  
           __end_of_lcd_set_cursor 0122  __size_of_Update_Current_Date_Time 0167  
        ?_Update_Current_Date_Time 0070                   _lcd_write_string 0148  
                   _lcd_write_char 00EA                       ?_configPorts 0070  
            __end_of_Set_Time_Date 0598                DEC_2_BCD@to_convert 0079  
               __size_of_BCD_2_DEC 0026  
