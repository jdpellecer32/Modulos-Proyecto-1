

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 14 11:10:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0018                     _RCSTAbits	set	24
   446  000B                     _INTCONbits	set	11
   447  000C                     _PIR1bits	set	12
   448  0005                     _PORTA	set	5
   449  0006                     _PORTB	set	6
   450  0013                     _SSPBUF	set	19
   451  0014                     _SSPCON	set	20
   452  0019                     _TXREG	set	25
   453  001A                     _RCREG	set	26
   454  0063                     _SSPIF	set	99
   455  0065                     _RCIF	set	101
   456  00C4                     _CREN	set	196
   457  00C7                     _SPEN	set	199
   458  0098                     _TXSTAbits	set	152
   459  0087                     _TRISCbits	set	135
   460  008C                     _PIE1bits	set	140
   461  0085                     _TRISA	set	133
   462  0086                     _TRISB	set	134
   463  0094                     _SSPSTATbits	set	148
   464  0094                     _SSPSTAT	set	148
   465  0099                     _SPBRG	set	153
   466  043B                     _TRISC3	set	1083
   467  043D                     _TRISC5	set	1085
   468  04C1                     _TRMT	set	1217
   469  04C5                     _TXEN	set	1221
   470  043E                     _TRISC6	set	1086
   471  043F                     _TRISC7	set	1087
   472  04C4                     _SYNC	set	1220
   473  04C2                     _BRGH	set	1218
   474  0187                     _BAUDCTLbits	set	391
   475  0189                     _ANSELH	set	393
   476  0188                     _ANSEL	set	392
   477                           
   478                           ; #config settings
   479  0000                     
   480                           	psect	cinit
   481  000F                     start_initialization:	
   482  000F                     __initialization:	
   483                           
   484                           ; Clear objects allocated to COMMON
   485  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   486  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   487  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   488  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   489                           
   490                           ; Clear objects allocated to BANK0
   491  0013  1283               	bcf	3,5	;RP0=0, select bank0
   492  0014  1303               	bcf	3,6	;RP1=0, select bank0
   493  0015  01A0               	clrf	__pbssBANK0& (0+127)
   494  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   495  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   496  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   497  0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   498  001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   499  001B  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   500  001C  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   501  001D  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   502  001E  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   503  001F  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   504  0020  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   505  0021                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  0021                     __end_of__initialization:	
   509  0021  0183               	clrf	3
   510  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssCOMMON
   513  0076                     __pbssCOMMON:	
   514  0076                     _unidades:	
   515  0076                     	ds	1
   516  0077                     _sec:	
   517  0077                     	ds	1
   518  0078                     _ENVIO:	
   519  0078                     	ds	1
   520  0079                     _C_UART:	
   521  0079                     	ds	1
   522                           
   523                           	psect	bssBANK0
   524  0020                     __pbssBANK0:	
   525  0020                     _ctrl:	
   526  0020                     	ds	1
   527  0021                     _resta:	
   528  0021                     	ds	1
   529  0022                     _cambio:	
   530  0022                     	ds	1
   531  0023                     _contador:	
   532  0023                     	ds	1
   533  0024                     _sismo:	
   534  0024                     	ds	1
   535  0025                     _humo:	
   536  0025                     	ds	1
   537  0026                     _temperatura:	
   538  0026                     	ds	1
   539  0027                     _year:	
   540  0027                     	ds	1
   541  0028                     _month:	
   542  0028                     	ds	1
   543  0029                     _date:	
   544  0029                     	ds	1
   545  002A                     _min:	
   546  002A                     	ds	1
   547  002B                     _hour:	
   548  002B                     	ds	1
   549                           
   550                           	psect	cstackCOMMON
   551  0070                     __pcstackCOMMON:	
   552  0070                     ?_init_usart:	
   553  0070                     ?_recibe_caracter_usart:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_spiReceiveWait:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_spiReceiveWait:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_spiWrite:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_spiWrite:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_spiRead:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ??_spiRead:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_isr:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_main:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     spiWrite@dat:	
   581                           ; 1 bytes @ 0x0
   582                           
   583                           
   584                           ; 1 bytes @ 0x0
   585  0070                     	ds	1
   586  0071                     ??_isr:	
   587                           
   588                           ; 1 bytes @ 0x1
   589  0071                     	ds	3
   590  0074                     ??_init_usart:	
   591  0074                     ??_recibe_caracter_usart:	
   592                           ; 1 bytes @ 0x4
   593                           
   594  0074                     ??_spiInit:	
   595                           ; 1 bytes @ 0x4
   596                           
   597  0074                     ?___bmul:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0074                     spiInit@sType:	
   601                           ; 1 bytes @ 0x4
   602                           
   603  0074                     ___bmul@multiplicand:	
   604                           ; 1 bytes @ 0x4
   605                           
   606                           
   607                           ; 1 bytes @ 0x4
   608  0074                     	ds	1
   609  0075                     ??___bmul:	
   610                           
   611                           ; 1 bytes @ 0x5
   612  0075                     	ds	1
   613                           
   614                           	psect	cstackBANK0
   615  002C                     __pcstackBANK0:	
   616  002C                     ?_spiInit:	
   617  002C                     spiInit@sDataSample:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  002C                     ___bmul@product:	
   621                           ; 1 bytes @ 0x0
   622                           
   623                           
   624                           ; 1 bytes @ 0x0
   625  002C                     	ds	1
   626  002D                     spiInit@sClockIdle:	
   627  002D                     ___bmul@multiplier:	
   628                           ; 1 bytes @ 0x1
   629                           
   630                           
   631                           ; 1 bytes @ 0x1
   632  002D                     	ds	1
   633  002E                     spiInit@sTransmitEdge:	
   634                           
   635                           ; 1 bytes @ 0x2
   636  002E                     	ds	1
   637  002F                     ??_main:	
   638                           
   639                           ; 1 bytes @ 0x3
   640  002F                     	ds	2
   641                           
   642                           	psect	maintext
   643  0025                     __pmaintext:	
   644 ;;
   645 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   646 ;;
   647 ;; *************** function _main *****************
   648 ;; Defined at:
   649 ;;		line 88 in file "Traductor.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, pclath, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : B00/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0
   665 ;;      Temps:          0       2       0       0       0
   666 ;;      Totals:         0       2       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels required when called:    4
   669 ;; This function calls:
   670 ;;		___bmul
   671 ;;		_init_usart
   672 ;;		_recibe_caracter_usart
   673 ;;		_spiInit
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _main
   681  0025                     _main:	
   682  0025                     l1266:	
   683                           ;incstack = 0
   684                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   685                           
   686                           
   687                           ;Traductor.c: 89:     ANSEL = 0;
   688  0025  1683               	bsf	3,5	;RP0=1, select bank3
   689  0026  1703               	bsf	3,6	;RP1=1, select bank3
   690  0027  0188               	clrf	8	;volatile
   691                           
   692                           ;Traductor.c: 90:     ANSELH = 0;
   693  0028  0189               	clrf	9	;volatile
   694                           
   695                           ;Traductor.c: 91:     TRISB = 0;
   696  0029  1683               	bsf	3,5	;RP0=1, select bank1
   697  002A  1303               	bcf	3,6	;RP1=0, select bank1
   698  002B  0186               	clrf	6	;volatile
   699                           
   700                           ;Traductor.c: 92:     PORTB = 0;
   701  002C  1283               	bcf	3,5	;RP0=0, select bank0
   702  002D  1303               	bcf	3,6	;RP1=0, select bank0
   703  002E  0186               	clrf	6	;volatile
   704                           
   705                           ;Traductor.c: 93:     TRISA = 0;
   706  002F  1683               	bsf	3,5	;RP0=1, select bank1
   707  0030  1303               	bcf	3,6	;RP1=0, select bank1
   708  0031  0185               	clrf	5	;volatile
   709                           
   710                           ;Traductor.c: 94:     PORTA = 0;
   711  0032  1283               	bcf	3,5	;RP0=0, select bank0
   712  0033  1303               	bcf	3,6	;RP1=0, select bank0
   713  0034  0185               	clrf	5	;volatile
   714  0035                     l1268:	
   715                           
   716                           ;Traductor.c: 96:     init_usart();
   717  0035  120A  118A  21CE  120A  118A  	fcall	_init_usart
   718  003A                     l1270:	
   719                           
   720                           ;Traductor.c: 99:     PIR1bits.SSPIF = 0;
   721  003A  1283               	bcf	3,5	;RP0=0, select bank0
   722  003B  1303               	bcf	3,6	;RP1=0, select bank0
   723  003C  118C               	bcf	12,3	;volatile
   724  003D                     l1272:	
   725                           
   726                           ;Traductor.c: 100:     PIE1bits.SSPIE = 1;
   727  003D  1683               	bsf	3,5	;RP0=1, select bank1
   728  003E  1303               	bcf	3,6	;RP1=0, select bank1
   729  003F  158C               	bsf	12,3	;volatile
   730  0040                     l1274:	
   731                           
   732                           ;Traductor.c: 101:     INTCONbits.PEIE = 1;
   733  0040  170B               	bsf	11,6	;volatile
   734  0041                     l1276:	
   735                           
   736                           ;Traductor.c: 102:     INTCONbits.GIE = 1;
   737  0041  178B               	bsf	11,7	;volatile
   738  0042                     l1278:	
   739                           
   740                           ;Traductor.c: 103:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          HIGH, SPI_ACTIVE_2_IDLE);
   741  0042  1283               	bcf	3,5	;RP0=0, select bank0
   742  0043  1303               	bcf	3,6	;RP1=0, select bank0
   743  0044  01AC               	clrf	spiInit@sDataSample
   744  0045  3010               	movlw	16
   745  0046  00AF               	movwf	??_main
   746  0047  082F               	movf	??_main,w
   747  0048  00AD               	movwf	spiInit@sClockIdle
   748  0049  3040               	movlw	64
   749  004A  00B0               	movwf	??_main+1
   750  004B  0830               	movf	??_main+1,w
   751  004C  00AE               	movwf	spiInit@sTransmitEdge
   752  004D  3025               	movlw	37
   753  004E  120A  118A  21EF  120A  118A  	fcall	_spiInit
   754  0053                     l1280:	
   755                           
   756                           ;Traductor.c: 108:         C_UART = recibe_caracter_usart();
   757  0053  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   758  0058  1283               	bcf	3,5	;RP0=0, select bank0
   759  0059  1303               	bcf	3,6	;RP1=0, select bank0
   760  005A  00AF               	movwf	??_main
   761  005B  082F               	movf	??_main,w
   762  005C  00F9               	movwf	_C_UART
   763  005D                     l1282:	
   764                           
   765                           ;Traductor.c: 109:         if(C_UART == 200){
   766  005D  30C8               	movlw	200
   767  005E  0679               	xorwf	_C_UART,w
   768  005F  1D03               	btfss	3,2
   769  0060  2862               	goto	u721
   770  0061  2863               	goto	u720
   771  0062                     u721:	
   772  0062  286D               	goto	l1286
   773  0063                     u720:	
   774  0063                     l1284:	
   775                           
   776                           ;Traductor.c: 110:             sec = recibe_caracter_usart();
   777  0063  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   778  0068  1283               	bcf	3,5	;RP0=0, select bank0
   779  0069  1303               	bcf	3,6	;RP1=0, select bank0
   780  006A  00AF               	movwf	??_main
   781  006B  082F               	movf	??_main,w
   782  006C  00F7               	movwf	_sec
   783  006D                     l1286:	
   784                           
   785                           ;Traductor.c: 112:         if(C_UART == 201){
   786  006D  30C9               	movlw	201
   787  006E  0679               	xorwf	_C_UART,w
   788  006F  1D03               	btfss	3,2
   789  0070  2872               	goto	u731
   790  0071  2873               	goto	u730
   791  0072                     u731:	
   792  0072  287D               	goto	l1290
   793  0073                     u730:	
   794  0073                     l1288:	
   795                           
   796                           ;Traductor.c: 113:             min = recibe_caracter_usart();
   797  0073  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   798  0078  1283               	bcf	3,5	;RP0=0, select bank0
   799  0079  1303               	bcf	3,6	;RP1=0, select bank0
   800  007A  00AF               	movwf	??_main
   801  007B  082F               	movf	??_main,w
   802  007C  00AA               	movwf	_min
   803  007D                     l1290:	
   804                           
   805                           ;Traductor.c: 115:         if(C_UART == 202){
   806  007D  30CA               	movlw	202
   807  007E  0679               	xorwf	_C_UART,w
   808  007F  1D03               	btfss	3,2
   809  0080  2882               	goto	u741
   810  0081  2883               	goto	u740
   811  0082                     u741:	
   812  0082  288D               	goto	l1294
   813  0083                     u740:	
   814  0083                     l1292:	
   815                           
   816                           ;Traductor.c: 116:             hour = recibe_caracter_usart();
   817  0083  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   818  0088  1283               	bcf	3,5	;RP0=0, select bank0
   819  0089  1303               	bcf	3,6	;RP1=0, select bank0
   820  008A  00AF               	movwf	??_main
   821  008B  082F               	movf	??_main,w
   822  008C  00AB               	movwf	_hour
   823  008D                     l1294:	
   824                           
   825                           ;Traductor.c: 118:         if(C_UART == 203){
   826  008D  30CB               	movlw	203
   827  008E  0679               	xorwf	_C_UART,w
   828  008F  1D03               	btfss	3,2
   829  0090  2892               	goto	u751
   830  0091  2893               	goto	u750
   831  0092                     u751:	
   832  0092  289D               	goto	l1298
   833  0093                     u750:	
   834  0093                     l1296:	
   835                           
   836                           ;Traductor.c: 119:             date = recibe_caracter_usart();
   837  0093  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   838  0098  1283               	bcf	3,5	;RP0=0, select bank0
   839  0099  1303               	bcf	3,6	;RP1=0, select bank0
   840  009A  00AF               	movwf	??_main
   841  009B  082F               	movf	??_main,w
   842  009C  00A9               	movwf	_date
   843  009D                     l1298:	
   844                           
   845                           ;Traductor.c: 121:         if(C_UART == 204){
   846  009D  30CC               	movlw	204
   847  009E  0679               	xorwf	_C_UART,w
   848  009F  1D03               	btfss	3,2
   849  00A0  28A2               	goto	u761
   850  00A1  28A3               	goto	u760
   851  00A2                     u761:	
   852  00A2  28AD               	goto	l1302
   853  00A3                     u760:	
   854  00A3                     l1300:	
   855                           
   856                           ;Traductor.c: 122:             month = recibe_caracter_usart();
   857  00A3  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   858  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   859  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   860  00AA  00AF               	movwf	??_main
   861  00AB  082F               	movf	??_main,w
   862  00AC  00A8               	movwf	_month
   863  00AD                     l1302:	
   864                           
   865                           ;Traductor.c: 124:         if(C_UART == 205){
   866  00AD  30CD               	movlw	205
   867  00AE  0679               	xorwf	_C_UART,w
   868  00AF  1D03               	btfss	3,2
   869  00B0  28B2               	goto	u771
   870  00B1  28B3               	goto	u770
   871  00B2                     u771:	
   872  00B2  28BD               	goto	l1306
   873  00B3                     u770:	
   874  00B3                     l1304:	
   875                           
   876                           ;Traductor.c: 125:             year = recibe_caracter_usart();
   877  00B3  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   878  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   879  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   880  00BA  00AF               	movwf	??_main
   881  00BB  082F               	movf	??_main,w
   882  00BC  00A7               	movwf	_year
   883  00BD                     l1306:	
   884                           
   885                           ;Traductor.c: 127:         if(C_UART == 206){
   886  00BD  30CE               	movlw	206
   887  00BE  0679               	xorwf	_C_UART,w
   888  00BF  1D03               	btfss	3,2
   889  00C0  28C2               	goto	u781
   890  00C1  28C3               	goto	u780
   891  00C2                     u781:	
   892  00C2  28CD               	goto	l1310
   893  00C3                     u780:	
   894  00C3                     l1308:	
   895                           
   896                           ;Traductor.c: 128:             unidades = recibe_caracter_usart();
   897  00C3  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   898  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   899  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   900  00CA  00AF               	movwf	??_main
   901  00CB  082F               	movf	??_main,w
   902  00CC  00F6               	movwf	_unidades
   903  00CD                     l1310:	
   904                           
   905                           ;Traductor.c: 130:         if(C_UART == 207){
   906  00CD  30CF               	movlw	207
   907  00CE  0679               	xorwf	_C_UART,w
   908  00CF  1D03               	btfss	3,2
   909  00D0  28D2               	goto	u791
   910  00D1  28D3               	goto	u790
   911  00D2                     u791:	
   912  00D2  28DD               	goto	l1314
   913  00D3                     u790:	
   914  00D3                     l1312:	
   915                           
   916                           ;Traductor.c: 131:             temperatura = recibe_caracter_usart();
   917  00D3  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   918  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   919  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   920  00DA  00AF               	movwf	??_main
   921  00DB  082F               	movf	??_main,w
   922  00DC  00A6               	movwf	_temperatura
   923  00DD                     l1314:	
   924                           
   925                           ;Traductor.c: 133:         if(C_UART == 208){
   926  00DD  30D0               	movlw	208
   927  00DE  0679               	xorwf	_C_UART,w
   928  00DF  1D03               	btfss	3,2
   929  00E0  28E2               	goto	u801
   930  00E1  28E3               	goto	u800
   931  00E2                     u801:	
   932  00E2  28ED               	goto	l1318
   933  00E3                     u800:	
   934  00E3                     l1316:	
   935                           
   936                           ;Traductor.c: 134:             humo = recibe_caracter_usart();
   937  00E3  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   938  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   939  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   940  00EA  00AF               	movwf	??_main
   941  00EB  082F               	movf	??_main,w
   942  00EC  00A5               	movwf	_humo
   943  00ED                     l1318:	
   944                           
   945                           ;Traductor.c: 136:         if(C_UART == 209){
   946  00ED  30D1               	movlw	209
   947  00EE  0679               	xorwf	_C_UART,w
   948  00EF  1D03               	btfss	3,2
   949  00F0  28F2               	goto	u811
   950  00F1  28F3               	goto	u810
   951  00F2                     u811:	
   952  00F2  28FD               	goto	l1322
   953  00F3                     u810:	
   954  00F3                     l1320:	
   955                           
   956                           ;Traductor.c: 137:             sismo = recibe_caracter_usart();
   957  00F3  120A  118A  222D  120A  118A  	fcall	_recibe_caracter_usart
   958  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   959  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   960  00FA  00AF               	movwf	??_main
   961  00FB  082F               	movf	??_main,w
   962  00FC  00A4               	movwf	_sismo
   963  00FD                     l1322:	
   964                           
   965                           ;Traductor.c: 140:         PORTB = sec;
   966  00FD  0877               	movf	_sec,w
   967  00FE  0086               	movwf	6	;volatile
   968  00FF                     l1324:	
   969                           
   970                           ;Traductor.c: 144:         resta = unidades - cambio;
   971  00FF  0822               	movf	_cambio,w
   972  0100  0276               	subwf	_unidades,w
   973  0101  00AF               	movwf	??_main
   974  0102  082F               	movf	??_main,w
   975  0103  00A1               	movwf	_resta
   976  0104                     l1326:	
   977                           
   978                           ;Traductor.c: 145:         if(resta != 0){
   979  0104  0821               	movf	_resta,w
   980  0105  1903               	btfsc	3,2
   981  0106  2908               	goto	u821
   982  0107  2909               	goto	u820
   983  0108                     u821:	
   984  0108  2913               	goto	l1332
   985  0109                     u820:	
   986  0109                     l1328:	
   987                           
   988                           ;Traductor.c: 146:             if(unidades == 9){
   989  0109  3009               	movlw	9
   990  010A  0676               	xorwf	_unidades,w
   991  010B  1D03               	btfss	3,2
   992  010C  290E               	goto	u831
   993  010D  290F               	goto	u830
   994  010E                     u831:	
   995  010E  2913               	goto	l1332
   996  010F                     u830:	
   997  010F                     l1330:	
   998                           
   999                           ;Traductor.c: 147:             ctrl++;
  1000  010F  3001               	movlw	1
  1001  0110  00AF               	movwf	??_main
  1002  0111  082F               	movf	??_main,w
  1003  0112  07A0               	addwf	_ctrl,f
  1004  0113                     l1332:	
  1005                           
  1006                           ;Traductor.c: 152:         contador = unidades + 10*ctrl;
  1007  0113  300A               	movlw	10
  1008  0114  00AF               	movwf	??_main
  1009  0115  082F               	movf	??_main,w
  1010  0116  00F4               	movwf	___bmul@multiplicand
  1011  0117  0820               	movf	_ctrl,w
  1012  0118  120A  118A  220D  120A  118A  	fcall	___bmul
  1013  011D  0776               	addwf	_unidades,w
  1014  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1015  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0120  00B0               	movwf	??_main+1
  1017  0121  0830               	movf	??_main+1,w
  1018  0122  00A3               	movwf	_contador
  1019  0123                     l1334:	
  1020                           
  1021                           ;Traductor.c: 153:         cambio = unidades;
  1022  0123  0876               	movf	_unidades,w
  1023  0124  00AF               	movwf	??_main
  1024  0125  082F               	movf	??_main,w
  1025  0126  00A2               	movwf	_cambio
  1026  0127  2853               	goto	l1280
  1027  0128  120A  118A  280C   	ljmp	start
  1028  012B                     __end_of_main:	
  1029                           
  1030                           	psect	text1
  1031  01EF                     __ptext1:	
  1032 ;; *************** function _spiInit *****************
  1033 ;; Defined at:
  1034 ;;		line 12 in file "SPI.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  sType           1    wreg     enum E1264
  1037 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1038 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1039 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  sType           1    4[COMMON] enum E1264
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       3       0       0       0
  1052 ;;      Locals:         1       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         1       3       0       0       0
  1055 ;;Total ram usage:        4 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    3
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _spiInit
  1067  01EF                     _spiInit:	
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1071                           ;spiInit@sType stored from wreg
  1072  01EF  00F4               	movwf	spiInit@sType
  1073  01F0                     l1242:	
  1074                           
  1075                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1076  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  1077  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  1078  01F2  1287               	bcf	7,5	;volatile
  1079                           
  1080                           ;SPI.c: 15:     if(sType & 0b00000100)
  1081  01F3  1D74               	btfss	spiInit@sType,2
  1082  01F4  29F6               	goto	u691
  1083  01F5  29F7               	goto	u690
  1084  01F6                     u691:	
  1085  01F6  29FF               	goto	l1248
  1086  01F7                     u690:	
  1087  01F7                     l1244:	
  1088                           
  1089                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1090  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1091  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1092  01F9  082E               	movf	spiInit@sTransmitEdge,w
  1093  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1094  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  1095  01FC  0094               	movwf	20	;volatile
  1096  01FD                     l1246:	
  1097                           
  1098                           ;SPI.c: 18:         TRISC3 = 1;
  1099  01FD  1587               	bsf	7,3	;volatile
  1100                           
  1101                           ;SPI.c: 19:     }
  1102  01FE  2A07               	goto	l75
  1103  01FF                     l1248:	
  1104                           
  1105                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1106  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0201  082C               	movf	spiInit@sDataSample,w
  1109  0202  042E               	iorwf	spiInit@sTransmitEdge,w
  1110  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1111  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1112  0205  0094               	movwf	20	;volatile
  1113  0206                     l1250:	
  1114                           
  1115                           ;SPI.c: 23:         TRISC3 = 0;
  1116  0206  1187               	bcf	7,3	;volatile
  1117  0207                     l75:	
  1118                           ;SPI.c: 24:     }
  1119                           
  1120                           
  1121                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1122  0207  0874               	movf	spiInit@sType,w
  1123  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1125  020A  042D               	iorwf	spiInit@sClockIdle,w
  1126  020B  0094               	movwf	20	;volatile
  1127  020C                     l76:	
  1128  020C  0008               	return
  1129  020D                     __end_of_spiInit:	
  1130                           
  1131                           	psect	text2
  1132  022D                     __ptext2:	
  1133 ;; *************** function _recibe_caracter_usart *****************
  1134 ;; Defined at:
  1135 ;;		line 46 in file "USART.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      unsigned char 
  1142 ;; Registers used:
  1143 ;;		wreg
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    3
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _recibe_caracter_usart
  1165  022D                     _recibe_caracter_usart:	
  1166  022D                     l1108:	
  1167                           ;incstack = 0
  1168                           ; Regs used in _recibe_caracter_usart: [wreg]
  1169                           
  1170  022D                     l229:	
  1171                           ;USART.c: 47:   while(!RCIF);
  1172                           
  1173  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1174  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1175  022F  1E8C               	btfss	12,5	;volatile
  1176  0230  2A32               	goto	u441
  1177  0231  2A33               	goto	u440
  1178  0232                     u441:	
  1179  0232  2A2D               	goto	l229
  1180  0233                     u440:	
  1181  0233                     l1110:	
  1182                           
  1183                           ;USART.c: 48:   return RCREG;
  1184  0233  081A               	movf	26,w	;volatile
  1185  0234                     l232:	
  1186  0234  0008               	return
  1187  0235                     __end_of_recibe_caracter_usart:	
  1188                           
  1189                           	psect	text3
  1190  01CE                     __ptext3:	
  1191 ;; *************** function _init_usart *****************
  1192 ;; Defined at:
  1193 ;;		line 16 in file "USART.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    3
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _init_usart
  1223  01CE                     _init_usart:	
  1224  01CE                     l1096:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _init_usart: [wreg]
  1227                           
  1228                           
  1229                           ;USART.c: 17:      TRISCbits.TRISC7=1;
  1230  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  1231  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  1232  01D0  1787               	bsf	7,7	;volatile
  1233                           
  1234                           ;USART.c: 18:      TRISCbits.TRISC6=0;
  1235  01D1  1307               	bcf	7,6	;volatile
  1236                           
  1237                           ;USART.c: 20:      BAUDCTLbits.SCKP = 0;
  1238  01D2  1683               	bsf	3,5	;RP0=1, select bank3
  1239  01D3  1703               	bsf	3,6	;RP1=1, select bank3
  1240  01D4  1207               	bcf	7,4	;volatile
  1241                           
  1242                           ;USART.c: 21:      BAUDCTLbits.BRG16 = 0;
  1243  01D5  1187               	bcf	7,3	;volatile
  1244                           
  1245                           ;USART.c: 22:      BAUDCTLbits.ABDEN = 0;
  1246  01D6  1007               	bcf	7,0	;volatile
  1247                           
  1248                           ;USART.c: 24:      TXSTAbits.TXEN=1;
  1249  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  1250  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  1251  01D9  1698               	bsf	24,5	;volatile
  1252                           
  1253                           ;USART.c: 25:      TXSTAbits.SYNC=0;
  1254  01DA  1218               	bcf	24,4	;volatile
  1255                           
  1256                           ;USART.c: 26:      TXSTAbits.TX9=0;
  1257  01DB  1318               	bcf	24,6	;volatile
  1258                           
  1259                           ;USART.c: 27:      TXSTAbits.BRGH=1;
  1260  01DC  1518               	bsf	24,2	;volatile
  1261                           
  1262                           ;USART.c: 30:      RCSTAbits.SPEN=1;
  1263  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1264  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1265  01DF  1798               	bsf	24,7	;volatile
  1266                           
  1267                           ;USART.c: 31:      RCSTAbits.RX9=0;
  1268  01E0  1318               	bcf	24,6	;volatile
  1269                           
  1270                           ;USART.c: 32:      RCSTAbits.CREN=1;
  1271  01E1  1618               	bsf	24,4	;volatile
  1272  01E2                     l1098:	
  1273                           
  1274                           ;USART.c: 34:      SPBRG=25;
  1275  01E2  3019               	movlw	25
  1276  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  1277  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  1278  01E5  0099               	movwf	25	;volatile
  1279  01E6                     l1100:	
  1280                           
  1281                           ;USART.c: 36:      SYNC = 0;
  1282  01E6  1218               	bcf	24,4	;volatile
  1283  01E7                     l1102:	
  1284                           
  1285                           ;USART.c: 37:      SPEN = 1;
  1286  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1287  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1288  01E9  1798               	bsf	24,7	;volatile
  1289  01EA                     l1104:	
  1290                           
  1291                           ;USART.c: 38:      CREN = 1;
  1292  01EA  1618               	bsf	24,4	;volatile
  1293  01EB                     l1106:	
  1294                           
  1295                           ;USART.c: 39:      TXEN = 1;
  1296  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1297  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1298  01ED  1698               	bsf	24,5	;volatile
  1299  01EE                     l226:	
  1300  01EE  0008               	return
  1301  01EF                     __end_of_init_usart:	
  1302                           
  1303                           	psect	text4
  1304  020D                     __ptext4:	
  1305 ;; *************** function ___bmul *****************
  1306 ;; Defined at:
  1307 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  multiplier      1    wreg     unsigned char 
  1310 ;;  multiplicand    1    4[COMMON] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  multiplier      1    1[BANK0 ] unsigned char 
  1313 ;;  product         1    0[BANK0 ] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      unsigned char 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         1       0       0       0       0
  1324 ;;      Locals:         0       2       0       0       0
  1325 ;;      Temps:          1       0       0       0       0
  1326 ;;      Totals:         2       2       0       0       0
  1327 ;;Total ram usage:        4 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    3
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function ___bmul
  1339  020D                     ___bmul:	
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1343                           ;___bmul@multiplier stored from wreg
  1344  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1345  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1346  020F  00AD               	movwf	___bmul@multiplier
  1347  0210                     l1252:	
  1348  0210  01AC               	clrf	___bmul@product
  1349  0211                     l1254:	
  1350  0211  1C2D               	btfss	___bmul@multiplier,0
  1351  0212  2A14               	goto	u701
  1352  0213  2A15               	goto	u700
  1353  0214                     u701:	
  1354  0214  2A19               	goto	l1258
  1355  0215                     u700:	
  1356  0215                     l1256:	
  1357  0215  0874               	movf	___bmul@multiplicand,w
  1358  0216  00F5               	movwf	??___bmul
  1359  0217  0875               	movf	??___bmul,w
  1360  0218  07AC               	addwf	___bmul@product,f
  1361  0219                     l1258:	
  1362  0219  1003               	clrc
  1363  021A  0DF4               	rlf	___bmul@multiplicand,f
  1364  021B                     l1260:	
  1365  021B  1003               	clrc
  1366  021C  0CAD               	rrf	___bmul@multiplier,f
  1367  021D  082D               	movf	___bmul@multiplier,w
  1368  021E  1D03               	btfss	3,2
  1369  021F  2A21               	goto	u711
  1370  0220  2A22               	goto	u710
  1371  0221                     u711:	
  1372  0221  2A11               	goto	l1254
  1373  0222                     u710:	
  1374  0222                     l1262:	
  1375  0222  082C               	movf	___bmul@product,w
  1376  0223                     l356:	
  1377  0223  0008               	return
  1378  0224                     __end_of___bmul:	
  1379                           
  1380                           	psect	text5
  1381  012B                     __ptext5:	
  1382 ;; *************** function _isr *****************
  1383 ;; Defined at:
  1384 ;;		line 51 in file "Traductor.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          3       0       0       0       0
  1401 ;;      Totals:         3       0       0       0       0
  1402 ;;Total ram usage:        3 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    2
  1405 ;; This function calls:
  1406 ;;		_spiRead
  1407 ;;		_spiWrite
  1408 ;; This function is called by:
  1409 ;;		Interrupt level 1
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _isr
  1415  012B                     _isr:	
  1416  012B                     i1l1128:	
  1417                           
  1418                           ;Traductor.c: 52:    if(SSPIF == 1){
  1419  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1420  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1421  012D  1D8C               	btfss	12,3	;volatile
  1422  012E  2930               	goto	u47_21
  1423  012F  2931               	goto	u47_20
  1424  0130                     u47_21:	
  1425  0130  29C7               	goto	i1l179
  1426  0131                     u47_20:	
  1427  0131                     i1l1130:	
  1428                           
  1429                           ;Traductor.c: 53:        ENVIO = spiRead();
  1430  0131  120A  118A  2224  120A  118A  	fcall	_spiRead
  1431  0136  00F1               	movwf	??_isr
  1432  0137  0871               	movf	??_isr,w
  1433  0138  00F8               	movwf	_ENVIO
  1434  0139                     i1l1132:	
  1435                           
  1436                           ;Traductor.c: 54:        if(ENVIO == 0){
  1437  0139  0878               	movf	_ENVIO,w
  1438  013A  1D03               	btfss	3,2
  1439  013B  293D               	goto	u48_21
  1440  013C  293E               	goto	u48_20
  1441  013D                     u48_21:	
  1442  013D  2945               	goto	i1l1136
  1443  013E                     u48_20:	
  1444  013E                     i1l1134:	
  1445                           
  1446                           ;Traductor.c: 55:            spiWrite(sec);
  1447  013E  0877               	movf	_sec,w
  1448  013F  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1449                           
  1450                           ;Traductor.c: 56:        }
  1451  0144  29C4               	goto	i1l1170
  1452  0145                     i1l1136:	
  1453  0145  0378               	decf	_ENVIO,w
  1454  0146  1D03               	btfss	3,2
  1455  0147  2949               	goto	u49_21
  1456  0148  294A               	goto	u49_20
  1457  0149                     u49_21:	
  1458  0149  2953               	goto	i1l1140
  1459  014A                     u49_20:	
  1460  014A                     i1l1138:	
  1461                           
  1462                           ;Traductor.c: 58:            spiWrite(min);
  1463  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1464  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1465  014C  082A               	movf	_min,w
  1466  014D  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1467                           
  1468                           ;Traductor.c: 59:        }
  1469  0152  29C4               	goto	i1l1170
  1470  0153                     i1l1140:	
  1471  0153  3002               	movlw	2
  1472  0154  0678               	xorwf	_ENVIO,w
  1473  0155  1D03               	btfss	3,2
  1474  0156  2958               	goto	u50_21
  1475  0157  2959               	goto	u50_20
  1476  0158                     u50_21:	
  1477  0158  2962               	goto	i1l1144
  1478  0159                     u50_20:	
  1479  0159                     i1l1142:	
  1480                           
  1481                           ;Traductor.c: 61:            spiWrite(hour);
  1482  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1483  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1484  015B  082B               	movf	_hour,w
  1485  015C  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1486                           
  1487                           ;Traductor.c: 62:        }
  1488  0161  29C4               	goto	i1l1170
  1489  0162                     i1l1144:	
  1490  0162  3003               	movlw	3
  1491  0163  0678               	xorwf	_ENVIO,w
  1492  0164  1D03               	btfss	3,2
  1493  0165  2967               	goto	u51_21
  1494  0166  2968               	goto	u51_20
  1495  0167                     u51_21:	
  1496  0167  2971               	goto	i1l1148
  1497  0168                     u51_20:	
  1498  0168                     i1l1146:	
  1499                           
  1500                           ;Traductor.c: 64:            spiWrite(date);
  1501  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1503  016A  0829               	movf	_date,w
  1504  016B  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1505                           
  1506                           ;Traductor.c: 65:        }
  1507  0170  29C4               	goto	i1l1170
  1508  0171                     i1l1148:	
  1509  0171  3004               	movlw	4
  1510  0172  0678               	xorwf	_ENVIO,w
  1511  0173  1D03               	btfss	3,2
  1512  0174  2976               	goto	u52_21
  1513  0175  2977               	goto	u52_20
  1514  0176                     u52_21:	
  1515  0176  2980               	goto	i1l1152
  1516  0177                     u52_20:	
  1517  0177                     i1l1150:	
  1518                           
  1519                           ;Traductor.c: 67:            spiWrite(month);
  1520  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0179  0828               	movf	_month,w
  1523  017A  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1524                           
  1525                           ;Traductor.c: 68:        }
  1526  017F  29C4               	goto	i1l1170
  1527  0180                     i1l1152:	
  1528  0180  3005               	movlw	5
  1529  0181  0678               	xorwf	_ENVIO,w
  1530  0182  1D03               	btfss	3,2
  1531  0183  2985               	goto	u53_21
  1532  0184  2986               	goto	u53_20
  1533  0185                     u53_21:	
  1534  0185  298F               	goto	i1l1156
  1535  0186                     u53_20:	
  1536  0186                     i1l1154:	
  1537                           
  1538                           ;Traductor.c: 70:            spiWrite(year);
  1539  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0188  0827               	movf	_year,w
  1542  0189  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1543                           
  1544                           ;Traductor.c: 71:        }
  1545  018E  29C4               	goto	i1l1170
  1546  018F                     i1l1156:	
  1547  018F  3006               	movlw	6
  1548  0190  0678               	xorwf	_ENVIO,w
  1549  0191  1D03               	btfss	3,2
  1550  0192  2994               	goto	u54_21
  1551  0193  2995               	goto	u54_20
  1552  0194                     u54_21:	
  1553  0194  299E               	goto	i1l1160
  1554  0195                     u54_20:	
  1555  0195                     i1l1158:	
  1556                           
  1557                           ;Traductor.c: 73:            spiWrite(contador);
  1558  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0197  0823               	movf	_contador,w
  1561  0198  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1562                           
  1563                           ;Traductor.c: 74:        }
  1564  019D  29C4               	goto	i1l1170
  1565  019E                     i1l1160:	
  1566  019E  3007               	movlw	7
  1567  019F  0678               	xorwf	_ENVIO,w
  1568  01A0  1D03               	btfss	3,2
  1569  01A1  29A3               	goto	u55_21
  1570  01A2  29A4               	goto	u55_20
  1571  01A3                     u55_21:	
  1572  01A3  29AD               	goto	i1l1164
  1573  01A4                     u55_20:	
  1574  01A4                     i1l1162:	
  1575                           
  1576                           ;Traductor.c: 76:            spiWrite(temperatura);
  1577  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1578  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1579  01A6  0826               	movf	_temperatura,w
  1580  01A7  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1581                           
  1582                           ;Traductor.c: 77:        }
  1583  01AC  29C4               	goto	i1l1170
  1584  01AD                     i1l1164:	
  1585  01AD  3008               	movlw	8
  1586  01AE  0678               	xorwf	_ENVIO,w
  1587  01AF  1D03               	btfss	3,2
  1588  01B0  29B2               	goto	u56_21
  1589  01B1  29B3               	goto	u56_20
  1590  01B2                     u56_21:	
  1591  01B2  29BC               	goto	i1l1168
  1592  01B3                     u56_20:	
  1593  01B3                     i1l1166:	
  1594                           
  1595                           ;Traductor.c: 79:            spiWrite(humo);
  1596  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1597  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1598  01B5  0825               	movf	_humo,w
  1599  01B6  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1600                           
  1601                           ;Traductor.c: 80:        }
  1602  01BB  29C4               	goto	i1l1170
  1603  01BC                     i1l1168:	
  1604                           
  1605                           ;Traductor.c: 82:            spiWrite(sismo);
  1606  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1607  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1608  01BE  0824               	movf	_sismo,w
  1609  01BF  120A  118A  223C  120A  118A  	fcall	_spiWrite
  1610  01C4                     i1l1170:	
  1611                           
  1612                           ;Traductor.c: 84:        SSPIF = 0;
  1613  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1614  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1615  01C6  118C               	bcf	12,3	;volatile
  1616  01C7                     i1l179:	
  1617  01C7  0873               	movf	??_isr+2,w
  1618  01C8  008A               	movwf	10
  1619  01C9  0E72               	swapf	(??_isr+1)^(0+4294967168),w
  1620  01CA  0083               	movwf	3
  1621  01CB  0EFE               	swapf	btemp,f
  1622  01CC  0E7E               	swapf	btemp,w
  1623  01CD  0009               	retfie
  1624  01CE                     __end_of_isr:	
  1625                           
  1626                           	psect	intentry
  1627  0004                     __pintentry:	
  1628                           ;incstack = 0
  1629                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1630                           
  1631  0004                     interrupt_function:	
  1632  007E                     saved_w	set	btemp
  1633  0004  00FE               	movwf	btemp
  1634  0005  0E03               	swapf	3,w
  1635  0006  00F2               	movwf	??_isr+1
  1636  0007  080A               	movf	10,w
  1637  0008  00F3               	movwf	??_isr+2
  1638  0009  120A  118A  292B   	ljmp	_isr
  1639                           
  1640                           	psect	text6
  1641  023C                     __ptext6:	
  1642 ;; *************** function _spiWrite *****************
  1643 ;; Defined at:
  1644 ;;		line 34 in file "SPI.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  dat             1    wreg     unsigned char 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  dat             1    0[COMMON] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         0       0       0       0       0
  1659 ;;      Locals:         1       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0
  1661 ;;      Totals:         1       0       0       0       0
  1662 ;;Total ram usage:        1 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_isr
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _spiWrite
  1673  023C                     _spiWrite:	
  1674                           
  1675                           ;incstack = 0
  1676                           ; Regs used in _spiWrite: [wreg]
  1677                           ;spiWrite@dat stored from wreg
  1678  023C  00F0               	movwf	spiWrite@dat
  1679  023D                     i1l1088:	
  1680                           
  1681                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1682  023D  0870               	movf	spiWrite@dat,w
  1683  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1684  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0240  0093               	movwf	19	;volatile
  1686  0241                     i1l85:	
  1687  0241  0008               	return
  1688  0242                     __end_of_spiWrite:	
  1689                           
  1690                           	psect	text7
  1691  0224                     __ptext7:	
  1692 ;; *************** function _spiRead *****************
  1693 ;; Defined at:
  1694 ;;		line 47 in file "SPI.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      unsigned char 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, pclath, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0
  1711 ;;      Totals:         0       0       0       0       0
  1712 ;;Total ram usage:        0 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    1
  1715 ;; This function calls:
  1716 ;;		_spiReceiveWait
  1717 ;; This function is called by:
  1718 ;;		_isr
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _spiRead
  1724  0224                     _spiRead:	
  1725  0224                     i1l1090:	
  1726                           ;incstack = 0
  1727                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1728                           
  1729                           
  1730                           ;SPI.c: 49:     spiReceiveWait();
  1731  0224  120A  118A  2235  120A  118A  	fcall	_spiReceiveWait
  1732  0229                     i1l1092:	
  1733                           
  1734                           ;SPI.c: 50:     return(SSPBUF);
  1735  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1736  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1737  022B  0813               	movf	19,w	;volatile
  1738  022C                     i1l93:	
  1739  022C  0008               	return
  1740  022D                     __end_of_spiRead:	
  1741                           
  1742                           	psect	text8
  1743  0235                     __ptext8:	
  1744 ;; *************** function _spiReceiveWait *****************
  1745 ;; Defined at:
  1746 ;;		line 29 in file "SPI.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		None
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_spiRead
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _spiReceiveWait
  1775  0235                     _spiReceiveWait:	
  1776  0235                     i1l1076:	
  1777                           ;incstack = 0
  1778                           ; Regs used in _spiReceiveWait: []
  1779                           
  1780  0235                     i1l79:	
  1781                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1782                           
  1783  0235  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0236  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0237  1C14               	btfss	20,0	;volatile
  1786  0238  2A3A               	goto	u42_21
  1787  0239  2A3B               	goto	u42_20
  1788  023A                     u42_21:	
  1789  023A  2A35               	goto	i1l79
  1790  023B                     u42_20:	
  1791  023B                     i1l82:	
  1792  023B  0008               	return
  1793  023C                     __end_of_spiReceiveWait:	
  1794  007E                     btemp	set	126	;btemp
  1795  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      5      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___bmul

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     682
                                              3 BANK0      2     2      0
                             ___bmul
                         _init_usart
              _recibe_caracter_usart
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _recibe_caracter_usart                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_usart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _init_usart
   _recibe_caracter_usart
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5      11       5       21.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 14 11:10:38 2020

                ___bmul@product 002C                     __CFG_CP$OFF 0000                     _SSPSTATbits 0094  
                            l75 0207                              l76 020C                             l232 0234  
                           l226 01EE                             l229 022D                             l356 0223  
                           u440 0233                             u441 0232                    __CFG_CPD$OFF 0000  
                           u700 0215                             u701 0214                             u710 0222  
                           u711 0221                             u800 00E3                             u720 0063  
                           u801 00E2                             u721 0062                             u810 00F3  
                           u730 0073                             u811 00F2                             u731 0072  
                           u820 0109                             u740 0083                             u821 0108  
                           u741 0082                             u830 010F                             u750 0093  
                           u831 010E                             u751 0092                             u760 00A3  
                           u761 00A2                             u690 01F7                             u770 00B3  
                           u691 01F6                             u771 00B2                             u780 00C3  
                           u781 00C2                             u790 00D3                             u791 00D2  
                           _min 002A                             _sec 0077                             _isr 012B  
                  __CFG_LVP$OFF 0000                            l1100 01E6                            l1102 01E7  
                          l1110 0233                            l1104 01EA                            l1106 01EB  
                          l1108 022D                            l1300 00A3                            l1310 00CD  
                          l1302 00AD                            l1320 00F3                            l1312 00D3  
                          l1304 00B3                            l1250 0206                            l1242 01F0  
                          l1330 010F                            l1322 00FD                            l1314 00DD  
                          l1306 00BD                            l1260 021B                            l1252 0210  
                          l1244 01F7                            l1332 0113                            l1324 00FF  
                          l1316 00E3                            l1308 00C3                            l1262 0222  
                          l1254 0211                            l1246 01FD                            l1334 0123  
                          l1326 0104                            l1318 00ED                            l1270 003A  
                          l1256 0215                            l1096 01CE                            l1248 01FF  
                          l1328 0109                            l1280 0053                            l1272 003D  
                          l1258 0219                            l1098 01E2                            l1290 007D  
                          l1282 005D                            l1274 0040                            l1266 0025  
                          l1292 0083                            l1284 0063                            l1276 0041  
                          l1268 0035                            l1294 008D                            l1286 006D  
                          l1278 0042                            l1296 0093                            l1288 0073  
                          l1298 009D                            ?_isr 0070                            _BRGH 04C2  
                          _CREN 00C4                            _RCIF 0065                            i1l82 023B  
                          i1l93 022C                            i1l85 0241                            i1l79 0235  
                          _SPEN 00C7                            _TRMT 04C1                            _TXEN 04C5  
                          _SYNC 04C4                    __CFG_WRT$OFF 0000                            _date 0029  
                          _main 0025                            _ctrl 0020                            _hour 002B  
                          _humo 0025                            _year 0027                            btemp 007E  
                          start 000C                   __CFG_IESO$OFF 0000               ___bmul@multiplier 002D  
                         ??_isr 0071                           ?_main 0070                   __CFG_WDTE$OFF 0000  
                         _ANSEL 0188                           _ENVIO 0078                           i1l179 01C7  
                         _RCREG 001A                           u42_20 023B                           u50_20 0159  
                         u42_21 023A                           u50_21 0158                           _SPBRG 0099  
                         u51_20 0168                           u51_21 0167                           _PORTA 0005  
                         _PORTB 0006                           u52_20 0177                           u52_21 0176  
                         u53_20 0186                           u53_21 0185                           u54_20 0195  
                         u54_21 0194                           u55_20 01A4                           u47_20 0131  
                         u55_21 01A3                           u47_21 0130                           u56_20 01B3  
                         u48_20 013E                           u56_21 01B2                           u48_21 013D  
                         u49_20 014A                           u49_21 0149                           _TRISA 0085  
                         _TRISB 0086                           _SSPIF 0063                           _TXREG 0019  
                __CFG_FCMEN$OFF 0000                           _month 0028                           _resta 0021  
                         _sismo 0024                  __CFG_BOREN$OFF 0000                           pclath 000A  
               __end_of_spiInit 020D                 __end_of_spiRead 022D                           status 0003  
                         wtemp0 007E                  __CFG_MCLRE$OFF 0000                 __initialization 000F  
                  __end_of_main 012B                          ??_main 002F                          _ANSELH 0189  
                        i1l1130 0131                          i1l1140 0153                          i1l1132 0139  
                        i1l1150 0177                          i1l1142 0159                          i1l1134 013E  
                        i1l1160 019E                          i1l1152 0180                          i1l1144 0162  
                        i1l1136 0145                          i1l1128 012B                          i1l1090 0224  
                        i1l1162 01A4                          i1l1154 0186                          i1l1146 0168  
                        i1l1138 014A                          i1l1170 01C4                          i1l1076 0235  
                        i1l1092 0229                          i1l1164 01AD                          i1l1156 018F  
                        i1l1148 0171                          i1l1166 01B3                          i1l1158 0195  
                        i1l1088 023D                          i1l1168 01BC                          _C_UART 0079  
                        _TRISC3 043B                          _TRISC5 043D                          _TRISC6 043E  
                        _TRISC7 043F                          _SSPCON 0014                          _SSPBUF 0013  
                __CFG_PWRTE$OFF 0000                          ___bmul 020D                          _cambio 0022  
         _recibe_caracter_usart 022D                          saved_w 007E                __end_of_spiWrite 0242  
                     ??_spiInit 0074                       ??_spiRead 0070         __end_of__initialization 0021  
           ___bmul@multiplicand 0074                  __pcstackCOMMON 0070                      __pbssBANK0 0020  
                    __pmaintext 0025                         ?___bmul 0074                      __pintentry 0004  
       __size_of_spiReceiveWait 0007          ?_recibe_caracter_usart 0070                         _SSPSTAT 0094  
                     ?_spiWrite 0070                 __size_of___bmul 0017                      _init_usart 01CE  
                       __ptext1 01EF                         __ptext2 022D                         __ptext3 01CE  
                       __ptext4 020D                         __ptext5 012B                         __ptext6 023C  
                       __ptext7 0224                         __ptext8 0235                    __size_of_isr 00A3  
                       _spiInit 01EF                         _spiRead 0224            end_of_initialization 0021  
                     _RCSTAbits 0018                      ??_spiWrite 0070                       _TRISCbits 0087  
                   spiWrite@dat 0070                       _TXSTAbits 0098                  _spiReceiveWait 0235  
                __end_of___bmul 0224                     _BAUDCTLbits 0187                     ?_init_usart 0070  
           start_initialization 000F                     __end_of_isr 01CE        __CFG_FOSC$INTRC_NOCLKOUT 0000  
        __end_of_spiReceiveWait 023C                        ??___bmul 0075         ??_recibe_caracter_usart 0074  
                   __pbssCOMMON 0076                       ___latbits 0002                   __pcstackBANK0 002C  
           __size_of_init_usart 0021                 ?_spiReceiveWait 0070               __size_of_spiWrite 0006  
                      ?_spiInit 002C                        ?_spiRead 0070            spiInit@sTransmitEdge 002E  
             interrupt_function 0004                        _PIE1bits 008C              spiInit@sDataSample 002C  
                      _PIR1bits 000C                    ??_init_usart 0074                __size_of_spiInit 001E  
              __size_of_spiRead 0009               __CFG_BOR4V$BOR40V 0000                        _contador 0023  
                 __size_of_main 0106              __end_of_init_usart 01EF                        _spiWrite 023C  
                      _unidades 0076                    spiInit@sType 0074  __size_of_recibe_caracter_usart 0008  
             spiInit@sClockIdle 002D   __end_of_recibe_caracter_usart 0235                      _INTCONbits 000B  
                      intlevel1 0000                ??_spiReceiveWait 0070                     _temperatura 0026  
